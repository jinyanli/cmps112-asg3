@c Define the class index, method index, and selector cross-reference
@ifclear CLASS-INDICES
@set CLASS-INDICES
@defindex cl
@defcodeindex me
@defcodeindex sl 
@end ifclear

@c These are used for both TeX and HTML
@set BEFORE1
@set  AFTER1
@set BEFORE2
@set  AFTER2

@ifinfo
@c Use asis so that leading and trailing spaces are meaningful.
@c Remember we're inside a @menu command, hence the blanks are
@c kept in the output.
@set BEFORE1 @asis{* }
@set  AFTER1 @asis{::}
@set BEFORE2 @asis{  (}
@set  AFTER2 @asis{)}
@end ifinfo

@macro class {a,b}
@value{BEFORE1}\a\\a\@b{\b\}@value{AFTER1}
@end macro
@macro superclass {a,b}
\a\\a\@value{BEFORE2}@i{\b\}@value{AFTER2}
@end macro

@ifnotinfo
@macro begindetailmenu
@display
@end macro
@macro enddetailmenu
@end display
@end macro
@end ifnotinfo

@ifinfo
@macro begindetailmenu
@detailmenu
@end macro
@macro enddetailmenu
@end detailmenu
@end macro
@end ifinfo

@iftex
@macro beginmenu
@end macro
@macro endmenu
@end macro
@end iftex

@ifnottex
@macro beginmenu
@menu
@end macro
@macro endmenu
@end menu
@end macro
@end ifnottex

@beginmenu
@ifnottex
Alphabetic list:
* Complex::
@end ifnottex

@ifinfo
Class tree:
@end ifinfo
@iftex
@section Tree
@end iftex
@ifnotinfo

Classes documented in this manual are @b{boldfaced}.

@end ifnotinfo
@begindetailmenu
@superclass{@t{}, Object}
@superclass{@t{ }, Magnitude}
@superclass{@t{  }, Number}
@class{@t{   }, Complex}
@enddetailmenu
@endmenu
@unmacro class
@unmacro superclass
@unmacro endmenu
@unmacro beginmenu
@unmacro enddetailmenu
@unmacro begindetailmenu
@node Complex
@section Complex
@clindex Complex

@table @b
@item Defined in namespace Smalltalk
@itemx Superclass: Number
@itemx Category: Examples-Useful
I provide complex numbers, with full interoperability
with other kinds of numbers.  Complex numbers can be created from imaginary
numbers, which in turn are created with `Complex i' or the #i method
(e.g. `3 i').  Alternatively, they can be created from polar numbers.
@end table

@menu
* Complex class-instance creation::  (class)
* Complex-comparing::  (instance)
* Complex-converting::  (instance)
* Complex-creation/coercion::  (instance)
* Complex-math::  (instance)
* Complex-printing::  (instance)
* Complex-testing::  (instance)
* Complex-transcendental functions::  (instance)
@end menu



@node Complex class-instance creation
@subsection Complex class:@- instance creation

@table @b
@meindex i
@item i
Return the imaginary unit, -1 sqrt.


@meindex initialize
@item initialize
Initialize some common complex numbers.


@meindex new
@item new
This method should not be called for instances of this class.

@meindex real:@-imaginary:@-
@item real:@- re imaginary:@- im
Return a complex number with the given real and imaginary parts.


@meindex realResult:@-imaginary:@-
@item realResult:@- re imaginary:@- im
Private - Return a new complex number knowing that re and im have the
same generality.


@meindex rho:@-theta:@-
@item rho:@- dist theta:@- angle
Return a complex number whose absolute value is dist and whose
argument is angle.


@end table



@node Complex-comparing
@subsection Complex:@- comparing

@table @b
@meindex <
@item < aNumber
Not commented.

@meindex <=
@item <= aNumber
Not commented.

@meindex =
@item = aNumber
Not commented.

@meindex >
@item > aNumber
Not commented.

@meindex >=
@item >= aNumber
Not commented.

@meindex hash
@item hash
Not commented.

@meindex ~=
@item ~= aNumber
Not commented.

@end table



@node Complex-converting
@subsection Complex:@- converting

@table @b
@meindex asExactFraction
@item asExactFraction
Not commented.

@meindex asFloat
@item asFloat
Not commented.

@meindex asFloatD
@item asFloatD
Not commented.

@meindex asFloatE
@item asFloatE
Not commented.

@meindex asFloatQ
@item asFloatQ
Not commented.

@meindex asFraction
@item asFraction
Not commented.

@meindex ceiling
@item ceiling
Not commented.

@meindex floor
@item floor
Not commented.

@meindex rounded
@item rounded
Not commented.

@meindex truncated
@item truncated
Not commented.

@end table



@node Complex-creation/coercion
@subsection Complex:@- creation/coercion

@table @b
@meindex coerce:@-
@item coerce:@- aNumber
Not commented.

@meindex generality
@item generality
Not commented.

@meindex i
@item i
Return the receiver multiplied by the imaginary unit.


@meindex imaginary
@item imaginary
Answer `im'.

@meindex isComplex
@item isComplex
Answer `true'.

@meindex one
@item one
Answer `One'.

@meindex real
@item real
Answer `re'.

@meindex setReal:@-imaginary:@-
@item setReal:@- real imaginary:@- imag
Not commented.

@meindex zero
@item zero
Answer `Zero'.

@end table



@node Complex-math
@subsection Complex:@- math

@table @b
@meindex *
@item * z
Multiply the receiver by the (real or complex) number z.


@meindex +
@item + z
Sum the receiver with the (real or complex) number z.


@meindex -
@item - z
Subtract the (real or complex) number z from the receiver.


@meindex /
@item / z
Divide the receiver by the (real or complex) number z.


@meindex abs
@item abs
Return the absolute value of the receiver.


@meindex absSquared
@item absSquared
Return the squared absolute value of the receiver.


@meindex conjugate
@item conjugate
Return the complex conjugate of the receiver.


@meindex reciprocal
@item reciprocal
Return the reciprocal of the receiver.


@end table



@node Complex-printing
@subsection Complex:@- printing

@table @b
@meindex printOn:@-
@item printOn:@- aStream
Not commented.

@meindex storeOn:@-
@item storeOn:@- aStream
Not commented.

@end table



@node Complex-testing
@subsection Complex:@- testing

@table @b
@meindex isExact
@item isExact
Answer whether the receiver performs exact arithmetic.  Complex
numbers do so as long as both parts, real and imaginary, are exact.


@end table



@node Complex-transcendental functions
@subsection Complex:@- transcendental functions

@table @b
@meindex arcTan
@item arcTan
Return the arc-tangent of the receiver.


@meindex arcTan:@-
@item arcTan:@- aNumber
Return the arc-tangent of aNumber divided by the receiver.


@meindex arg
@item arg
Return the argument of the receiver.


@meindex cos
@item cos
Return the cosine of the receiver.


@meindex cosh
@item cosh
Return the hyperbolic cosine of the receiver.


@meindex exp
@item exp
Return e raised to the receiver.


@meindex ln
@item ln
Return the natural logarithm of the receiver.


@meindex log
@item log
Return the base-10 logarithm of the receiver.


@meindex sin
@item sin
Return the sine of the receiver.


@meindex sinh
@item sinh
Return the hyperbolic sine of the receiver.


@meindex sqrt
@item sqrt
Return the square root of the receiver.  Can be improved!


@meindex tan
@item tan
Return the tangent of the receiver.


@meindex tanh
@item tanh
Return the hyperbolic tangent of the receiver.


@end table

