This is gst-base.info, produced by makeinfo version 4.13 from
/home/ich/source/smalltalk/release/smalltalk/doc/gst-base-fixed.texi.

INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Smalltalk base classes: (gst-base).   The GNU Smalltalk base classes.
END-INFO-DIR-ENTRY

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.2 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with no Front-Cover Texts,
     and with no Back-Cover Texts.  A copy of the license is included
     in the section entitled "GNU Free Documentation License".


File: gst-base.info,  Node: Random class-instance creation,  Next: Random class-shortcuts,  Up: Random

1.139.1 Random class: instance creation
---------------------------------------

new
     Create a new random number generator whose seed is given by the
     current time on the millisecond clock

seed: aFloat
     Create a new random number generator whose seed is aFloat



File: gst-base.info,  Node: Random class-shortcuts,  Next: Random-basic,  Prev: Random class-instance creation,  Up: Random

1.139.2 Random class: shortcuts
-------------------------------

between: low and: high
     Return a random integer between the given extrema

next
     Return a random number between 0 and 1 (excluded)

source
     Return a standard source of random numbers.



File: gst-base.info,  Node: Random-basic,  Next: Random-testing,  Prev: Random class-shortcuts,  Up: Random

1.139.3 Random: basic
---------------------

atEnd
     This stream never ends. Always answer false.

between: low and: high
     Return a random integer between low and high.

next
     Return the next random number in the sequence.

nextPut: value
     This method should not be called for instances of this class.



File: gst-base.info,  Node: Random-testing,  Prev: Random-basic,  Up: Random

1.139.4 Random: testing
-----------------------

chiSquare
     Compute the chi-square of the random that this class generates.

chiSquare: n range: r
     Return the chi-square deduced from calculating n random numbers in
     the 0..r range.



File: gst-base.info,  Node: ReadStream,  Next: ReadWriteStream,  Prev: Random,  Up: Base classes

1.140 ReadStream
================

Defined in namespace Smalltalk
Superclass: PositionableStream
Category: Streams-Collections
     I implement the set of read-only stream objects.  You may read from
     my objects, but you may not write to them.

* Menu:

* ReadStream class-instance creation::  (class)


File: gst-base.info,  Node: ReadStream class-instance creation,  Up: ReadStream

1.140.1 ReadStream class: instance creation
-------------------------------------------

on: aCollection
     Answer a new stream working on aCollection from its start.

on: aCollection from: firstIndex to: lastIndex
     Answer an instance of the receiver streaming from the
     firstIndex-th item of aCollection to the lastIndex-th



File: gst-base.info,  Node: ReadWriteStream,  Next: Rectangle,  Prev: ReadStream,  Up: Base classes

1.141 ReadWriteStream
=====================

Defined in namespace Smalltalk
Superclass: WriteStream
Category: Streams-Collections
     I am the class of streams that may be read and written from
     simultaneously.  In some sense, I am the best of both ReadStream
     and WriteStream.

* Menu:

* ReadWriteStream class-instance creation::  (class)
* ReadWriteStream-positioning::  (instance)


File: gst-base.info,  Node: ReadWriteStream class-instance creation,  Next: ReadWriteStream-positioning,  Up: ReadWriteStream

1.141.1 ReadWriteStream class: instance creation
------------------------------------------------

on: aCollection
     Answer a new stream working on aCollection from its start. The
     stream starts at the front of aCollection.

on: aCollection from: firstIndex to: lastIndex
     Answer an instance of the receiver streaming from the
     firstIndex-th item of aCollection to the lastIndex-th

with: aCollection
     Answer a new instance of the receiver which streams from the end
     of aCollection.



File: gst-base.info,  Node: ReadWriteStream-positioning,  Prev: ReadWriteStream class-instance creation,  Up: ReadWriteStream

1.141.2 ReadWriteStream: positioning
------------------------------------

contents
     Unlike WriteStreams, ReadWriteStreams return the whole contents of
     the underlying collection.



File: gst-base.info,  Node: Rectangle,  Next: RecursionLock,  Prev: ReadWriteStream,  Up: Base classes

1.142 Rectangle
===============

Defined in namespace Smalltalk
Superclass: Object
Category: Language-Data types
     Beginning of the Rectangle class for simple display manipulation.
     Rectangles require the Point class to be available.  An extension
     to the Point class is made here that since it requires Rectangles
     to be defined (see converting)

* Menu:

* Rectangle class-instance creation::  (class)
* Rectangle-accessing::  (instance)
* Rectangle-copying::  (instance)
* Rectangle-printing::  (instance)
* Rectangle-rectangle functions::  (instance)
* Rectangle-testing::  (instance)
* Rectangle-transforming::  (instance)
* Rectangle-truncation and round off::  (instance)


File: gst-base.info,  Node: Rectangle class-instance creation,  Next: Rectangle-accessing,  Up: Rectangle

1.142.1 Rectangle class: instance creation
------------------------------------------

left: leftNumber right: rightNumber top: topNumber bottom: bottomNumber
     Answer a rectangle with the given coordinates

left: leftNumber top: topNumber right: rightNumber bottom: bottomNumber
     Answer a rectangle with the given coordinates

new
     Answer the (0 @ 0 corner: 0 @ 0) rectangle

origin: originPoint corner: cornerPoint
     Answer a rectangle with the given corners

origin: originPoint extent: extentPoint
     Answer a rectangle with the given origin and size



File: gst-base.info,  Node: Rectangle-accessing,  Next: Rectangle-copying,  Prev: Rectangle class-instance creation,  Up: Rectangle

1.142.2 Rectangle: accessing
----------------------------

bottom
     Answer the corner's y of the receiver

bottom: aNumber
     Set the corner's y of the receiver

bottomCenter
     Answer the center of the receiver's bottom side

bottomLeft
     Answer the bottom-left corner of the receiver

bottomLeft: aPoint
     Answer the receiver with the bottom-left changed to aPoint

bottomRight
     Answer the bottom-right corner of the receiver

bottomRight: aPoint
     Change the bottom-right corner of the receiver

center
     Answer the center of the receiver

corner
     Answer the corner of the receiver

corner: aPoint
     Set the corner of the receiver

extent
     Answer the extent of the receiver

extent: aPoint
     Change the size of the receiver, keeping the origin the same

height
     Answer the height of the receiver

height: aNumber
     Set the height of the receiver

left
     Answer the x of the left edge of the receiver

left: aValue
     Set the x of the left edge of the receiver

left: l top: t right: r bottom: b
     Change all four the coordinates of the receiver's corners

leftCenter
     Answer the center of the receiver's left side

origin
     Answer the top-left corner of the receiver

origin: aPoint
     Change the top-left corner of the receiver to aPoint

origin: pnt1 corner: pnt2
     Change both the origin (top-left corner) and the corner
     (bottom-right corner) of the receiver

origin: pnt1 extent: pnt2
     Change the top-left corner and the size of the receiver

right
     Answer the x of the bottom-right corner of the receiver

right: aNumber
     Change the x of the bottom-right corner of the receiver

rightCenter
     Answer the center of the receiver's right side

top
     Answer the y of the receiver's top-left corner

top: aValue
     Change the y of the receiver's top-left corner

topCenter
     Answer the center of the receiver's top side

topLeft
     Answer the receiver's top-left corner

topLeft: aPoint
     Change the receiver's top-left corner's coordinates to aPoint

topRight
     Answer the receiver's top-right corner

topRight: aPoint
     Change the receiver's top-right corner to aPoint

width
     Answer the receiver's width

width: aNumber
     Change the receiver's width to aNumber



File: gst-base.info,  Node: Rectangle-copying,  Next: Rectangle-printing,  Prev: Rectangle-accessing,  Up: Rectangle

1.142.3 Rectangle: copying
--------------------------

copy
     Return a deep copy of the receiver for safety.



File: gst-base.info,  Node: Rectangle-printing,  Next: Rectangle-rectangle functions,  Prev: Rectangle-copying,  Up: Rectangle

1.142.4 Rectangle: printing
---------------------------

printOn: aStream
     Print a representation of the receiver on aStream

storeOn: aStream
     Store Smalltalk code compiling to the receiver on aStream



File: gst-base.info,  Node: Rectangle-rectangle functions,  Next: Rectangle-testing,  Prev: Rectangle-printing,  Up: Rectangle

1.142.5 Rectangle: rectangle functions
--------------------------------------

amountToTranslateWithin: aRectangle
     Answer a Point so that if aRectangle is translated by that point,
     its origin lies within the receiver's.

area
     Answer the receiver's area. The area is the width times the height,
     so it is possible for it to be negative if the rectangle is not
     normalized.

areasOutside: aRectangle
     Answer a collection of rectangles containing the parts of the
     receiver outside of aRectangle. For all points in the receiver,
     but outside aRectangle, exactly one rectangle in the collection
     will contain that point.

expandBy: delta
     Answer a new rectangle that is the receiver expanded by aValue: if
     aValue is a rectangle, calculate origin=origin-aValue origin,
     corner=corner+aValue corner; else calculate origin=origin-aValue,
     corner=corner+aValue.

insetBy: delta
     Answer a new rectangle that is the receiver inset by aValue: if
     aValue is a rectangle, calculate origin=origin+aValue origin,
     corner=corner-aValue corner; else calculate origin=origin+aValue,
     corner=corner-aValue.

insetOriginBy: originDelta corner: cornerDelta
     Answer a new rectangle that is the receiver inset so that
     origin=origin+originDelta, corner=corner-cornerDelta.  The deltas
     can be points or numbers

intersect: aRectangle
     Answers the rectangle (if any) created by the overlap of
     rectangles A and B.  Answers nil if the rectangles do not overlap

merge: aRectangle
     Answer a new rectangle which is the smallest rectangle containing
     both the receiver and aRectangle.

translatedToBeWithin: aRectangle
     Answer a copy of the receiver that does not extend beyond
     aRectangle.



File: gst-base.info,  Node: Rectangle-testing,  Next: Rectangle-transforming,  Prev: Rectangle-rectangle functions,  Up: Rectangle

1.142.6 Rectangle: testing
--------------------------

= aRectangle
     Answer whether the receiver is equal to aRectangle

contains: aRectangle
     Answer true if the receiver contains (see containsPoint:) both
     aRectangle's origin and aRectangle's corner

containsPoint: aPoint
     Answer true if aPoint is equal to, or below and to the right of,
     the receiver's origin; and aPoint is above and to the left of the
     receiver's corner

hash
     Answer an hash value for the receiver

intersects: aRectangle
     Answer true if the receiver intersect aRectangle, i.e. if it
     contains (see containsPoint:) any of aRectangle corners or if
     aRectangle contains the receiver



File: gst-base.info,  Node: Rectangle-transforming,  Next: Rectangle-truncation and round off,  Prev: Rectangle-testing,  Up: Rectangle

1.142.7 Rectangle: transforming
-------------------------------

moveBy: aPoint
     Change the receiver so that the origin and corner are shifted by
     aPoint

moveTo: aPoint
     Change the receiver so that the origin moves to aPoint and the size
     remains unchanged

scaleBy: scale
     Answer a copy of the receiver in which the origin and corner are
     multiplied by scale

translateBy: factor
     Answer a copy of the receiver in which the origin and corner are
     shifted by aPoint



File: gst-base.info,  Node: Rectangle-truncation and round off,  Prev: Rectangle-transforming,  Up: Rectangle

1.142.8 Rectangle: truncation and round off
-------------------------------------------

rounded
     Answer a copy of the receiver with the coordinates rounded to the
     nearest integers



File: gst-base.info,  Node: RecursionLock,  Next: Regex,  Prev: Rectangle,  Up: Base classes

1.143 RecursionLock
===================

Defined in namespace Smalltalk
Superclass: Object
Category: Language-Processes

* Menu:

* RecursionLock class-instance creation::  (class)
* RecursionLock-accessing::  (instance)
* RecursionLock-mutual exclusion::  (instance)
* RecursionLock-printing::  (instance)


File: gst-base.info,  Node: RecursionLock class-instance creation,  Next: RecursionLock-accessing,  Up: RecursionLock

1.143.1 RecursionLock class: instance creation
----------------------------------------------

new
     Answer a new semaphore



File: gst-base.info,  Node: RecursionLock-accessing,  Next: RecursionLock-mutual exclusion,  Prev: RecursionLock class-instance creation,  Up: RecursionLock

1.143.2 RecursionLock: accessing
--------------------------------

isOwnerProcess
     Answer whether the receiver is the owner of the lock.

name
     Answer a user-defined name for the lock.

name: aString
     Set to aString the user-defined name for the lock.

waitingProcesses
     Answer the set of processes that are waiting on the semaphore.

wouldBlock
     Answer whether sending #wait to the receiver would suspend the
     active process.



File: gst-base.info,  Node: RecursionLock-mutual exclusion,  Next: RecursionLock-printing,  Prev: RecursionLock-accessing,  Up: RecursionLock

1.143.3 RecursionLock: mutual exclusion
---------------------------------------

critical: aBlock
     Wait for the receiver to be free, execute aBlock and signal the
     receiver again. Return the result of evaluating aBlock.



File: gst-base.info,  Node: RecursionLock-printing,  Prev: RecursionLock-mutual exclusion,  Up: RecursionLock

1.143.4 RecursionLock: printing
-------------------------------

printOn: aStream
     Print a human-readable represention of the receiver on aStream.



File: gst-base.info,  Node: Regex,  Next: RegexResults,  Prev: RecursionLock,  Up: Base classes

1.144 Regex
===========

Defined in namespace Smalltalk
Superclass: Object
Category: Collections-Text
     A Regex is a read-only string for which the regular expression
     matcher can cache a compiled representation, thus speeding up
     matching.  Regex objects are constructed automatically by methods
     that expect to match many times the same regular expression, but
     can also be constructed explicitly sending #asRegex to a String or
     Symbol.

     Creation of Regex objects inside a loop is of course slower than
     creating them outside the loop, but special care is taken so that
     the same Regex object is used whenever possible (when converting
     Strings to Regex, the cache is sought for an equivalent, already
     constructed Regex).

* Menu:

* Regex class-instance creation::  (class)
* Regex-basic::  (instance)
* Regex-conversion::  (instance)
* Regex-printing::  (instance)


File: gst-base.info,  Node: Regex class-instance creation,  Next: Regex-basic,  Up: Regex

1.144.1 Regex class: instance creation
--------------------------------------

fromString: aString
     Like `aString asRegex'.

new
     Do not send this message.



File: gst-base.info,  Node: Regex-basic,  Next: Regex-conversion,  Prev: Regex class-instance creation,  Up: Regex

1.144.2 Regex: basic
--------------------

at: anIndex put: anObject
     Fail.  Regex objects are read-only.

copy
     Answer the receiver; instances of Regex are identity objects
     because their only purpose is to ease caching, and we obtain
     better caching if we avoid copying Regex objects



File: gst-base.info,  Node: Regex-conversion,  Next: Regex-printing,  Prev: Regex-basic,  Up: Regex

1.144.3 Regex: conversion
-------------------------

asRegex
     Answer the receiver, which *is* a Regex!

asString
     Answer the receiver, converted back to a String

species
     Answer `String'.



File: gst-base.info,  Node: Regex-printing,  Prev: Regex-conversion,  Up: Regex

1.144.4 Regex: printing
-----------------------

displayOn: aStream
     Print a represention of the receiver on aStream. For most objects
     this is simply its #printOn: representation, but for strings and
     characters, superfluous dollars or extra pairs of quotes are
     stripped.

displayString
     Answer a String representing the receiver. For most objects this
     is simply its #printString, but for strings and characters,
     superfluous dollars or extra pair of quotes are stripped.

printOn: aStream
     Print a represention of the receiver on aStream.



File: gst-base.info,  Node: RegexResults,  Next: RootNamespace,  Prev: Regex,  Up: Base classes

1.145 RegexResults
==================

Defined in namespace Smalltalk
Superclass: Object
Category: Collections-Text
     I hold the results of a regular expression match, and I can
     reconstruct which parts of the matched string were assigned to
     each subexpression.  Methods such as #=~ return RegexResults
     objects, while others transform the string directly without
     passing the results object back to the caller.

* Menu:

* RegexResults-accessing::  (instance)
* RegexResults-testing::  (instance)


File: gst-base.info,  Node: RegexResults-accessing,  Next: RegexResults-testing,  Up: RegexResults

1.145.1 RegexResults: accessing
-------------------------------

asArray
     If the regular expression was matched, return an Array with the
     subexpressions that were present in the regular expression.

at: anIndex
     If the regular expression was matched, return the text of the
     anIndex-th subexpression in the successful match.

from
     If the regular expression was matched, return the index of the
     first character in the successful match.

fromAt: anIndex
     If the regular expression was matched, return the index of the
     first character of the anIndex-th subexpression in the successful
     match.

intervalAt: anIndex
     If the regular expression was matched, return an Interval for the
     range of indices in the anIndex-th subexpression of the successful
     match.

match
     If the regular expression was matched, return the text of the
     successful match.

matchInterval
     If the regular expression was matched, return an Interval for the
     range of indices of the successful match.

size
     If the regular expression was matched, return the number of
     subexpressions that were present in the regular expression.

subject
     If the regular expression was matched, return the text that was
     matched against it.

to
     If the regular expression was matched, return the index of the
     last character in the successful match.

toAt: anIndex
     If the regular expression was matched, return the index of the last
     character of the anIndex-th subexpression in the successful match.



File: gst-base.info,  Node: RegexResults-testing,  Prev: RegexResults-accessing,  Up: RegexResults

1.145.2 RegexResults: testing
-----------------------------

ifMatched: oneArgBlock
     If the regular expression was matched, pass the receiver to
     oneArgBlock and return its result.  Otherwise, return nil.

ifMatched: oneArgBlock ifNotMatched: zeroArgBlock
     If the regular expression was matched, evaluate oneArgBlock with
     the receiver as the argument.  If it was not, evaluate
     zeroArgBlock.  Answer the result of the block's evaluation.

ifNotMatched: zeroArgBlock
     If the regular expression was matched, return the receiver.  If it
     was not, evaluate zeroArgBlock and return its result.

ifNotMatched: zeroArgBlock ifMatched: oneArgBlock
     If the regular expression was matched, evaluate oneArgBlock with
     the receiver as the argument.  If it was not, evaluate
     zeroArgBlock.  Answer the result of the block's evaluation.

matched
     Answer whether the regular expression was matched



File: gst-base.info,  Node: RootNamespace,  Next: RunArray,  Prev: RegexResults,  Up: Base classes

1.146 RootNamespace
===================

Defined in namespace Smalltalk
Superclass: AbstractNamespace
Category: Language-Implementation
     I am a special form of dictionary.  Classes hold on an instance of
     me; it is called their `environment'.

* Menu:

* RootNamespace class-instance creation::  (class)
* RootNamespace-namespace hierarchy::  (instance)
* RootNamespace-overrides for superspaces::  (instance)
* RootNamespace-printing::  (instance)


File: gst-base.info,  Node: RootNamespace class-instance creation,  Next: RootNamespace-namespace hierarchy,  Up: RootNamespace

1.146.1 RootNamespace class: instance creation
----------------------------------------------

new: spaceName
     Create a new root namespace with the given name, and add to
     Smalltalk a key that references it.



File: gst-base.info,  Node: RootNamespace-namespace hierarchy,  Next: RootNamespace-overrides for superspaces,  Prev: RootNamespace class-instance creation,  Up: RootNamespace

1.146.2 RootNamespace: namespace hierarchy
------------------------------------------

siblings
     Answer all the other root namespaces

siblingsDo: aBlock
     Evaluate aBlock once for each of the other root namespaces,
     passing the namespace as a parameter.



File: gst-base.info,  Node: RootNamespace-overrides for superspaces,  Next: RootNamespace-printing,  Prev: RootNamespace-namespace hierarchy,  Up: RootNamespace

1.146.3 RootNamespace: overrides for superspaces
------------------------------------------------

inheritedKeys
     Answer a Set of all the keys in the receiver and its superspaces

set: key to: newValue ifAbsent: aBlock
     Assign newValue to the variable named as specified by `key'.  This
     method won't define a new variable; instead if the key is not
     found it will search in superspaces and evaluate aBlock if it is
     not found. Answer newValue.



File: gst-base.info,  Node: RootNamespace-printing,  Prev: RootNamespace-overrides for superspaces,  Up: RootNamespace

1.146.4 RootNamespace: printing
-------------------------------

nameIn: aNamespace
     Answer Smalltalk code compiling to the receiver when the current
     namespace is aNamespace

printOn: aStream in: aNamespace
     Print on aStream some Smalltalk code compiling to the receiver
     when the current namespace is aNamespace

storeOn: aStream
     Store Smalltalk code compiling to the receiver



File: gst-base.info,  Node: RunArray,  Next: ScaledDecimal,  Prev: RootNamespace,  Up: Base classes

1.147 RunArray
==============

Defined in namespace Smalltalk
Superclass: OrderedCollection
Category: Collections-Sequenceable
     My instances are OrderedCollections that automatically apply Run
     Length Encoding compression to the things they store. Be careful
     when using me: I can provide great space savings, but my instances
     don't grant linear access time. RunArray's behavior currently is
     similar to that of OrderedCollection (you can add elements to
     RunArrays); maybe it should behave like an ArrayedCollection.

* Menu:

* RunArray class-instance creation::  (class)
* RunArray-accessing::  (instance)
* RunArray-adding::  (instance)
* RunArray-basic::  (instance)
* RunArray-copying::  (instance)
* RunArray-enumerating::  (instance)
* RunArray-removing::  (instance)
* RunArray-searching::  (instance)
* RunArray-testing::  (instance)


File: gst-base.info,  Node: RunArray class-instance creation,  Next: RunArray-accessing,  Up: RunArray

1.147.1 RunArray class: instance creation
-----------------------------------------

new
     Answer an empty RunArray

new: aSize
     Answer a RunArray with space for aSize runs



File: gst-base.info,  Node: RunArray-accessing,  Next: RunArray-adding,  Prev: RunArray class-instance creation,  Up: RunArray

1.147.2 RunArray: accessing
---------------------------

at: anIndex
     Answer the element at index anIndex

at: anIndex put: anObject
     Replace the element at index anIndex with anObject and answer
     anObject



File: gst-base.info,  Node: RunArray-adding,  Next: RunArray-basic,  Prev: RunArray-accessing,  Up: RunArray

1.147.3 RunArray: adding
------------------------

add: anObject afterIndex: anIndex
     Add anObject after the element at index anIndex

addAll: aCollection afterIndex: anIndex
     Add all the elements of aCollection after the one at index
     anIndex. If aCollection is unordered, its elements could be added
     in an order which is not the #do: order

addAllFirst: aCollection
     Add all the elements of aCollection at the beginning of the
     receiver. If aCollection is unordered, its elements could be added
     in an order which is not the #do: order

addAllLast: aCollection
     Add all the elements of aCollection at the end of the receiver. If
     aCollection is unordered, its elements could be added in an order
     which is not the #do: order

addFirst: anObject
     Add anObject at the beginning of the receiver. Watch out: this
     operation can cause serious performance pitfalls

addLast: anObject
     Add anObject at the end of the receiver



File: gst-base.info,  Node: RunArray-basic,  Next: RunArray-copying,  Prev: RunArray-adding,  Up: RunArray

1.147.4 RunArray: basic
-----------------------

first
     Answer the first element in the receiver

last
     Answer the last element of the receiver

size
     Answer the number of elements in the receiver



File: gst-base.info,  Node: RunArray-copying,  Next: RunArray-enumerating,  Prev: RunArray-basic,  Up: RunArray

1.147.5 RunArray: copying
-------------------------

deepCopy
     Answer a copy of the receiver containing copies of the receiver's
     elements (#copy is used to obtain them)

shallowCopy
     Answer a copy of the receiver. The elements are not copied



File: gst-base.info,  Node: RunArray-enumerating,  Next: RunArray-removing,  Prev: RunArray-copying,  Up: RunArray

1.147.6 RunArray: enumerating
-----------------------------

do: aBlock
     Enumerate all the objects in the receiver, passing each one to
     aBlock

objectsAndRunLengthsDo: aBlock
     Enumerate all the runs in the receiver, passing to aBlock two
     parameters for every run: the first is the repeated object, the
     second is the number of copies



File: gst-base.info,  Node: RunArray-removing,  Next: RunArray-searching,  Prev: RunArray-enumerating,  Up: RunArray

1.147.7 RunArray: removing
--------------------------

removeAtIndex: anIndex
     Remove the object at index anIndex from the receiver and answer the
     removed object

removeFirst
     Remove the first object from the receiver and answer the removed
     object

removeLast
     Remove the last object from the receiver and answer the removed
     object



File: gst-base.info,  Node: RunArray-searching,  Next: RunArray-testing,  Prev: RunArray-removing,  Up: RunArray

1.147.8 RunArray: searching
---------------------------

indexOf: anObject startingAt: anIndex ifAbsent: aBlock
     Answer the index of the first copy of anObject in the receiver,
     starting the search at the element at index anIndex. If no equal
     object is found, answer the result of evaluating aBlock



File: gst-base.info,  Node: RunArray-testing,  Prev: RunArray-searching,  Up: RunArray

1.147.9 RunArray: testing
-------------------------

= anObject
     Answer true if the receiver is equal to anObject

hash
     Answer an hash value for the receiver



File: gst-base.info,  Node: ScaledDecimal,  Next: SecurityPolicy,  Prev: RunArray,  Up: Base classes

1.148 ScaledDecimal
===================

Defined in namespace Smalltalk
Superclass: Number
Category: Language-Data types
     ScaledDecimal provides a numeric representation of fixed point
     decimal numbers able to accurately represent decimal fractions.
     It supports unbounded precision, with no limit to the number of
     digits before and after the decimal point.

* Menu:

* ScaledDecimal class-instance creation::  (class)
* ScaledDecimal-arithmetic::  (instance)
* ScaledDecimal-coercion::  (instance)
* ScaledDecimal-comparing::  (instance)
* ScaledDecimal-constants::  (instance)
* ScaledDecimal-printing::  (instance)
* ScaledDecimal-storing::  (instance)


File: gst-base.info,  Node: ScaledDecimal class-instance creation,  Next: ScaledDecimal-arithmetic,  Up: ScaledDecimal

1.148.1 ScaledDecimal class: instance creation
----------------------------------------------

newFromNumber: aNumber scale: scale
     Answer a new instance of ScaledDecimal, representing a decimal
     fraction with a decimal representation considered valid up to the
     scale-th digit.



File: gst-base.info,  Node: ScaledDecimal-arithmetic,  Next: ScaledDecimal-coercion,  Prev: ScaledDecimal class-instance creation,  Up: ScaledDecimal

1.148.2 ScaledDecimal: arithmetic
---------------------------------

* aNumber
     Multiply two numbers and answer the result.

+ aNumber
     Sum two numbers and answer the result.

- aNumber
     Subtract aNumber from the receiver and answer the result.

/ aNumber
     Divide two numbers and answer the result.

// aNumber
     Answer the integer quotient after dividing the receiver by aNumber
     with truncation towards negative infinity.

\\ aNumber
     Answer the remainder after integer division the receiver by aNumber
     with truncation towards negative infinity.



File: gst-base.info,  Node: ScaledDecimal-coercion,  Next: ScaledDecimal-comparing,  Prev: ScaledDecimal-arithmetic,  Up: ScaledDecimal

1.148.3 ScaledDecimal: coercion
-------------------------------

asCNumber
     Convert the receiver to a kind of number that is understood by the
     C call-out mechanism.

asFloatD
     Answer the receiver, converted to a FloatD

asFloatE
     Answer the receiver, converted to a FloatE

asFloatQ
     Answer the receiver, converted to a FloatQ

asFraction
     Answer the receiver, converted to a Fraction

ceiling
     Answer the receiver, converted to an Integer and truncated towards
     +infinity.

coerce: aNumber
     Answer aNumber, converted to a ScaledDecimal with the same scale
     as the receiver.

fractionPart
     Answer the fractional part of the receiver.

generality
     Return the receiver's generality

integerPart
     Answer the fractional part of the receiver.

truncated
     Answer the receiver, converted to an Integer and truncated towards
     -infinity.



File: gst-base.info,  Node: ScaledDecimal-comparing,  Next: ScaledDecimal-constants,  Prev: ScaledDecimal-coercion,  Up: ScaledDecimal

1.148.4 ScaledDecimal: comparing
--------------------------------

< aNumber
     Answer whether the receiver is less than arg.

<= aNumber
     Answer whether the receiver is less than or equal to arg.

= arg
     Answer whether the receiver is equal to arg.

> aNumber
     Answer whether the receiver is greater than arg.

>= aNumber
     Answer whether the receiver is greater than or equal to arg.

hash
     Answer an hash value for the receiver.

~= arg
     Answer whether the receiver is not equal arg.



File: gst-base.info,  Node: ScaledDecimal-constants,  Next: ScaledDecimal-printing,  Prev: ScaledDecimal-comparing,  Up: ScaledDecimal

1.148.5 ScaledDecimal: constants
--------------------------------

one
     Answer the receiver's representation of one.

zero
     Answer the receiver's representation of zero.



File: gst-base.info,  Node: ScaledDecimal-printing,  Next: ScaledDecimal-storing,  Prev: ScaledDecimal-constants,  Up: ScaledDecimal

1.148.6 ScaledDecimal: printing
-------------------------------

displayOn: aStream
     Print a representation of the receiver on aStream, intended to be
     directed to a user.  In this particular case, the `scale' part of
     the #printString is not emitted.

printOn: aStream
     Print a representation of the receiver on aStream.



File: gst-base.info,  Node: ScaledDecimal-storing,  Prev: ScaledDecimal-printing,  Up: ScaledDecimal

1.148.7 ScaledDecimal: storing
------------------------------

isLiteralObject
     Answer whether the receiver is expressible as a Smalltalk literal.

storeLiteralOn: aStream
     Store on aStream some Smalltalk code which compiles to the receiver

storeOn: aStream
     Print Smalltalk code that compiles to the receiver on aStream.



File: gst-base.info,  Node: SecurityPolicy,  Next: Semaphore,  Prev: ScaledDecimal,  Up: Base classes

1.149 SecurityPolicy
====================

Defined in namespace Smalltalk
Superclass: Object
Category: Language-Security
     I am the class that represents which operations that could harm
     the system's security are allowed or denied to a particular class.
     If a class does not have a policy, it is allowed everything if it
     is trusted, and denied everything if it is untrusted

* Menu:

* SecurityPolicy-modifying::  (instance)
* SecurityPolicy-querying::  (instance)


File: gst-base.info,  Node: SecurityPolicy-modifying,  Next: SecurityPolicy-querying,  Up: SecurityPolicy

1.149.1 SecurityPolicy: modifying
---------------------------------

addPermission: aPermission
     Not commented.

owner: aClass
     Not commented.

removePermission: aPermission
     Not commented.

withOwner: aClass
     Not commented.



File: gst-base.info,  Node: SecurityPolicy-querying,  Prev: SecurityPolicy-modifying,  Up: SecurityPolicy

1.149.2 SecurityPolicy: querying
--------------------------------

check: aPermission
     Not commented.

implies: aPermission
     Not commented.



File: gst-base.info,  Node: Semaphore,  Next: SequenceableCollection,  Prev: SecurityPolicy,  Up: Base classes

1.150 Semaphore
===============

Defined in namespace Smalltalk
Superclass: LinkedList
Category: Language-Processes
     My instances represent counting semaphores.  I provide methods for
     signalling the semaphore's availability, and methods for waiting
     for its availability.  I also provide some methods for
     implementing critical sections.

* Menu:

* Semaphore class-instance creation::  (class)
* Semaphore-accessing::  (instance)
* Semaphore-builtins::  (instance)
* Semaphore-mutual exclusion::  (instance)
* Semaphore-printing::  (instance)


File: gst-base.info,  Node: Semaphore class-instance creation,  Next: Semaphore-accessing,  Up: Semaphore

1.150.1 Semaphore class: instance creation
------------------------------------------

forMutualExclusion
     Answer a new semaphore with a signal on it. These semaphores are a
     useful shortcut when you use semaphores as critical sections.

new
     Answer a new semaphore



File: gst-base.info,  Node: Semaphore-accessing,  Next: Semaphore-builtins,  Prev: Semaphore class-instance creation,  Up: Semaphore

1.150.2 Semaphore: accessing
----------------------------

name
     Answer a user-friendly name for the receiver

name: aString
     Answer a user-friendly name for the receiver

waitingProcesses
     Answer an Array of processes currently waiting on the receiver.

wouldBlock
     Answer whether waiting on the receiver would suspend the current
     process.



File: gst-base.info,  Node: Semaphore-builtins,  Next: Semaphore-mutual exclusion,  Prev: Semaphore-accessing,  Up: Semaphore

1.150.3 Semaphore: builtins
---------------------------

lock
     Without putting the receiver to sleep, force processes that try to
     wait on the semaphore to block.  Answer whether this was the case
     even before.

notify
     Resume one of the processes that were waiting on the semaphore if
     there were any.  Do not leave a signal on the semaphore if no
     process is waiting.

notifyAll
     Resume all the processes that were waiting on the semaphore if
     there were any.  Do not leave a signal on the semaphore if no
     process is waiting.

signal
     Signal the receiver, resuming a waiting process' if there is one

wait
     Wait for the receiver to be signalled, suspending the executing
     process if it is not yet.  Return nil if the wait was interrupted,
     the receiver otherwise.

waitAfterSignalling: aSemaphore
     Signal aSemaphore then, atomically, wait for the receiver to be
     signalled, suspending the executing process if it is not yet.  This
     is needed to avoid race conditions when the #notify and #notifyAll
     are used before waiting on receiver: otherwise, if a process sends
     any of the two between the time aSemaphore is signaled and the time
     the process starts waiting on the receiver, the notification is
     lost.



File: gst-base.info,  Node: Semaphore-mutual exclusion,  Next: Semaphore-printing,  Prev: Semaphore-builtins,  Up: Semaphore

1.150.4 Semaphore: mutual exclusion
-----------------------------------

critical: aBlock
     Wait for the receiver to be free, execute aBlock and signal the
     receiver again. Return the result of evaluating aBlock.



File: gst-base.info,  Node: Semaphore-printing,  Prev: Semaphore-mutual exclusion,  Up: Semaphore

1.150.5 Semaphore: printing
---------------------------

printOn: aStream
     Print a human-readable represention of the receiver on aStream.



File: gst-base.info,  Node: SequenceableCollection,  Next: Set,  Prev: Semaphore,  Up: Base classes

1.151 SequenceableCollection
============================

Defined in namespace Smalltalk
Superclass: Collection
Category: Collections-Sequenceable
     My instances represent collections of objects that are ordered.  I
     provide some access and manipulation methods.

* Menu:

* SequenceableCollection class-instance creation::  (class)
* SequenceableCollection-basic::  (instance)
* SequenceableCollection-comparing::  (instance)
* SequenceableCollection-concatenating::  (instance)
* SequenceableCollection-copying SequenceableCollections::  (instance)
* SequenceableCollection-enumerating::  (instance)
* SequenceableCollection-manipulation::  (instance)
* SequenceableCollection-replacing items::  (instance)
* SequenceableCollection-sorting::  (instance)
* SequenceableCollection-still unclassified::  (instance)
* SequenceableCollection-testing::  (instance)
* SequenceableCollection-testing collections::  (instance)


File: gst-base.info,  Node: SequenceableCollection class-instance creation,  Next: SequenceableCollection-basic,  Up: SequenceableCollection

1.151.1 SequenceableCollection class: instance creation
-------------------------------------------------------

join: aCollection separatedBy: sepCollection
     Where aCollection is a collection of SequenceableCollections,
     answer a new instance with all the elements therein, in order,
     each separated by an occurrence of sepCollection.



File: gst-base.info,  Node: SequenceableCollection-basic,  Next: SequenceableCollection-comparing,  Prev: SequenceableCollection class-instance creation,  Up: SequenceableCollection

1.151.2 SequenceableCollection: basic
-------------------------------------

after: oldObject
     Return the element after oldObject.  Error if oldObject not found
     or if no following object is available

allButFirst
     Answer a copy of the receiver without the first object.

allButFirst: n
     Answer a copy of the receiver without the first n objects.

allButLast
     Answer a copy of the receiver without the last object.

allButLast: n
     Answer a copy of the receiver without the last n objects.

at: anIndex ifAbsent: aBlock
     Answer the anIndex-th item of the collection, or evaluate aBlock
     and answer the result if the index is out of range

atAll: keyCollection
     Answer a collection of the same kind returned by #collect:, that
     only includes the values at the given indices. Fail if any of the
     values in keyCollection is out of bounds for the receiver.

atAll: aCollection put: anObject
     Put anObject at every index contained in aCollection

atAllPut: anObject
     Put anObject at every index in the receiver

atRandom
     Return a random item of the receiver.

before: oldObject
     Return the element before oldObject.  Error if oldObject not found
     or if no preceding object is available

first
     Answer the first item in the receiver

first: n
     Answer the first n items in the receiver

fourth
     Answer the fourth item in the receiver

identityIncludes: anObject
     Answer whether we include the anObject object

identityIndexOf: anElement
     Answer the index of the first occurrence of an object identical to
     anElement in the receiver. Answer 0 if no item is found

identityIndexOf: anElement ifAbsent: exceptionBlock
     Answer the index of the first occurrence of an object identical to
     anElement in the receiver. Invoke exceptionBlock and answer its
     result if no item is found

identityIndexOf: anElement startingAt: anIndex
     Answer the first index > anIndex which contains an object identical
     to anElement. Answer 0 if no item is found

identityIndexOf: anObject startingAt: anIndex ifAbsent: exceptionBlock
     Answer the first index > anIndex which contains an object exactly
     identical to anObject.  Invoke exceptionBlock and answer its
     result if no item is found

identityIndexOfLast: anElement ifAbsent: exceptionBlock
     Answer the last index which contains an object identical to
     anElement.  Invoke exceptionBlock and answer its result if no item
     is found

includes: anObject
     Answer whether we include anObject

indexOf: anElement
     Answer the index of the first occurrence of anElement in the
     receiver.  Answer 0 if no item is found

indexOf: anElement ifAbsent: exceptionBlock
     Answer the index of the first occurrence of anElement in the
     receiver.  Invoke exceptionBlock and answer its result if no item
     is found

indexOf: anElement startingAt: anIndex
     Answer the first index > anIndex which contains anElement.  Answer
     0 if no item is found

indexOf: anElement startingAt: anIndex ifAbsent: exceptionBlock
     Answer the first index > anIndex which contains anElement.  Invoke
     exceptionBlock and answer its result if no item is found

indexOfLast: anElement ifAbsent: exceptionBlock
     Answer the last index which contains anElement.  Invoke
     exceptionBlock and answer its result if no item is found

indexOfSubCollection: aSubCollection
     Answer the first index > anIndex at which starts a sequence of
     items matching aSubCollection. Answer 0 if no such sequence is
     found.

indexOfSubCollection: aSubCollection ifAbsent: exceptionBlock
     Answer the first index > anIndex at which starts a sequence of
     items matching aSubCollection. Answer 0 if no such sequence is
     found.

indexOfSubCollection: aSubCollection startingAt: anIndex
     Answer the first index > anIndex at which starts a sequence of
     items matching aSubCollection. Answer 0 if no such sequence is
     found.

indexOfSubCollection: aSubCollection startingAt: anIndex ifAbsent: exceptionBlock
     Answer the first index > anIndex at which starts a sequence of
     items matching aSubCollection.  Invoke exceptionBlock and answer
     its result if no such sequence is found

last
     Answer the last item in the receiver

last: n
     Answer the last n items in the receiver

second
     Answer the second item in the receiver

third
     Answer the third item in the receiver



File: gst-base.info,  Node: SequenceableCollection-comparing,  Next: SequenceableCollection-concatenating,  Prev: SequenceableCollection-basic,  Up: SequenceableCollection

1.151.3 SequenceableCollection: comparing
-----------------------------------------

endsWith: aSequenceableCollection
     Returns true if the receiver ends with the same characters as
     aSequenceableCollection.

startsWith: aSequenceableCollection
     Returns true if the receiver starts with the same characters as
     aSequenceableCollection.



File: gst-base.info,  Node: SequenceableCollection-concatenating,  Next: SequenceableCollection-copying SequenceableCollections,  Prev: SequenceableCollection-comparing,  Up: SequenceableCollection

1.151.4 SequenceableCollection: concatenating
---------------------------------------------

join: sepCollection
     Answer a new collection like my first element, with all the
     elements (in order) of all my elements (which should be
     collections) separated by sepCollection.

     I use my first element instead of myself as a prototype because my
     elements are more likely to share the desired properties than I
     am, such as in:

     #('hello,' 'world') join: ' ' => 'hello, world'

with: aSequenceableCollection
     Return an Array with the same size as the receiver and
     aSequenceableCollection, each element of which is a 2-element
     Arrays including one element from the receiver and one from
     aSequenceableCollection.

with: seqColl1 with: seqColl2
     Return an Array with the same size as the receiver and the
     arguments, each element of which is a 3-element Arrays including
     one element from the receiver and one from each argument.

with: seqColl1 with: seqColl2 with: seqColl3
     Return an Array with the same size as the receiver and the
     arguments, each element of which is a 4-element Arrays including
     one element from the receiver and one from each argument.



File: gst-base.info,  Node: SequenceableCollection-copying SequenceableCollections,  Next: SequenceableCollection-enumerating,  Prev: SequenceableCollection-concatenating,  Up: SequenceableCollection

1.151.5 SequenceableCollection: copying SequenceableCollections
---------------------------------------------------------------

copyAfter: anObject
     Answer a new collection holding all the elements of the receiver
     after the first occurrence of anObject, up to the last.

copyAfterLast: anObject
     Answer a new collection holding all the elements of the receiver
     after the last occurrence of anObject, up to the last.

copyFrom: start
     Answer a new collection containing all the items in the receiver
     from the start-th.

copyFrom: start to: stop
     Answer a new collection containing all the items in the receiver
     from the start-th and to the stop-th

copyReplaceAll: oldSubCollection with: newSubCollection
     Answer a new collection in which all the sequences matching
     oldSubCollection are replaced with newSubCollection

copyReplaceFrom: start to: stop with: replacementCollection
     Answer a new collection of the same class as the receiver that
     contains the same elements as the receiver, in the same order,
     except for elements from index `start' to index `stop'.

     If start < stop, these are replaced by the contents of the
     replacementCollection.  Instead, If start = (stop + 1), like in
     `copyReplaceFrom: 4 to: 3 with: anArray', then every element of
     the receiver will be present in the answered copy; the operation
     will be an append if stop is equal to the size of the receiver or,
     if it is not, an insert before index `start'.

copyReplaceFrom: start to: stop withObject: anObject
     Answer a new collection of the same class as the receiver that
     contains the same elements as the receiver, in the same order,
     except for elements from index `start' to index `stop'.

     If start < stop, these are replaced by stop-start+1 copies of
     anObject.  Instead, If start = (stop + 1), then every element of
     the receiver will be present in the answered copy; the operation
     will be an append if stop is equal to the size of the receiver or,
     if it is not, an insert before index `start'.

copyUpTo: anObject
     Answer a new collection holding all the elements of the receiver
     from the first up to the first occurrence of anObject, excluded.

copyUpToLast: anObject
     Answer a new collection holding all the elements of the receiver
     from the first up to the last occurrence of anObject, excluded.

copyWithFirst: anObject
     Answer a new collection holding all the elements of the receiver
     after the first occurrence of anObject, up to the last.



File: gst-base.info,  Node: SequenceableCollection-enumerating,  Next: SequenceableCollection-manipulation,  Prev: SequenceableCollection-copying SequenceableCollections,  Up: SequenceableCollection

1.151.6 SequenceableCollection: enumerating
-------------------------------------------

anyOne
     Answer an unspecified element of the collection.

do: aBlock
     Evaluate aBlock for all the elements in the sequenceable collection

do: aBlock separatedBy: sepBlock
     Evaluate aBlock for all the elements in the sequenceable
     collection.  Between each element, evaluate sepBlock without
     parameters.

doWithIndex: aBlock
     Evaluate aBlock for all the elements in the sequenceable
     collection, passing the index of each element as the second
     parameter.  This method is mantained for backwards compatibility
     and is not mandated by the ANSI standard; use #keysAndValuesDo:

findFirst: aBlock
     Returns the index of the first element of the sequenceable
     collection for which aBlock returns true, or 0 if none

findLast: aBlock
     Returns the index of the last element of the sequenceable
     collection for which aBlock returns true, or 0 if none does

fold: binaryBlock
     First, pass to binaryBlock the first and second elements of the
     receiver; for each subsequent element, pass the result of the
     previous evaluation and an element. Answer the result of the last
     invocation, or the first element if the collection has size 1.
     Fail if the collection is empty.

from: startIndex to: stopIndex do: aBlock
     Evaluate aBlock for all the elements in the sequenceable
     collection whose indices are in the range index to stopIndex

from: startIndex to: stopIndex doWithIndex: aBlock
     Evaluate aBlock for all the elements in the sequenceable
     collection whose indices are in the range index to stopIndex,
     passing the index of each element as the second parameter.  This
     method is mantained for backwards compatibility and is not
     mandated by the ANSI standard; use #from:to:keysAndValuesDo:

from: startIndex to: stopIndex keysAndValuesDo: aBlock
     Evaluate aBlock for all the elements in the sequenceable
     collection whose indices are in the range index to stopIndex,
     passing the index of each element as the first parameter and the
     element as the second.

keys
     Return an Interval corresponding to the valid indices in the
     receiver.

keysAndValuesDo: aBlock
     Evaluate aBlock for all the elements in the sequenceable
     collection, passing the index of each element as the first
     parameter and the element as the second.

readStream
     Answer a ReadStream streaming on the receiver

readWriteStream
     Answer a ReadWriteStream which streams on the receiver

reverse
     Answer the receivers' contents in reverse order

reverseDo: aBlock
     Evaluate aBlock for all elements in the sequenceable collection,
     from the last to the first.

with: aSequenceableCollection collect: aBlock
     Evaluate aBlock for each pair of elements took respectively from
     the receiver and from aSequenceableCollection; answer a collection
     of the same kind of the receiver, made with the block's return
     values.  Fail if the receiver has not the same size as
     aSequenceableCollection.

with: aSequenceableCollection do: aBlock
     Evaluate aBlock for each pair of elements took respectively from
     the receiver and from aSequenceableCollection. Fail if the receiver
     has not the same size as aSequenceableCollection.



File: gst-base.info,  Node: SequenceableCollection-manipulation,  Next: SequenceableCollection-replacing items,  Prev: SequenceableCollection-enumerating,  Up: SequenceableCollection

1.151.7 SequenceableCollection: manipulation
--------------------------------------------

swap: anIndex with: anotherIndex
     Swap the item at index anIndex with the item at index another index



File: gst-base.info,  Node: SequenceableCollection-replacing items,  Next: SequenceableCollection-sorting,  Prev: SequenceableCollection-manipulation,  Up: SequenceableCollection

1.151.8 SequenceableCollection: replacing items
-----------------------------------------------

replaceAll: anObject with: anotherObject
     In the receiver, replace every occurrence of anObject with
     anotherObject.

replaceFrom: start to: stop with: replacementCollection
     Replace the items from start to stop with replacementCollection's
     items from 1 to stop-start+1 (in unexpected order if the
     collection is not sequenceable).

replaceFrom: start to: stop with: replacementCollection startingAt: repStart
     Replace the items from start to stop with replacementCollection's
     items from repStart to repStart+stop-start

replaceFrom: anIndex to: stopIndex withObject: replacementObject
     Replace every item from start to stop with replacementObject.



File: gst-base.info,  Node: SequenceableCollection-sorting,  Next: SequenceableCollection-still unclassified,  Prev: SequenceableCollection-replacing items,  Up: SequenceableCollection

1.151.9 SequenceableCollection: sorting
---------------------------------------

sort
     Sort the contents of the receiver according to the default sort
     block, which uses #<= to compare items.

sort: sortBlock
     Sort the contents of the receiver according to the given sort
     block, which accepts pair of items and returns true if the first
     item is less than the second one.

sorted
     Return a copy of the receiver sorted according to the default sort
     block, which uses #<= to compare items.

sorted: sortBlock
     Return a copy of the receiver sorted according to the given sort
     block, which accepts pair of items and returns true if the first
     item is less than the second one.



File: gst-base.info,  Node: SequenceableCollection-still unclassified,  Next: SequenceableCollection-testing,  Prev: SequenceableCollection-sorting,  Up: SequenceableCollection

1.151.10 SequenceableCollection: still unclassified
---------------------------------------------------

nextPutAllOn: aStream
     Write all the objects in the receiver to aStream



File: gst-base.info,  Node: SequenceableCollection-testing,  Next: SequenceableCollection-testing collections,  Prev: SequenceableCollection-still unclassified,  Up: SequenceableCollection

1.151.11 SequenceableCollection: testing
----------------------------------------

= aCollection
     Answer whether the receiver's items match those in aCollection

examineOn: aStream
     Print all the instance variables and context of the receiver on
     aStream

hash
     Answer an hash value for the receiver

isSequenceable
     Answer whether the receiver can be accessed by a numeric index with
     #at:/#at:put:.



File: gst-base.info,  Node: SequenceableCollection-testing collections,  Prev: SequenceableCollection-testing,  Up: SequenceableCollection

1.151.12 SequenceableCollection: testing collections
----------------------------------------------------

size
     Answer a dummy size of 0, so that SequenceableCollection>>#do:
     works.



File: gst-base.info,  Node: Set,  Next: SharedQueue,  Prev: SequenceableCollection,  Up: Base classes

1.152 Set
=========

Defined in namespace Smalltalk
Superclass: HashedCollection
Category: Collections-Unordered
     I am the typical set object; I also known how to do arithmetic on
     my instances.

* Menu:

* Set-arithmetic::  (instance)
* Set-awful ST-80 compatibility hacks::  (instance)
* Set-comparing::  (instance)


File: gst-base.info,  Node: Set-arithmetic,  Next: Set-awful ST-80 compatibility hacks,  Up: Set

1.152.1 Set: arithmetic
-----------------------

& aSet
     Compute the set intersection of the receiver and aSet.

+ aSet
     Compute the set union of the receiver and aSet.

- aSet
     Compute the set difference of the receiver and aSet.



File: gst-base.info,  Node: Set-awful ST-80 compatibility hacks,  Next: Set-comparing,  Prev: Set-arithmetic,  Up: Set

1.152.2 Set: awful ST-80 compatibility hacks
--------------------------------------------

findObjectIndex: object
     Tries to see if anObject exists as an indexed variable. As soon as
     nil or anObject is found, the index of that slot is answered



File: gst-base.info,  Node: Set-comparing,  Prev: Set-awful ST-80 compatibility hacks,  Up: Set

1.152.3 Set: comparing
----------------------

< aSet
     Answer whether the receiver is a strict subset of aSet

<= aSet
     Answer whether the receiver is a subset of aSet

> aSet
     Answer whether the receiver is a strict superset of aSet

>= aSet
     Answer whether the receiver is a superset of aSet



File: gst-base.info,  Node: SharedQueue,  Next: SingletonProxy,  Prev: Set,  Up: Base classes

1.153 SharedQueue
=================

Defined in namespace Smalltalk
Superclass: Object
Category: Language-Processes
     My instances provide a guaranteed safe mechanism to allow for
     communication between processes.  All access to the underlying
     data structures is controlled with critical sections so that
     things proceed smoothly.

* Menu:

* SharedQueue class-instance creation::  (class)
* SharedQueue-accessing::  (instance)


File: gst-base.info,  Node: SharedQueue class-instance creation,  Next: SharedQueue-accessing,  Up: SharedQueue

1.153.1 SharedQueue class: instance creation
--------------------------------------------

new
     Create a new instance of the receiver

sortBlock: sortBlock
     Create a new instance of the receiver which implements a priority
     queue with the given sort block



File: gst-base.info,  Node: SharedQueue-accessing,  Prev: SharedQueue class-instance creation,  Up: SharedQueue

1.153.2 SharedQueue: accessing
------------------------------

isEmpty
     Answer whether there is an object on the queue

next
     Wait for an object to be on the queue, then remove it and answer it

nextPut: value
     Put value on the queue and answer it

peek
     Wait for an object to be on the queue if necessary, then answer the
     same object that #next would answer without removing it.



File: gst-base.info,  Node: SingletonProxy,  Next: SmallInteger,  Prev: SharedQueue,  Up: Base classes

1.154 SingletonProxy
====================

Defined in namespace Smalltalk
Superclass: AlternativeObjectProxy
Category: Streams-Files
     I am a proxy that stores the class of an object rather than the
     object itself, and pretends that a registered instance (which most
     likely is a singleton instance of the stored class) was stored
     instead.

* Menu:

* SingletonProxy class-accessing::  (class)
* SingletonProxy class-instance creation::  (class)
* SingletonProxy-saving and restoring::  (instance)


File: gst-base.info,  Node: SingletonProxy class-accessing,  Next: SingletonProxy class-instance creation,  Up: SingletonProxy

1.154.1 SingletonProxy class: accessing
---------------------------------------

acceptUsageForClass: aClass
     The receiver was asked to be used as a proxy for the class aClass.
     The registration is fine if the class is actually a singleton.



File: gst-base.info,  Node: SingletonProxy class-instance creation,  Next: SingletonProxy-saving and restoring,  Prev: SingletonProxy class-accessing,  Up: SingletonProxy

1.154.2 SingletonProxy class: instance creation
-----------------------------------------------

on: anObject
     Answer a proxy to be used to save anObject.  The proxy stores the
     class and restores the object by looking into a dictionary of
     class -> singleton objects.



File: gst-base.info,  Node: SingletonProxy-saving and restoring,  Prev: SingletonProxy class-instance creation,  Up: SingletonProxy

1.154.3 SingletonProxy: saving and restoring
--------------------------------------------

object
     Reconstruct the object stored in the proxy and answer it; the
     binaryRepresentationObject is sent the #reconstructOriginalObject
     message, and the resulting object is sent the #postLoad message.



File: gst-base.info,  Node: SmallInteger,  Next: SortedCollection,  Prev: SingletonProxy,  Up: Base classes

1.155 SmallInteger
==================

Defined in namespace Smalltalk
Superclass: Integer
Category: Language-Data types
     I am the integer class of the GNU Smalltalk system.  My instances
     can represent signed 30 bit integers and are as efficient as
     possible.

* Menu:

* SmallInteger class-getting limits::  (class)
* SmallInteger class-testing::  (class)
* SmallInteger-bit arithmetic::  (instance)
* SmallInteger-built ins::  (instance)
* SmallInteger-builtins::  (instance)
* SmallInteger-coercion::  (instance)
* SmallInteger-coercion methods::  (instance)
* SmallInteger-testing functionality::  (instance)


File: gst-base.info,  Node: SmallInteger class-getting limits,  Next: SmallInteger class-testing,  Up: SmallInteger

1.155.1 SmallInteger class: getting limits
------------------------------------------

bits
     Answer the number of bits (excluding the sign) that can be
     represented directly in an object pointer

largest
     Answer the largest integer represented directly in an object
     pointer

smallest
     Answer the smallest integer represented directly in an object
     pointer



File: gst-base.info,  Node: SmallInteger class-testing,  Next: SmallInteger-bit arithmetic,  Prev: SmallInteger class-getting limits,  Up: SmallInteger

1.155.2 SmallInteger class: testing
-----------------------------------

isIdentity
     Answer whether x = y implies x == y for instances of the receiver



File: gst-base.info,  Node: SmallInteger-bit arithmetic,  Next: SmallInteger-built ins,  Prev: SmallInteger class-testing,  Up: SmallInteger

1.155.3 SmallInteger: bit arithmetic
------------------------------------

highBit
     Return the index of the highest order 1 bit of the receiver

lowBit
     Return the index of the lowest order 1 bit of the receiver.



File: gst-base.info,  Node: SmallInteger-built ins,  Next: SmallInteger-builtins,  Prev: SmallInteger-bit arithmetic,  Up: SmallInteger

1.155.4 SmallInteger: built ins
-------------------------------

* arg
     Multiply the receiver and arg and answer another Number

+ arg
     Sum the receiver and arg and answer another Number

- arg
     Subtract arg from the receiver and answer another Number

/ arg
     Divide the receiver by arg and answer another Integer or Fraction

// arg
     Dividing receiver by arg (with truncation towards -infinity) and
     answer the result

< arg
     Answer whether the receiver is less than arg

<= arg
     Answer whether the receiver is less than or equal to arg

= arg
     Answer whether the receiver is equal to arg

== arg
     Answer whether the receiver is the same object as arg

> arg
     Answer whether the receiver is greater than arg

>= arg
     Answer whether the receiver is greater than or equal to arg

\\ arg
     Calculate the remainder of dividing receiver by arg (with
     truncation towards -infinity) and answer it

asFloatD
     Convert the receiver to a FloatD, answer the result

asFloatE
     Convert the receiver to a FloatE, answer the result

asFloatQ
     Convert the receiver to a FloatQ, answer the result

asObject
     Answer the object whose index is in the receiver, nil if there is
     a free object, fail if index is out of bounds

asObjectNoFail
     Answer the object whose index is in the receiver, or nil if no
     object is found at that index

bitAnd: arg
     Do a bitwise AND between the receiver and arg, answer the result

bitOr: arg
     Do a bitwise OR between the receiver and arg, answer the result

bitShift: arg
     Shift the receiver by arg places to the left if arg > 0, by arg
     places to the right if arg < 0, answer another Number

bitXor: arg
     Do a bitwise XOR between the receiver and arg, answer the result

divExact: arg
     Dividing receiver by arg assuming that the remainder is zero, and
     answer the result

nextValidOop
     Answer the index of the first non-free OOP after the receiver.
     This is used internally; it is placed here to avoid polluting
     Object.

quo: arg
     Dividing receiver by arg (with truncation towards zero) and answer
     the result

~= arg
     Answer whether the receiver is not equal to arg

~~ arg
     Answer whether the receiver is not the same object as arg



File: gst-base.info,  Node: SmallInteger-builtins,  Next: SmallInteger-coercion,  Prev: SmallInteger-built ins,  Up: SmallInteger

1.155.5 SmallInteger: builtins
------------------------------

at: anIndex
     Answer the index-th indexed instance variable of the receiver.
     This method always fails.

at: anIndex put: value
     Store value in the index-th indexed instance variable of the
     receiver This method always fails.

basicAt: anIndex
     Answer the index-th indexed instance variable of the receiver.
     This method always fails.

basicAt: anIndex put: value
     Store value in the index-th indexed instance variable of the
     receiver This method always fails.

scramble
     Answer the receiver with its bits mixed and matched.



File: gst-base.info,  Node: SmallInteger-coercion,  Next: SmallInteger-coercion methods,  Prev: SmallInteger-builtins,  Up: SmallInteger

1.155.6 SmallInteger: coercion
------------------------------

asCNumber
     Convert the receiver to a kind of number that is understood by the
     C call-out mechanism.



File: gst-base.info,  Node: SmallInteger-coercion methods,  Next: SmallInteger-testing functionality,  Prev: SmallInteger-coercion,  Up: SmallInteger

1.155.7 SmallInteger: coercion methods
--------------------------------------

generality
     Return the receiver's generality

unity
     Coerce 1 to the receiver's class

zero
     Coerce 0 to the receiver's class



File: gst-base.info,  Node: SmallInteger-testing functionality,  Prev: SmallInteger-coercion methods,  Up: SmallInteger

1.155.8 SmallInteger: testing functionality
-------------------------------------------

isSmallInteger
     Answer `true'.



File: gst-base.info,  Node: SortedCollection,  Next: Stream,  Prev: SmallInteger,  Up: Base classes

1.156 SortedCollection
======================

Defined in namespace Smalltalk
Superclass: OrderedCollection
Category: Collections-Sequenceable
     I am a collection of objects, stored and accessed according to some
     sorting criteria.  I store things using heap sort and quick sort.
     My instances have a comparison block associated with them; this
     block takes two arguments and is a predicate which returns true if
     the first argument should be sorted earlier than the second.  The
     default block is [ :a :b | a <= b ], but I will accept any block
     that conforms to the above criteria - actually any object which
     responds to #value:value:.

* Menu:

* SortedCollection class-hacking::  (class)
* SortedCollection class-instance creation::  (class)
* SortedCollection-basic::  (instance)
* SortedCollection-copying::  (instance)
* SortedCollection-disabled::  (instance)
* SortedCollection-enumerating::  (instance)
* SortedCollection-saving and loading::  (instance)
* SortedCollection-searching::  (instance)
* SortedCollection-sorting::  (instance)


File: gst-base.info,  Node: SortedCollection class-hacking,  Next: SortedCollection class-instance creation,  Up: SortedCollection

1.156.1 SortedCollection class: hacking
---------------------------------------

defaultSortBlock
     Answer a default sort block for the receiver.



File: gst-base.info,  Node: SortedCollection class-instance creation,  Next: SortedCollection-basic,  Prev: SortedCollection class-hacking,  Up: SortedCollection

1.156.2 SortedCollection class: instance creation
-------------------------------------------------

new
     Answer a new collection with a default size and sort block

new: aSize
     Answer a new collection with a default sort block and the given
     size

sortBlock: aSortBlock
     Answer a new collection with a default size and the given sort
     block



File: gst-base.info,  Node: SortedCollection-basic,  Next: SortedCollection-copying,  Prev: SortedCollection class-instance creation,  Up: SortedCollection

1.156.3 SortedCollection: basic
-------------------------------

last
     Answer the last item of the receiver

removeLast
     Remove an object from the end of the receiver. Fail if the receiver
     is empty

sortBlock
     Answer the receiver's sort criteria

sortBlock: aSortBlock
     Change the sort criteria for a sorted collection, resort the
     elements of the collection, and return it.



File: gst-base.info,  Node: SortedCollection-copying,  Next: SortedCollection-disabled,  Prev: SortedCollection-basic,  Up: SortedCollection

1.156.4 SortedCollection: copying
---------------------------------

copyEmpty: newSize
     Answer an empty copy of the receiver, with the same sort block as
     the receiver



File: gst-base.info,  Node: SortedCollection-disabled,  Next: SortedCollection-enumerating,  Prev: SortedCollection-copying,  Up: SortedCollection

1.156.5 SortedCollection: disabled
----------------------------------

add: anObject afterIndex: i
     This method should not be called for instances of this class.

addAll: aCollection afterIndex: i
     This method should not be called for instances of this class.

addAllFirst: aCollection
     This method should not be called for instances of this class.

addAllLast: aCollection
     This method should not be called for instances of this class.

addFirst: anObject
     This method should not be called for instances of this class.

addLast: anObject
     This method should not be called for instances of this class.

at: index put: anObject
     This method should not be called for instances of this class.



File: gst-base.info,  Node: SortedCollection-enumerating,  Next: SortedCollection-saving and loading,  Prev: SortedCollection-disabled,  Up: SortedCollection

1.156.6 SortedCollection: enumerating
-------------------------------------

beConsistent
     Prepare the receiver to be walked through with #do: or another
     enumeration method.



File: gst-base.info,  Node: SortedCollection-saving and loading,  Next: SortedCollection-searching,  Prev: SortedCollection-enumerating,  Up: SortedCollection

1.156.7 SortedCollection: saving and loading
--------------------------------------------

postLoad
     Restore the default sortBlock if it is nil

preStore
     Store the default sortBlock as nil



File: gst-base.info,  Node: SortedCollection-searching,  Next: SortedCollection-sorting,  Prev: SortedCollection-saving and loading,  Up: SortedCollection

1.156.8 SortedCollection: searching
-----------------------------------

includes: anObject
     Private - Answer whether the receiver includes an item which is
     equal to anObject

indexOf: anObject startingAt: index ifAbsent: aBlock
     Answer the first index > anIndex which contains anElement.  Invoke
     exceptionBlock and answer its result if no item is found

occurrencesOf: anObject
     Answer how many occurrences of anObject can be found in the
     receiver



File: gst-base.info,  Node: SortedCollection-sorting,  Prev: SortedCollection-searching,  Up: SortedCollection

1.156.9 SortedCollection: sorting
---------------------------------

sort
     Sort the contents of the receiver according to the given sort
     block, which accepts pair of items and returns true if the first
     item is less than the second one.  Fails if the collections's sort
     block is not the same as the default sort block.

sort: sortBlock
     Sort the contents of the receiver according to the given sort
     block, which accepts pair of items and returns true if the first
     item is less than the second one.  Fails if the sort block is not
     the same as the collection's sort block.



File: gst-base.info,  Node: Stream,  Next: String,  Prev: SortedCollection,  Up: Base classes

1.157 Stream
============

Defined in namespace Smalltalk
Superclass: Iterable
Category: Streams
     I am an abstract class that provides interruptable sequential
     access to objects.  I can return successive objects from a source,
     or accept successive objects and store them sequentially on a
     sink.  I provide some simple iteration over the contents of one of
     my instances, and provide for writing collections sequentially.

* Menu:

* Stream-accessing-reading::  (instance)
* Stream-accessing-writing::  (instance)
* Stream-basic::  (instance)
* Stream-buffering::  (instance)
* Stream-built ins::  (instance)
* Stream-character writing::  (instance)
* Stream-compiling::  (instance)
* Stream-concatenating::  (instance)
* Stream-enumerating::  (instance)
* Stream-filing out::  (instance)
* Stream-filtering::  (instance)
* Stream-polymorphism::  (instance)
* Stream-positioning::  (instance)
* Stream-printing::  (instance)
* Stream-still unclassified::  (instance)
* Stream-storing::  (instance)
* Stream-streaming protocol::  (instance)
* Stream-testing::  (instance)


File: gst-base.info,  Node: Stream-accessing-reading,  Next: Stream-accessing-writing,  Up: Stream

1.157.1 Stream: accessing-reading
---------------------------------

contents
     Answer the whole contents of the receiver, from the next object to
     the last

file
     Return nil by default; not all streams have a file.

name
     Return nil by default; not all streams have a name.

next
     Return the next object in the receiver

next: anInteger
     Return the next anInteger objects in the receiver

nextAvailable: anInteger
     Return up to anInteger objects in the receiver.  Besides stopping
     if the end of the stream is reached, this may return less than this
     number of bytes for various reasons.  For example, on files and
     sockets this operation could be non-blocking, or could do at most
     one I/O operation.

nextAvailable: anInteger into: aCollection startingAt: pos
     Place the next anInteger objects from the receiver into
     aCollection, starting at position pos.  Return the number of items
     stored.  Besides stopping if the end of the stream is reached,
     this may return less than this number of bytes for various reasons.
     For example, on files and sockets this operation could be
     non-blocking, or could do at most one I/O operation.

nextAvailable: anInteger putAllOn: aStream
     Copy up to anInteger objects in the receiver to aStream.  Besides
     stopping if the end of the stream is reached, this may return less
     than this number of bytes for various reasons.  For example, on
     files and sockets this operation could be non-blocking, or could
     do at most one I/O operation.

nextLine
     Returns a collection of the same type that the stream accesses,
     containing the next line up to the next new-line character.
     Returns the entire rest of the stream's contents if no new-line
     character is found.

nextMatchFor: anObject
     Answer whether the next object is equal to anObject. Even if it
     does not, anObject is lost

splitAt: anObject
     Answer an OrderedCollection of parts of the receiver. A new
     (possibly empty) part starts at the start of the receiver, or
     after every occurrence of an object which is equal to anObject (as
     compared by #=).

upTo: anObject
     Returns a collection of the same type that the stream accesses, up
     to but not including the object anObject.  Returns the entire rest
     of the stream's contents if anObject is not present.

upToAll: aCollection
     If there is a sequence of objects remaining in the stream that is
     equal to the sequence in aCollection, set the stream position just
     past that sequence and answer the elements up to, but not
     including, the sequence. Else, set the stream position to its end
     and answer all the remaining elements.

upToEnd
     Answer every item in the collection on which the receiver is
     streaming, from the next one to the last



File: gst-base.info,  Node: Stream-accessing-writing,  Next: Stream-basic,  Prev: Stream-accessing-reading,  Up: Stream

1.157.2 Stream: accessing-writing
---------------------------------

next: anInteger put: anObject
     Write anInteger copies of anObject to the receiver

next: n putAll: aCollection startingAt: start
     Write n objects to the stream, reading them from aCollection and
     starting at the start-th item.

nextPut: anObject
     Write anObject to the receiver

nextPutAll: aCollection
     Write all the objects in aCollection to the receiver

nextPutAllFlush: aCollection
     Put all the elements of aCollection in the stream, then flush the
     buffers if supported by the stream.



File: gst-base.info,  Node: Stream-basic,  Next: Stream-buffering,  Prev: Stream-accessing-writing,  Up: Stream

1.157.3 Stream: basic
---------------------

species
     Answer `Array'.



File: gst-base.info,  Node: Stream-buffering,  Next: Stream-built ins,  Prev: Stream-basic,  Up: Stream

1.157.4 Stream: buffering
-------------------------

next: anInteger into: answer startingAt: pos
     Read up to anInteger bytes from the stream and store them into
     answer.  Return the number of bytes that were read, raising an
     exception if we could not read the full amount of data.

next: anInteger putAllOn: aStream
     Read up to anInteger bytes from the stream and store them into
     aStream.  Return the number of bytes that were read, raising an
     exception if we could not read the full amount of data.



File: gst-base.info,  Node: Stream-built ins,  Next: Stream-character writing,  Prev: Stream-buffering,  Up: Stream

1.157.5 Stream: built ins
-------------------------

fileIn
     File in the contents of the receiver.  During a file in operation,
     global variables (starting with an uppercase letter) that are not
     declared don't yield an `unknown variable' error. Instead, they
     are defined as nil in the `Undeclared' dictionary (a global
     variable residing in Smalltalk).  As soon as you add the variable
     to a namespace (for example by creating a class) the Association
     will be removed from Undeclared and reused in the namespace, so
     that the old references will automagically point to the new value.

fileInLine: lineNum file: aFile at: charPosInt
     Private - Much like a preprocessor #line directive; it is used
     internally by #fileIn, and explicitly by the Emacs Smalltalk mode.

fileInLine: lineNum fileName: aString at: charPosInt
     Private - Much like a preprocessor #line directive; it is used
     internally by #fileIn, and explicitly by the Emacs Smalltalk mode.



File: gst-base.info,  Node: Stream-character writing,  Next: Stream-compiling,  Prev: Stream-built ins,  Up: Stream

1.157.6 Stream: character writing
---------------------------------

cr
     Store a cr on the receiver

crTab
     Store a cr and a tab on the receiver

encoding
     Answer the encoding to be used when storing Unicode characters.

isUnicode
     Answer whether the receiver is able to store Unicode characters.
     Note that if this method returns true, the stream may or may not
     be able to store Characters (as opposed to UnicodeCharacters)
     whose value is above 127.

nl
     Store a new line on the receiver

nlTab
     Store a new line and a tab on the receiver

space
     Store a space on the receiver

space: n
     Store n spaces on the receiver

tab
     Store a tab on the receiver

tab: n
     Store n tabs on the receiver



File: gst-base.info,  Node: Stream-compiling,  Next: Stream-concatenating,  Prev: Stream-character writing,  Up: Stream

1.157.7 Stream: compiling
-------------------------

segmentFrom: startPos to: endPos
     Answer an object that, when sent #asString, will yield the result
     of sending `copyFrom: startPos to: endPos' to the receiver



File: gst-base.info,  Node: Stream-concatenating,  Next: Stream-enumerating,  Prev: Stream-compiling,  Up: Stream

1.157.8 Stream: concatenating
-----------------------------

with: aStream
     Return a new Stream whose elements are 2-element Arrays, including
     one element from the receiver and one from aStream.

with: stream1 with: stream2
     Return a new Stream whose elements are 3-element Arrays, including
     one element from the receiver and one from each argument.

with: stream1 with: stream2 with: stream3
     Return a new Stream whose elements are 3-element Arrays, including
     one element from the receiver and one from each argument.



File: gst-base.info,  Node: Stream-enumerating,  Next: Stream-filing out,  Prev: Stream-concatenating,  Up: Stream

1.157.9 Stream: enumerating
---------------------------

do: aBlock
     Evaluate aBlock once for every object in the receiver

linesDo: aBlock
     Evaluate aBlock once for every line in the receiver (assuming the
     receiver is streaming on Characters).



File: gst-base.info,  Node: Stream-filing out,  Next: Stream-filtering,  Prev: Stream-enumerating,  Up: Stream

1.157.10 Stream: filing out
---------------------------

fileOut: aClass
     File out aClass on the receiver. If aClass is not a metaclass,
     file out class and instance methods; if aClass is a metaclass,
     file out only the class methods



File: gst-base.info,  Node: Stream-filtering,  Next: Stream-polymorphism,  Prev: Stream-filing out,  Up: Stream

1.157.11 Stream: filtering
--------------------------

, anIterable
     Answer a new stream that concatenates the data in the receiver
     with the data in aStream.  Both the receiver and aStream should be
     readable.

collect: aBlock
     Answer a new stream that will pass the returned objects through
     aBlock, and return whatever object is returned by aBlock instead.
     Note that when peeking in the returned stream, the block will be
     invoked multiple times, with possibly surprising results.

lines
     Answer a new stream that answers lines from the receiver.

peek
     Returns the next element of the stream without moving the pointer.
     Returns nil when at end of stream.  Lookahead is implemented
     automatically for streams that are not positionable but can be
     copied.

peekFor: aCharacter
     Returns true and gobbles the next element from the stream of it is
     equal to anObject, returns false and doesn't gobble the next
     element if the next element is not equal to anObject.  Lookahead
     is implemented automatically for streams that are not positionable
     but can be copied.

reject: aBlock
     Answer a new stream that only returns those objects for which
     aBlock returns false.  Note that the returned stream will not be
     positionable.

select: aBlock
     Answer a new stream that only returns those objects for which
     aBlock returns true.  Note that the returned stream will not be
     positionable.



File: gst-base.info,  Node: Stream-polymorphism,  Next: Stream-positioning,  Prev: Stream-filtering,  Up: Stream

1.157.12 Stream: polymorphism
-----------------------------

close
     Do nothing. This is provided for consistency with file streams

flush
     Do nothing. This is provided for consistency with file streams

pastEnd
     The end of the stream has been reached.  Signal a Notification.



File: gst-base.info,  Node: Stream-positioning,  Next: Stream-printing,  Prev: Stream-polymorphism,  Up: Stream

1.157.13 Stream: positioning
----------------------------

isPositionable
     Answer true if the stream supports moving backwards with #skip:.

skip: anInteger
     Move the position forwards by anInteger places

skipSeparators
     Advance the receiver until we find a character that is not a
     separator.  Answer false if we reach the end of the stream, else
     answer true; in this case, sending #next will return the first
     non-separator character (possibly the same to which the stream
     pointed before #skipSeparators was sent).

skipTo: anObject
     Move the current position to after the next occurrence of anObject
     and return true if anObject was found.  If anObject doesn't exist,
     the pointer is atEnd, and false is returned.

skipToAll: aCollection
     If there is a sequence of objects remaining in the stream that is
     equal to the sequence in aCollection, set the stream position just
     past that sequence and answer true. Else, set the stream position
     to its end and answer false.



File: gst-base.info,  Node: Stream-printing,  Next: Stream-still unclassified,  Prev: Stream-positioning,  Up: Stream

1.157.14 Stream: printing
-------------------------

<< anObject
     This method is a short-cut for #display:; it prints anObject on the
     receiver by sending displayOn: to anObject. This method is provided
     so that you can use cascading and obtain better-looking code

display: anObject
     Print anObject on the receiver by sending displayOn: to anObject.
     This method is provided so that you can use cascading and obtain
     better-looking code

print: anObject
     Print anObject on the receiver by sending printOn: to anObject.
     This method is provided so that you can use cascading and obtain
     better-looking code



File: gst-base.info,  Node: Stream-still unclassified,  Next: Stream-storing,  Prev: Stream-printing,  Up: Stream

1.157.15 Stream: still unclassified
-----------------------------------

nextPutAllOn: aStream
     Write all the objects in the receiver to aStream



File: gst-base.info,  Node: Stream-storing,  Next: Stream-streaming protocol,  Prev: Stream-still unclassified,  Up: Stream

1.157.16 Stream: storing
------------------------

store: anObject
     Print Smalltalk code compiling to anObject on the receiver, by
     sending storeOn: to anObject. This method is provided so that you
     can use cascading and obtain better-looking code



File: gst-base.info,  Node: Stream-streaming protocol,  Next: Stream-testing,  Prev: Stream-storing,  Up: Stream

1.157.17 Stream: streaming protocol
-----------------------------------

nextAvailablePutAllOn: aStream
     Copy to aStream a more-or-less arbitrary amount of data.  When used
     on files, this does at most one I/O operation.  For other kinds of
     stream, the definition may vary.  This method is used to do
     stream-to-stream copies.



File: gst-base.info,  Node: Stream-testing,  Prev: Stream-streaming protocol,  Up: Stream

1.157.18 Stream: testing
------------------------

atEnd
     Answer whether the stream has got to an end

isExternalStream
     Answer whether the receiver streams on a file or socket.  By
     default, answer false.

isSequenceable
     Answer whether the receiver can be accessed by a numeric index with
     #at:/#at:put:.

readStream
     As a wild guess, return the receiver.  WriteStreams should override
     this method.



File: gst-base.info,  Node: String,  Next: Symbol,  Prev: Stream,  Up: Base classes

1.158 String
============

Defined in namespace Smalltalk
Superclass: CharacterArray
Category: Collections-Text
     My instances represent 8-bit character strings.  Being a very
     common case, they are particularly optimized.

     Note that, if you care about multilingualization, you should treat
     String only as an encoded representation of a UnicodeString.  The
     I18N package adds more Unicode-friendliness to the system so that
     encoding and decoding is performed automatically in more cases.
     In that case, String represents a case when the encoding is either
     unknown, irrelevant, or assumed to be the system default.

* Menu:

* String class-instance creation::  (class)
* String class-multibyte encodings::  (class)
* String-accessing::  (instance)
* String-basic::  (instance)
* String-built ins::  (instance)
* String-CObject::  (instance)
* String-converting::  (instance)
* String-filesystem::  (instance)
* String-printing::  (instance)
* String-regex::  (instance)
* String-still unclassified::  (instance)
* String-testing functionality::  (instance)


File: gst-base.info,  Node: String class-instance creation,  Next: String class-multibyte encodings,  Up: String

1.158.1 String class: instance creation
---------------------------------------

fromCData: aCObject
     Answer a String containing the bytes starting at the location
     pointed to by aCObject, up to the first NUL character.

fromCData: aCObject size: anInteger
     Answer a String containing anInteger bytes starting at the
     location pointed to by aCObject



File: gst-base.info,  Node: String class-multibyte encodings,  Next: String-accessing,  Prev: String class-instance creation,  Up: String

1.158.2 String class: multibyte encodings
-----------------------------------------

isUnicode
     Answer false; the receiver stores bytes (i.e. an encoded form),
     not characters.



File: gst-base.info,  Node: String-accessing,  Next: String-basic,  Prev: String class-multibyte encodings,  Up: String

1.158.3 String: accessing
-------------------------

byteAt: index
     Answer the ascii value of index-th character variable of the
     receiver

byteAt: index put: value
     Store (Character value: value) in the index-th indexed instance
     variable of the receiver



File: gst-base.info,  Node: String-basic,  Next: String-built ins,  Prev: String-accessing,  Up: String

1.158.4 String: basic
---------------------

, aString
     Answer a new instance of an ArrayedCollection containing all the
     elements in the receiver, followed by all the elements in
     aSequenceableCollection

= aCollection
     Answer whether the receiver's items match those in aCollection

indexOf: anElement startingAt: anIndex
     Answer the first index > anIndex which contains anElement.  Invoke
     exceptionBlock and answer its result if no item is found

indexOf: anElement startingAt: anIndex ifAbsent: exceptionBlock
     Answer the first index > anIndex which contains anElement.  Invoke
     exceptionBlock and answer its result if no item is found



File: gst-base.info,  Node: String-built ins,  Next: String-CObject,  Prev: String-basic,  Up: String

1.158.5 String: built ins
-------------------------

asCData: aCType
     Allocate memory with malloc for a NULL-terminated copy of the
     receiver, and return a pointer to it as a CObject of the given
     type.

at: anIndex
     Answer the index-th indexed instance variable of the receiver

at: anIndex ifAbsent: aBlock
     Answer the index-th indexed instance variable of the receiver

at: anIndex put: value
     Store value in the index-th indexed instance variable of the
     receiver

basicAt: anIndex
     Answer the index-th indexed instance variable of the receiver.
     This method must not be overridden, override at: instead

basicAt: anIndex put: value
     Store value in the index-th indexed instance variable of the
     receiver This method must not be overridden, override at:put:
     instead

hash
     Answer an hash value for the receiver

replaceFrom: start to: stop with: aString startingAt: replaceStart
     Replace the characters from start to stop with new characters whose
     ASCII codes are contained in aString, starting at the replaceStart
     location of aString

replaceFrom: start to: stop withByteArray: byteArray startingAt: replaceStart
     Replace the characters from start to stop with new characters whose
     ASCII codes are contained in byteArray, starting at the
     replaceStart location of byteArray

similarityTo: aString
     Answer a number that denotes the similarity between aString and
     the receiver.  0 indicates equality, negative numbers indicate
     some difference.  Implemented as a primitive for speed.

size
     Answer the size of the receiver



File: gst-base.info,  Node: String-CObject,  Next: String-converting,  Prev: String-built ins,  Up: String

1.158.6 String: CObject
-----------------------

asCData
     Allocate memory with malloc for a NULL-terminated copy of the
     receiver, and return a pointer to it as a CChar.



File: gst-base.info,  Node: String-converting,  Next: String-filesystem,  Prev: String-CObject,  Up: String

1.158.7 String: converting
--------------------------

asByteArray
     Return the receiver, converted to a ByteArray of ASCII values

asString
     But I already am a String!  Really!

asSymbol
     Returns the symbol corresponding to the receiver

encoding
     Answer the encoding of the receiver.  This is not implemented
     unless you load the Iconv package.



File: gst-base.info,  Node: String-filesystem,  Next: String-printing,  Prev: String-converting,  Up: String

1.158.8 String: filesystem
--------------------------

/ aName
     Answer a File object as appropriate for a file named 'aName' in
     the directory represented by the receiver.

asFile
     Answer a File object for the file whose name is in the receiver.



File: gst-base.info,  Node: String-printing,  Next: String-regex,  Prev: String-filesystem,  Up: String

1.158.9 String: printing
------------------------

displayOn: aStream
     Print a representation of the receiver on aStream. Unlike
     #printOn:, this method strips extra quotes.

displayString
     Answer a String representing the receiver. For most objects this
     is simply its #printString, but for CharacterArrays and characters,
     superfluous dollars or extra pair of quotes are stripped.

isLiteralObject
     Answer whether the receiver is expressible as a Smalltalk literal.

printOn: aStream
     Print a representation of the receiver on aStream

storeLiteralOn: aStream
     Store a Smalltalk literal compiling to the receiver on aStream

storeOn: aStream
     Store Smalltalk code compiling to the receiver on aStream



File: gst-base.info,  Node: String-regex,  Next: String-still unclassified,  Prev: String-printing,  Up: String

1.158.10 String: regex
----------------------

=~ pattern
     Answer a RegexResults object for matching the receiver against the
     Regex or String object pattern.

allOccurrencesOfRegex: pattern
     Find all the matches of pattern within the receiver and collect
     them into an OrderedCollection.

allOccurrencesOfRegex: pattern do: aBlock
     Find all the matches of pattern within the receiver and pass the
     RegexResults objects to aBlock.

allOccurrencesOfRegex: pattern from: from to: to
     Find all the matches of pattern within the receiver and within the
     given range of indices.  Collect them into an OrderedCollection,
     which is then returned.

allOccurrencesOfRegex: pattern from: from to: to do: aBlock
     Find all the matches of pattern within the receiver and within the
     given range of indices.  For each match, pass the RegexResults
     object to aBlock.

asRegex
     Answer the receiver, converted to a Regex object.

copyFrom: from to: to replacingAllRegex: pattern with: aStringOrBlock
     Returns the substring of the receiver between from and to.  Any
     match of pattern in that part of the string is replaced using
     aStringOrBlock as follows: if it is a block, a RegexResults object
     is passed, while if it is a string, %n sequences are replaced with
     the captured subexpressions of the match (as in #%).

copyFrom: from to: to replacingRegex: pattern with: aStringOrBlock
     Returns the substring of the receiver between from and to.  If
     pattern has a match in that part of the string, the match is
     replaced using aStringOrBlock as follows: if it is a block, a
     RegexResults object is passed, while if it is a string, %n
     sequences are replaced with the captured subexpressions of the
     match (as in #%).

copyReplacingAllRegex: pattern with: aStringOrBlock
     Returns the receiver after replacing all the matches of pattern (if
     any) using aStringOrBlock as follows: if it is a block, a
     RegexResults object is passed, while if it is a string, %n
     sequences are replaced with the captured subexpressions of the
     match (as in #%).

copyReplacingRegex: pattern with: aStringOrBlock
     Returns the receiver after replacing the first match of pattern (if
     any) using aStringOrBlock as follows: if it is a block, a
     RegexResults object is passed, while if it is a string, %n
     sequences are replaced with the captured subexpressions of the
     match (as in #%).

indexOfRegex: regexString
     If an occurrence of the regex is present in the receiver, return
     the Interval corresponding to the leftmost-longest match.
     Otherwise return nil.

indexOfRegex: regexString from: from to: to
     If an occurrence of the regex is present in the receiver, return
     the Interval corresponding to the leftmost-longest match occurring
     within the given range of indices.  Otherwise return nil.

indexOfRegex: regexString from: from to: to ifAbsent: excBlock
     If an occurrence of the regex is present in the receiver, return
     the Interval corresponding to the leftmost-longest match occurring
     within the given indices.  Otherwise, evaluate excBlock and return
     the result.

indexOfRegex: regexString ifAbsent: excBlock
     If an occurrence of the regex is present in the receiver, return
     the Interval corresponding to the leftmost-longest match.
     Otherwise, evaluate excBlock and return the result.

indexOfRegex: regexString startingAt: index
     If an occurrence of the regex is present in the receiver, return
     the Interval corresponding to the leftmost-longest match starting
     after the given index.  Otherwise return nil.

indexOfRegex: regexString startingAt: index ifAbsent: excBlock
     If an occurrence of the regex is present in the receiver, return
     the Interval corresponding to the leftmost-longest match starting
     after the given index.  Otherwise, evaluate excBlock and return
     the result.

matchRegex: pattern
     Answer whether the receiver is an exact match for the pattern.
     This means that the pattern is implicitly anchored at the beginning
     and the end.

matchRegex: pattern from: from to: to
     Answer whether the given range of indices is an exact match for the
     pattern.  This means that there is a match starting at from and
     ending at to (which is not necessarily the longest match starting
     at from).

occurrencesOfRegex: pattern
     Returns count of how many times pattern repeats in the receiver.

occurrencesOfRegex: pattern from: from to: to
     Return a count of how many times pattern repeats in the receiver
     within the given range of index.

occurrencesOfRegex: pattern startingAt: index
     Returns count of how many times pattern repeats in the receiver,
     starting the search at the given index.

onOccurrencesOfRegex: pattern do: body
     Find all the matches of pattern within the receiver and, for each
     match, pass the RegexResults object to aBlock.

onOccurrencesOfRegex: pattern from: from to: to do: aBlock
     Find all the matches of pattern within the receiver and within the
     given range of indices.  For each match, pass the RegexResults
     object to aBlock.

replacingAllRegex: pattern with: aStringOrBlock
     Returns the receiver if the pattern has no match in it.  Otherwise,
     any match of pattern in that part of the string is replaced using
     aStringOrBlock as follows: if it is a block, a RegexResults object
     is passed, while if it is a string, %n sequences are replaced with
     the captured subexpressions of the match (as in #%).

replacingRegex: pattern with: aStringOrBlock
     Returns the receiver if the pattern has no match in it.  If it has
     a match, it is replaced using aStringOrBlock as follows: if it is
     a block, a RegexResults object is passed, while if it is a string,
     %n sequences are replaced with the captured subexpressions of the
     match (as in #%).

searchRegex: pattern
     A synonym for #=~.  Answer a RegexResults object for matching the
     receiver against the Regex or String object pattern.

searchRegex: pattern from: from to: to
     Answer a RegexResults object for matching the receiver against the
     Regex or String object pattern, restricting the match to the
     specified range of indices.

searchRegex: pattern startingAt: anIndex
     Answer a RegexResults object for matching the receiver against the
     Regex or String object pattern, starting the match at index
     anIndex.

tokenize: pattern
     Split the receiver at every occurrence of pattern.  All parts that
     do not match pattern are separated and stored into an Array of
     Strings that is returned.

tokenize: pattern from: from to: to
     Split the receiver at every occurrence of pattern (considering only
     the indices between from and to).  All parts that do not match
     pattern are separated and stored into an Array of Strings that is
     returned.

~ pattern
     Answer whether the receiver matched against the Regex or String
     object pattern.



File: gst-base.info,  Node: String-still unclassified,  Next: String-testing functionality,  Prev: String-regex,  Up: String

1.158.11 String: still unclassified
-----------------------------------

escapeRegex
     Answer the receiver with all regex special characters escaped by a
     backslash.



File: gst-base.info,  Node: String-testing functionality,  Prev: String-still unclassified,  Up: String

1.158.12 String: testing functionality
--------------------------------------

isString
     Answer `true'.



File: gst-base.info,  Node: Symbol,  Next: SymLink,  Prev: String,  Up: Base classes

1.159 Symbol
============

Defined in namespace Smalltalk
Superclass: String
Category: Language-Implementation
     My instances are unique throughout the Smalltalk system.  My
     instances behave for the most part like strings, except that they
     print differently, and I guarantee that any two instances that
     have the same printed representation are in fact the same instance.

* Menu:

* Symbol class-built ins::  (class)
* Symbol class-instance creation::  (class)
* Symbol class-symbol table::  (class)
* Symbol-accessing the method dictionary::  (instance)
* Symbol-basic::  (instance)
* Symbol-built ins::  (instance)
* Symbol-converting::  (instance)
* Symbol-misc::  (instance)
* Symbol-storing::  (instance)
* Symbol-testing::  (instance)
* Symbol-testing functionality::  (instance)


File: gst-base.info,  Node: Symbol class-built ins,  Next: Symbol class-instance creation,  Up: Symbol

1.159.1 Symbol class: built ins
-------------------------------

intern: aString
     Private - Same as 'aString asSymbol'



File: gst-base.info,  Node: Symbol class-instance creation,  Next: Symbol class-symbol table,  Prev: Symbol class-built ins,  Up: Symbol

1.159.2 Symbol class: instance creation
---------------------------------------

internCharacter: aCharacter
     Answer the one-character symbol associated to the given character.

new
     This method should not be called for instances of this class.

new: size
     This method should not be called for instances of this class.

with: element1
     Answer a collection whose only element is element1

with: element1 with: element2
     Answer a collection whose only elements are the parameters in the
     order they were passed

with: element1 with: element2 with: element3
     Answer a collection whose only elements are the parameters in the
     order they were passed

with: element1 with: element2 with: element3 with: element4
     Answer a collection whose only elements are the parameters in the
     order they were passed

with: element1 with: element2 with: element3 with: element4 with: element5
     Answer a collection whose only elements are the parameters in the
     order they were passed



File: gst-base.info,  Node: Symbol class-symbol table,  Next: Symbol-accessing the method dictionary,  Prev: Symbol class-instance creation,  Up: Symbol

1.159.3 Symbol class: symbol table
----------------------------------

hasInterned: aString ifTrue: aBlock
     If aString has not been interned yet, answer false.  Else, pass the
     interned version to aBlock and answer true.  Note that this works
     because String>>#hash calculates the same hash value used by the
     VM when interning strings into the SymbolTable.  Changing one of
     the hashing methods without changing the other will break this
     method.

isSymbolString: aString
     Answer whether aString has already been interned. Note that this
     works because String>>#hash calculates the same hash value used by
     the VM when interning strings into the SymbolTable.  Changing one
     of the hashing methods without changing the other will break this
     method.

rebuildTable
     Rebuild the SymbolTable, thereby garbage-collecting unreferenced
     Symbols.  While this process is done, preemption is disabled
     because it is not acceptable to leave the SymbolTable in a
     partially updated state.  Note that this works because
     String>>#hash calculates the same hash value used by the VM when
     interning strings into the SymbolTable.  Changing one of the
     hashing methods without changing the other will break this method.



File: gst-base.info,  Node: Symbol-accessing the method dictionary,  Next: Symbol-basic,  Prev: Symbol class-symbol table,  Up: Symbol

1.159.4 Symbol: accessing the method dictionary
-----------------------------------------------

implementors
     Answer a Set of all the compiled method associated with selector
     named by the receiver, which is supposed to be a valid message
     name.



File: gst-base.info,  Node: Symbol-basic,  Next: Symbol-built ins,  Prev: Symbol-accessing the method dictionary,  Up: Symbol

1.159.5 Symbol: basic
---------------------

deepCopy
     Returns a deep copy of the receiver. As Symbols are identity
     objects, we actually return the receiver itself.

keywords
     Answer an array of keywords that compose the receiver, which is
     supposed to be a valid message name (#+, #not, #printOn:,
     #ifTrue:ifFalse:, etc.)

numArgs
     Answer the number of arguments supported by the receiver, which is
     supposed to be a valid message name (#+, #not, #printOn:,
     #ifTrue:ifFalse:, etc.)

shallowCopy
     Returns a deep copy of the receiver. As Symbols are identity
     objects, we actually return the receiver itself.



File: gst-base.info,  Node: Symbol-built ins,  Next: Symbol-converting,  Prev: Symbol-basic,  Up: Symbol

1.159.6 Symbol: built ins
-------------------------

= aSymbol
     Answer whether the receiver and aSymbol are the same object

hash
     Answer an hash value for the receiver. Symbols are optimized for
     speed



File: gst-base.info,  Node: Symbol-converting,  Next: Symbol-misc,  Prev: Symbol-built ins,  Up: Symbol

1.159.7 Symbol: converting
--------------------------

asString
     Answer a String with the same characters as the receiver

asSymbol
     But we are already a Symbol, and furthermore, Symbols are identity
     objects!  So answer the receiver.



File: gst-base.info,  Node: Symbol-misc,  Next: Symbol-storing,  Prev: Symbol-converting,  Up: Symbol

1.159.8 Symbol: misc
--------------------

species
     Answer `String'.



File: gst-base.info,  Node: Symbol-storing,  Next: Symbol-testing,  Prev: Symbol-misc,  Up: Symbol

1.159.9 Symbol: storing
-----------------------

displayOn: aStream
     Print a represention of the receiver on aStream. For most objects
     this is simply its #printOn: representation, but for strings and
     characters, superfluous dollars or extra pairs of quotes are
     stripped.

displayString
     Answer a String representing the receiver. For most objects this
     is simply its #printString, but for strings and characters,
     superfluous dollars or extra pair of quotes are stripped.

printOn: aStream
     Print a represention of the receiver on aStream.

storeLiteralOn: aStream
     Print Smalltalk code on aStream that compiles to the same symbol
     as the receiver.

storeOn: aStream
     Print Smalltalk code on aStream that compiles to the same symbol
     as the receiver.



File: gst-base.info,  Node: Symbol-testing,  Next: Symbol-testing functionality,  Prev: Symbol-storing,  Up: Symbol

1.159.10 Symbol: testing
------------------------

isSimpleSymbol
     Answer whether the receiver must be represented in quoted-string
     (e.g. #'abc-def') form.



File: gst-base.info,  Node: Symbol-testing functionality,  Prev: Symbol-testing,  Up: Symbol

1.159.11 Symbol: testing functionality
--------------------------------------

isString
     Answer `false'.

isSymbol
     Answer `true'.



File: gst-base.info,  Node: SymLink,  Next: SystemDictionary,  Prev: Symbol,  Up: Base classes

1.160 SymLink
=============

Defined in namespace Smalltalk
Superclass: Link
Category: Language-Implementation
     I am used to implement the Smalltalk symbol table.  My instances
     are links that contain symbols, and the symbol table basically a
     hash table that points to chains of my instances.

* Menu:

* SymLink class-instance creation::  (class)
* SymLink-accessing::  (instance)
* SymLink-iteration::  (instance)
* SymLink-printing::  (instance)


File: gst-base.info,  Node: SymLink class-instance creation,  Next: SymLink-accessing,  Up: SymLink

1.160.1 SymLink class: instance creation
----------------------------------------

symbol: aSymbol nextLink: aSymLink
     Answer a new SymLink, which refers to aSymbol and points to
     aSymLink as the next SymLink in the chain.



File: gst-base.info,  Node: SymLink-accessing,  Next: SymLink-iteration,  Prev: SymLink class-instance creation,  Up: SymLink

1.160.2 SymLink: accessing
--------------------------

symbol
     Answer the Symbol that the receiver refers to in the symbol table.

symbol: aSymbol
     Set the Symbol that the receiver refers to in the symbol table.



File: gst-base.info,  Node: SymLink-iteration,  Next: SymLink-printing,  Prev: SymLink-accessing,  Up: SymLink

1.160.3 SymLink: iteration
--------------------------

do: aBlock
     Evaluate aBlock for each symbol in the list



File: gst-base.info,  Node: SymLink-printing,  Prev: SymLink-iteration,  Up: SymLink

1.160.4 SymLink: printing
-------------------------

printOn: aStream
     Print a representation of the receiver on aStream.



File: gst-base.info,  Node: SystemDictionary,  Next: SystemExceptions.AlreadyDefined,  Prev: SymLink,  Up: Base classes

1.161 SystemDictionary
======================

Defined in namespace Smalltalk
Superclass: RootNamespace
Category: Language-Implementation
     I am a special namespace. I only have one instance, called
     "Smalltalk", which is known to the Smalltalk interpreter.  I define
     several methods that are "system" related, such as #quitPrimitive.
     My instance also helps keep track of dependencies between objects.

* Menu:

* SystemDictionary class-initialization::  (class)
* SystemDictionary-basic::  (instance)
* SystemDictionary-builtins::  (instance)
* SystemDictionary-c call-outs::  (instance)
* SystemDictionary-command-line::  (instance)
* SystemDictionary-miscellaneous::  (instance)
* SystemDictionary-printing::  (instance)
* SystemDictionary-profiling::  (instance)
* SystemDictionary-special accessing::  (instance)
* SystemDictionary-testing::  (instance)


File: gst-base.info,  Node: SystemDictionary class-initialization,  Next: SystemDictionary-basic,  Up: SystemDictionary

1.161.1 SystemDictionary class: initialization
----------------------------------------------

initialize
     Create the kernel's private namespace.



File: gst-base.info,  Node: SystemDictionary-basic,  Next: SystemDictionary-builtins,  Prev: SystemDictionary class-initialization,  Up: SystemDictionary

1.161.2 SystemDictionary: basic
-------------------------------

halt
     Interrupt interpreter

hash
     Smalltalk usually contains a reference to itself, avoid infinite
     loops



File: gst-base.info,  Node: SystemDictionary-builtins,  Next: SystemDictionary-c call-outs,  Prev: SystemDictionary-basic,  Up: SystemDictionary

1.161.3 SystemDictionary: builtins
----------------------------------

basicBacktrace
     Prints the method invocation stack backtrace, as an aid to
     debugging

byteCodeCounter
     Answer the number of bytecodes executed by the VM

debug
     This methods provides a way to break in the VM code.  Set a
     breakpoint in _gst_debug and call this method near the point where
     you think the bug happens.

declarationTrace
     Answer whether compiled bytecodes are printed on stdout

declarationTrace: aBoolean
     Set whether compiled bytecodes are printed on stdout

executionTrace
     Answer whether executed bytecodes are printed on stdout

executionTrace: aBoolean
     Set whether executed bytecodes are printed on stdout

getTraceFlag: anIndex
     Private - Returns a boolean value which is one of the interpreter's
     tracing flags

setTraceFlag: anIndex to: aBoolean
     Private - Sets the value of one of the interpreter's tracing flags
     (indicated by 'anIndex') to the value aBoolean.

verboseTrace
     Answer whether execution tracing prints the object on the stack top

verboseTrace: aBoolean
     Set whether execution tracing prints the object on the stack top



File: gst-base.info,  Node: SystemDictionary-c call-outs,  Next: SystemDictionary-command-line,  Prev: SystemDictionary-builtins,  Up: SystemDictionary

1.161.4 SystemDictionary: c call-outs
-------------------------------------

environ
     Not commented.

getArgc
     Not commented.

getArgv: index
     Not commented.

getenv: aString
     Not commented.

putenv: aString
     Not commented.

system: aString
     Not commented.

system: aString withArguments: args
     Not commented.



File: gst-base.info,  Node: SystemDictionary-command-line,  Next: SystemDictionary-miscellaneous,  Prev: SystemDictionary-c call-outs,  Up: SystemDictionary

1.161.5 SystemDictionary: command-line
--------------------------------------

arguments: pattern do: actionBlock
     Parse the command-line arguments according to the syntax specified
     in pattern.  For every command-line option found, the two-argument
     block actionBlock is evaluated passing the option name and the
     argument.  For file names (or in general, other command-line
     arguments than options) the block's first argument will be nil.
     For options without arguments, or with unspecified optional
     arguments, the block's second argument will be nil.  The option
     name will be passed as a character object for short options, and
     as a string for long options.

     If an error is found, nil is returned.  For more information on
     the syntax of pattern, see #arguments:do:ifError:.

arguments: pattern do: actionBlock ifError: errorBlock
     Parse the command-line arguments according to the syntax specified
     in pattern.  For every command-line option found, the two-argument
     block actionBlock is evaluated passing the option name and the
     argument.  For file names (or in general, other command-line
     arguments than options) the block's first argument will be nil.
     For options without arguments, or with unspecified optional
     arguments, the block's second argument will be nil.  The option
     name will be passed as a character object for short options, and
     as a string for long options.

     If an error is found, the parsing is interrupted, errorBlock is
     evaluated, and the returned value is answered.

     Every whitespace-separated part (`word') of pattern specifies a
     command-line option.  If a word ends with a colon, the option will
     have a mandatory argument.  If a word ends with two colons, the
     option will have an optional argument.  Before the colons,
     multiple option names (either short names like `-l' or long names
     like `-long') can be specified.  Before passing the option to
     actionBlock, the name will be canonicalized to the last one.

     Prefixes of long options are accepted as long as they're unique,
     and they are canonicalized to the full name before passing it to
     actionBlock.  Additionally, the full name of an option is accepted
     even if it is the prefix of a longer option.

     Mandatory arguments can appear in the next argument, or in the
     same argument (separated by an = for arguments to long options).
     Optional arguments must appear in the same argument.



File: gst-base.info,  Node: SystemDictionary-miscellaneous,  Next: SystemDictionary-printing,  Prev: SystemDictionary-command-line,  Up: SystemDictionary

1.161.6 SystemDictionary: miscellaneous
---------------------------------------

arguments
     Return the command line arguments after the -a switch

backtrace
     Print a backtrace on the Transcript.

hostSystem
     Answer the triplet corresponding to the system for which GNU
     Smalltalk was built.



File: gst-base.info,  Node: SystemDictionary-printing,  Next: SystemDictionary-profiling,  Prev: SystemDictionary-miscellaneous,  Up: SystemDictionary

1.161.7 SystemDictionary: printing
----------------------------------

nameIn: aNamespace
     Answer `'Smalltalk".

printOn: aStream in: aNamespace
     Store Smalltalk code compiling to the receiver

storeOn: aStream
     Store Smalltalk code compiling to the receiver



File: gst-base.info,  Node: SystemDictionary-profiling,  Next: SystemDictionary-special accessing,  Prev: SystemDictionary-printing,  Up: SystemDictionary

1.161.8 SystemDictionary: profiling
-----------------------------------

rawProfile: anIdentityDictionary
     Set the raw profile to be anIdentityDictionary and return the old
     one.



File: gst-base.info,  Node: SystemDictionary-special accessing,  Next: SystemDictionary-testing,  Prev: SystemDictionary-profiling,  Up: SystemDictionary

1.161.9 SystemDictionary: special accessing
-------------------------------------------

addFeature: aFeature
     Add the aFeature feature to the Features set

hasFeatures: features
     Returns true if the feature or features in 'features' is one of the
     implementation dependent features present

removeFeature: aFeature
     Remove the aFeature feature to the Features set

version
     Answer the current version of the GNU Smalltalk environment



File: gst-base.info,  Node: SystemDictionary-testing,  Prev: SystemDictionary-special accessing,  Up: SystemDictionary

1.161.10 SystemDictionary: testing
----------------------------------

imageLocal
     Answer whether the kernel directory is a subdirectory of the image
     directory (non-local image) or not.

isSmalltalk
     Answer `true'.



File: gst-base.info,  Node: SystemExceptions.AlreadyDefined,  Next: SystemExceptions.ArgumentOutOfRange,  Prev: SystemDictionary,  Up: Base classes

1.162 SystemExceptions.AlreadyDefined
=====================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidArgument
Category: Language-Exceptions
     I am raised when one tries to define a symbol (class or pool
     variable) that is already defined.

* Menu:

* SystemExceptions.AlreadyDefined-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.AlreadyDefined-accessing,  Up: SystemExceptions.AlreadyDefined

1.162.1 SystemExceptions.AlreadyDefined: accessing
--------------------------------------------------

description
     Answer a description for the error



File: gst-base.info,  Node: SystemExceptions.ArgumentOutOfRange,  Next: SystemExceptions.BadReturn,  Prev: SystemExceptions.AlreadyDefined,  Up: Base classes

1.163 SystemExceptions.ArgumentOutOfRange
=========================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidArgument
Category: Language-Exceptions
     I am raised when one invokes a method with an argument outside of
     its valid range.

* Menu:

* SystemExceptions.ArgumentOutOfRange class-signaling::  (class)
* SystemExceptions.ArgumentOutOfRange-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.ArgumentOutOfRange class-signaling,  Next: SystemExceptions.ArgumentOutOfRange-accessing,  Up: SystemExceptions.ArgumentOutOfRange

1.163.1 SystemExceptions.ArgumentOutOfRange class: signaling
------------------------------------------------------------

signalOn: value mustBeBetween: low and: high
     Raise the exception.  The given value was not between low and high.



File: gst-base.info,  Node: SystemExceptions.ArgumentOutOfRange-accessing,  Prev: SystemExceptions.ArgumentOutOfRange class-signaling,  Up: SystemExceptions.ArgumentOutOfRange

1.163.2 SystemExceptions.ArgumentOutOfRange: accessing
------------------------------------------------------

description
     Answer a textual description of the exception.

high
     Answer the highest value that was permitted.

high: aMagnitude
     Set the highest value that was permitted.

low
     Answer the lowest value that was permitted.

low: aMagnitude
     Set the lowest value that was permitted.



File: gst-base.info,  Node: SystemExceptions.BadReturn,  Next: SystemExceptions.CInterfaceError,  Prev: SystemExceptions.ArgumentOutOfRange,  Up: Base classes

1.164 SystemExceptions.BadReturn
================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.VMError
Category: Language-Exceptions
     I am raised when one tries to return from an already-terminated
     method.

* Menu:

* SystemExceptions.BadReturn-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.BadReturn-accessing,  Up: SystemExceptions.BadReturn

1.164.1 SystemExceptions.BadReturn: accessing
---------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.CInterfaceError,  Next: SystemExceptions.EmptyCollection,  Prev: SystemExceptions.BadReturn,  Up: Base classes

1.165 SystemExceptions.CInterfaceError
======================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.PrimitiveFailed
Category: Language-Exceptions
     I am raised when an error happens that is related to the C
     interface.

* Menu:

* SystemExceptions.CInterfaceError-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.CInterfaceError-accessing,  Up: SystemExceptions.CInterfaceError

1.165.1 SystemExceptions.CInterfaceError: accessing
---------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.EmptyCollection,  Next: SystemExceptions.EndOfStream,  Prev: SystemExceptions.CInterfaceError,  Up: Base classes

1.166 SystemExceptions.EmptyCollection
======================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidValue
Category: Language-Exceptions
     I am raised when one invokes a method on an empty collection.

* Menu:

* SystemExceptions.EmptyCollection-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.EmptyCollection-accessing,  Up: SystemExceptions.EmptyCollection

1.166.1 SystemExceptions.EmptyCollection: accessing
---------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.EndOfStream,  Next: SystemExceptions.FileError,  Prev: SystemExceptions.EmptyCollection,  Up: Base classes

1.167 SystemExceptions.EndOfStream
==================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: Notification
Category: Language-Exceptions
     I am raised when a stream reaches its end.

* Menu:

* SystemExceptions.EndOfStream class-signaling::  (class)
* SystemExceptions.EndOfStream-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.EndOfStream class-signaling,  Next: SystemExceptions.EndOfStream-accessing,  Up: SystemExceptions.EndOfStream

1.167.1 SystemExceptions.EndOfStream class: signaling
-----------------------------------------------------

signalOn: stream
     Answer an exception reporting the parameter has reached its end.



File: gst-base.info,  Node: SystemExceptions.EndOfStream-accessing,  Prev: SystemExceptions.EndOfStream class-signaling,  Up: SystemExceptions.EndOfStream

1.167.2 SystemExceptions.EndOfStream: accessing
-----------------------------------------------

description
     Answer a textual description of the exception.

stream
     Answer the stream whose end was reached.

stream: anObject
     Set the stream whose end was reached.



File: gst-base.info,  Node: SystemExceptions.FileError,  Next: SystemExceptions.IndexOutOfRange,  Prev: SystemExceptions.EndOfStream,  Up: Base classes

1.168 SystemExceptions.FileError
================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.PrimitiveFailed
Category: Language-Exceptions
     I am raised when an error happens that is related to the file
     system.

* Menu:

* SystemExceptions.FileError-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.FileError-accessing,  Up: SystemExceptions.FileError

1.168.1 SystemExceptions.FileError: accessing
---------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.IndexOutOfRange,  Next: SystemExceptions.InvalidArgument,  Prev: SystemExceptions.FileError,  Up: Base classes

1.169 SystemExceptions.IndexOutOfRange
======================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.ArgumentOutOfRange
Category: Language-Exceptions
     I am raised when one invokes am accessor method with an index
     outside of its valid range.

* Menu:

* SystemExceptions.IndexOutOfRange class-signaling::  (class)
* SystemExceptions.IndexOutOfRange-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.IndexOutOfRange class-signaling,  Next: SystemExceptions.IndexOutOfRange-accessing,  Up: SystemExceptions.IndexOutOfRange

1.169.1 SystemExceptions.IndexOutOfRange class: signaling
---------------------------------------------------------

signalOn: aCollection withIndex: value
     The given index was out of range in aCollection.



File: gst-base.info,  Node: SystemExceptions.IndexOutOfRange-accessing,  Prev: SystemExceptions.IndexOutOfRange class-signaling,  Up: SystemExceptions.IndexOutOfRange

1.169.2 SystemExceptions.IndexOutOfRange: accessing
---------------------------------------------------

collection
     Answer the collection that triggered the error

collection: anObject
     Set the collection that triggered the error

description
     Answer a textual description of the exception.

messageText
     Answer an exception's message text.



File: gst-base.info,  Node: SystemExceptions.InvalidArgument,  Next: SystemExceptions.InvalidProcessState,  Prev: SystemExceptions.IndexOutOfRange,  Up: Base classes

1.170 SystemExceptions.InvalidArgument
======================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidValue
Category: Language-Exceptions
     I am raised when one invokes a method with an invalid argument.

* Menu:

* SystemExceptions.InvalidArgument-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.InvalidArgument-accessing,  Up: SystemExceptions.InvalidArgument

1.170.1 SystemExceptions.InvalidArgument: accessing
---------------------------------------------------

messageText
     Answer an exception's message text.



File: gst-base.info,  Node: SystemExceptions.InvalidProcessState,  Next: SystemExceptions.InvalidSize,  Prev: SystemExceptions.InvalidArgument,  Up: Base classes

1.171 SystemExceptions.InvalidProcessState
==========================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidValue
Category: Language-Exceptions
     I am an error raised when trying to resume a terminated process, or
     stuff like that.

* Menu:

* SystemExceptions.InvalidProcessState-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.InvalidProcessState-accessing,  Up: SystemExceptions.InvalidProcessState

1.171.1 SystemExceptions.InvalidProcessState: accessing
-------------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.InvalidSize,  Next: SystemExceptions.InvalidState,  Prev: SystemExceptions.InvalidProcessState,  Up: Base classes

1.172 SystemExceptions.InvalidSize
==================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidArgument
Category: Language-Exceptions
     I am raised when an argument has an invalid size.

* Menu:

* SystemExceptions.InvalidSize-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.InvalidSize-accessing,  Up: SystemExceptions.InvalidSize

1.172.1 SystemExceptions.InvalidSize: accessing
-----------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.InvalidState,  Next: SystemExceptions.InvalidValue,  Prev: SystemExceptions.InvalidSize,  Up: Base classes

1.173 SystemExceptions.InvalidState
===================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidValue
Category: Language-Exceptions
     I am raised when one invokes a method and the receiver or an
     argument are in an invalid state for the method.

* Menu:

* SystemExceptions.InvalidState-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.InvalidState-accessing,  Up: SystemExceptions.InvalidState

1.173.1 SystemExceptions.InvalidState: accessing
------------------------------------------------

messageText
     Answer an exception's message text.



File: gst-base.info,  Node: SystemExceptions.InvalidValue,  Next: SystemExceptions.MustBeBoolean,  Prev: SystemExceptions.InvalidState,  Up: Base classes

1.174 SystemExceptions.InvalidValue
===================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: Error
Category: Language-Exceptions
     I am raised when one invokes a method with an invalid receiver or
     argument.

* Menu:

* SystemExceptions.InvalidValue class-signaling::  (class)
* SystemExceptions.InvalidValue-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.InvalidValue class-signaling,  Next: SystemExceptions.InvalidValue-accessing,  Up: SystemExceptions.InvalidValue

1.174.1 SystemExceptions.InvalidValue class: signaling
------------------------------------------------------

signalOn: value
     Answer an exception reporting the parameter as invalid.

signalOn: value reason: reason
     Answer an exception reporting `value' as invalid, for the given
     reason.



File: gst-base.info,  Node: SystemExceptions.InvalidValue-accessing,  Prev: SystemExceptions.InvalidValue class-signaling,  Up: SystemExceptions.InvalidValue

1.174.2 SystemExceptions.InvalidValue: accessing
------------------------------------------------

description
     Answer a textual description of the exception.

messageText
     Answer an exception's message text.

value
     Answer the object that was found to be invalid.

value: anObject
     Set the object that was found to be invalid.



File: gst-base.info,  Node: SystemExceptions.MustBeBoolean,  Next: SystemExceptions.MutationError,  Prev: SystemExceptions.InvalidValue,  Up: Base classes

1.175 SystemExceptions.MustBeBoolean
====================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.WrongClass
Category: Language-Exceptions
     I am raised when one invokes a boolean method on a non-boolean.

* Menu:

* SystemExceptions.MustBeBoolean class-signaling::  (class)


File: gst-base.info,  Node: SystemExceptions.MustBeBoolean class-signaling,  Up: SystemExceptions.MustBeBoolean

1.175.1 SystemExceptions.MustBeBoolean class: signaling
-------------------------------------------------------

signalOn: anObject
     Signal a new exception, with the bad value in question being
     anObject.



File: gst-base.info,  Node: SystemExceptions.MutationError,  Next: SystemExceptions.NoRunnableProcess,  Prev: SystemExceptions.MustBeBoolean,  Up: Base classes

1.176 SystemExceptions.MutationError
====================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: Error
Category: Language-Exceptions
     I am an error raised when a class is mutated in an invalid way.

* Menu:

* SystemExceptions.MutationError class-instance creation::  (class)
* SystemExceptions.MutationError-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.MutationError class-instance creation,  Next: SystemExceptions.MutationError-accessing,  Up: SystemExceptions.MutationError

1.176.1 SystemExceptions.MutationError class: instance creation
---------------------------------------------------------------

new
     Create an instance of the receiver, which you will be able to
     signal later.



File: gst-base.info,  Node: SystemExceptions.MutationError-accessing,  Prev: SystemExceptions.MutationError class-instance creation,  Up: SystemExceptions.MutationError

1.176.2 SystemExceptions.MutationError: accessing
-------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.NoRunnableProcess,  Next: SystemExceptions.NotEnoughElements,  Prev: SystemExceptions.MutationError,  Up: Base classes

1.177 SystemExceptions.NoRunnableProcess
========================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.VMError
Category: Language-Exceptions
     I am raised when no runnable process can be found in the image.

* Menu:

* SystemExceptions.NoRunnableProcess-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.NoRunnableProcess-accessing,  Up: SystemExceptions.NoRunnableProcess

1.177.1 SystemExceptions.NoRunnableProcess: accessing
-----------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.NotEnoughElements,  Next: SystemExceptions.NotFound,  Prev: SystemExceptions.NoRunnableProcess,  Up: Base classes

1.178 SystemExceptions.NotEnoughElements
========================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: Error
Category: Language-Exceptions
     I am raised when one invokes #next: but not enough items remain in
     the stream.

* Menu:

* SystemExceptions.NotEnoughElements class-signaling::  (class)
* SystemExceptions.NotEnoughElements-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.NotEnoughElements class-signaling,  Next: SystemExceptions.NotEnoughElements-accessing,  Up: SystemExceptions.NotEnoughElements

1.178.1 SystemExceptions.NotEnoughElements class: signaling
-----------------------------------------------------------

signalOn: remainingCount
     Answer an exception reporting the parameter as invalid.



File: gst-base.info,  Node: SystemExceptions.NotEnoughElements-accessing,  Prev: SystemExceptions.NotEnoughElements class-signaling,  Up: SystemExceptions.NotEnoughElements

1.178.2 SystemExceptions.NotEnoughElements: accessing
-----------------------------------------------------

description
     Answer a textual description of the exception.

messageText
     Answer an exception's message text.

remainingCount
     Answer the number of items that were to be read.

remainingCount: anObject
     Set the number of items that were to be read.



File: gst-base.info,  Node: SystemExceptions.NotFound,  Next: SystemExceptions.NotImplemented,  Prev: SystemExceptions.NotEnoughElements,  Up: Base classes

1.179 SystemExceptions.NotFound
===============================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidArgument
Category: Language-Exceptions
     I am raised when something is searched without success.

* Menu:

* SystemExceptions.NotFound class-accessing::  (class)
* SystemExceptions.NotFound-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.NotFound class-accessing,  Next: SystemExceptions.NotFound-accessing,  Up: SystemExceptions.NotFound

1.179.1 SystemExceptions.NotFound class: accessing
--------------------------------------------------

signalOn: value reason: aString
     Raise an exception: reason specifies the reason of the exception.

signalOn: value what: aString
     Raise an exception; aString specifies what was not found (a key,
     an object, a class, and so on).



File: gst-base.info,  Node: SystemExceptions.NotFound-accessing,  Prev: SystemExceptions.NotFound class-accessing,  Up: SystemExceptions.NotFound

1.179.2 SystemExceptions.NotFound: accessing
--------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.NotImplemented,  Next: SystemExceptions.NotIndexable,  Prev: SystemExceptions.NotFound,  Up: Base classes

1.180 SystemExceptions.NotImplemented
=====================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: Error
Category: Language-Exceptions
     I am raised when a method is called that has not been implemented.

* Menu:

* SystemExceptions.NotImplemented-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.NotImplemented-accessing,  Up: SystemExceptions.NotImplemented

1.180.1 SystemExceptions.NotImplemented: accessing
--------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.NotIndexable,  Next: SystemExceptions.NotYetImplemented,  Prev: SystemExceptions.NotImplemented,  Up: Base classes

1.181 SystemExceptions.NotIndexable
===================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidValue
Category: Language-Exceptions
     I am raised when an object is not indexable.

* Menu:

* SystemExceptions.NotIndexable-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.NotIndexable-accessing,  Up: SystemExceptions.NotIndexable

1.181.1 SystemExceptions.NotIndexable: accessing
------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.NotYetImplemented,  Next: SystemExceptions.PackageNotAvailable,  Prev: SystemExceptions.NotIndexable,  Up: Base classes

1.182 SystemExceptions.NotYetImplemented
========================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.NotImplemented
Category: Language-Exceptions
     I am raised when a method is called that has not been implemented
     yet.

* Menu:

* SystemExceptions.NotYetImplemented-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.NotYetImplemented-accessing,  Up: SystemExceptions.NotYetImplemented

1.182.1 SystemExceptions.NotYetImplemented: accessing
-----------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.PackageNotAvailable,  Next: SystemExceptions.PrimitiveFailed,  Prev: SystemExceptions.NotYetImplemented,  Up: Base classes

1.183 SystemExceptions.PackageNotAvailable
==========================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.NotFound
Category: Language-Packaging

* Menu:

* SystemExceptions.PackageNotAvailable class-still unclassified::  (class)
* SystemExceptions.PackageNotAvailable-description::  (instance)


File: gst-base.info,  Node: SystemExceptions.PackageNotAvailable class-still unclassified,  Next: SystemExceptions.PackageNotAvailable-description,  Up: SystemExceptions.PackageNotAvailable

1.183.1 SystemExceptions.PackageNotAvailable class: still unclassified
----------------------------------------------------------------------

signal: aString
     Signal an exception saying that the package named aString can't be
     found.

signal: package reason: reason
     Signal an exception saying that be package named package can't be
     found because the reason named reason.



File: gst-base.info,  Node: SystemExceptions.PackageNotAvailable-description,  Prev: SystemExceptions.PackageNotAvailable class-still unclassified,  Up: SystemExceptions.PackageNotAvailable

1.183.2 SystemExceptions.PackageNotAvailable: description
---------------------------------------------------------

isResumable
     Answer true.  Package unavailability is resumable, because the
     package files might just lie elsewhere.



File: gst-base.info,  Node: SystemExceptions.PrimitiveFailed,  Next: SystemExceptions.ProcessBeingTerminated,  Prev: SystemExceptions.PackageNotAvailable,  Up: Base classes

1.184 SystemExceptions.PrimitiveFailed
======================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.VMError
Category: Language-Exceptions
     I am raised when a primitive fails for some reason.

* Menu:

* SystemExceptions.PrimitiveFailed-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.PrimitiveFailed-accessing,  Up: SystemExceptions.PrimitiveFailed

1.184.1 SystemExceptions.PrimitiveFailed: accessing
---------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.ProcessBeingTerminated,  Next: SystemExceptions.ProcessTerminated,  Prev: SystemExceptions.PrimitiveFailed,  Up: Base classes

1.185 SystemExceptions.ProcessBeingTerminated
=============================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: Notification
Category: Language-Exceptions
     I am raised when a process is terminated.

* Menu:

* SystemExceptions.ProcessBeingTerminated class-still unclassified::  (class)
* SystemExceptions.ProcessBeingTerminated-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.ProcessBeingTerminated class-still unclassified,  Next: SystemExceptions.ProcessBeingTerminated-accessing,  Up: SystemExceptions.ProcessBeingTerminated

1.185.1 SystemExceptions.ProcessBeingTerminated class: still unclassified
-------------------------------------------------------------------------

initialize
     Not commented.



File: gst-base.info,  Node: SystemExceptions.ProcessBeingTerminated-accessing,  Prev: SystemExceptions.ProcessBeingTerminated class-still unclassified,  Up: SystemExceptions.ProcessBeingTerminated

1.185.2 SystemExceptions.ProcessBeingTerminated: accessing
----------------------------------------------------------

description
     Answer a textual description of the exception.

semaphore
     If the process was waiting on a semaphore, answer it.

semaphore: aSemaphore
     If the process was waiting on a semaphore, answer it.



File: gst-base.info,  Node: SystemExceptions.ProcessTerminated,  Next: SystemExceptions.ReadOnlyObject,  Prev: SystemExceptions.ProcessBeingTerminated,  Up: Base classes

1.186 SystemExceptions.ProcessTerminated
========================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidValue
Category: Language-Exceptions
     I am raised when somebody tries to resume or interrupt a
     terminated process.

* Menu:

* SystemExceptions.ProcessTerminated-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.ProcessTerminated-accessing,  Up: SystemExceptions.ProcessTerminated

1.186.1 SystemExceptions.ProcessTerminated: accessing
-----------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.ReadOnlyObject,  Next: SystemExceptions.SecurityError,  Prev: SystemExceptions.ProcessTerminated,  Up: Base classes

1.187 SystemExceptions.ReadOnlyObject
=====================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidValue
Category: Language-Exceptions
     I am raised when one writes to a read-only object.

* Menu:

* SystemExceptions.ReadOnlyObject-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.ReadOnlyObject-accessing,  Up: SystemExceptions.ReadOnlyObject

1.187.1 SystemExceptions.ReadOnlyObject: accessing
--------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.SecurityError,  Next: SystemExceptions.ShouldNotImplement,  Prev: SystemExceptions.ReadOnlyObject,  Up: Base classes

1.188 SystemExceptions.SecurityError
====================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.VMError
Category: Language-Exceptions
     I am an error raised when an untrusted object tries to do an
     insecure operation.

* Menu:

* SystemExceptions.SecurityError class-accessing::  (class)
* SystemExceptions.SecurityError-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.SecurityError class-accessing,  Next: SystemExceptions.SecurityError-accessing,  Up: SystemExceptions.SecurityError

1.188.1 SystemExceptions.SecurityError class: accessing
-------------------------------------------------------

signal: aPermission
     Raise the exception, setting to aPermission the permission that
     was tested and failed.



File: gst-base.info,  Node: SystemExceptions.SecurityError-accessing,  Prev: SystemExceptions.SecurityError class-accessing,  Up: SystemExceptions.SecurityError

1.188.2 SystemExceptions.SecurityError: accessing
-------------------------------------------------

description
     Answer a textual description of the exception.

failedPermission
     Answer the permission that was tested and that failed.

failedPermission: anObject
     Set which permission was tested and failed.



File: gst-base.info,  Node: SystemExceptions.ShouldNotImplement,  Next: SystemExceptions.SubclassResponsibility,  Prev: SystemExceptions.SecurityError,  Up: Base classes

1.189 SystemExceptions.ShouldNotImplement
=========================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.NotImplemented
Category: Language-Exceptions
     I am raised when a method is called that a class wishes that is not
     called.

* Menu:

* SystemExceptions.ShouldNotImplement-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.ShouldNotImplement-accessing,  Up: SystemExceptions.ShouldNotImplement

1.189.1 SystemExceptions.ShouldNotImplement: accessing
------------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.SubclassResponsibility,  Next: SystemExceptions.UnhandledException,  Prev: SystemExceptions.ShouldNotImplement,  Up: Base classes

1.190 SystemExceptions.SubclassResponsibility
=============================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.ShouldNotImplement
Category: Language-Exceptions
     I am raised when a method is called whose implementation is the
     responsibility of concrete subclass.

* Menu:

* SystemExceptions.SubclassResponsibility-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.SubclassResponsibility-accessing,  Up: SystemExceptions.SubclassResponsibility

1.190.1 SystemExceptions.SubclassResponsibility: accessing
----------------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.UnhandledException,  Next: SystemExceptions.UserInterrupt,  Prev: SystemExceptions.SubclassResponsibility,  Up: Base classes

1.191 SystemExceptions.UnhandledException
=========================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: Exception
Category: Language-Exception
     I am raised when a backtrace is shown to terminate the current
     process.

* Menu:

* SystemExceptions.UnhandledException-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.UnhandledException-accessing,  Up: SystemExceptions.UnhandledException

1.191.1 SystemExceptions.UnhandledException: accessing
------------------------------------------------------

defaultAction
     Terminate the current process.

description
     Answer a textual description of the exception.

originalException
     Answer the uncaught exception.

originalException: anObject
     Set the uncaught exception to anObject.



File: gst-base.info,  Node: SystemExceptions.UserInterrupt,  Next: SystemExceptions.VerificationError,  Prev: SystemExceptions.UnhandledException,  Up: Base classes

1.192 SystemExceptions.UserInterrupt
====================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.VMError
Category: Language-Exceptions
     I am raised when one presses Ctrl-C.

* Menu:

* SystemExceptions.UserInterrupt-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.UserInterrupt-accessing,  Up: SystemExceptions.UserInterrupt

1.192.1 SystemExceptions.UserInterrupt: accessing
-------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.VerificationError,  Next: SystemExceptions.VMError,  Prev: SystemExceptions.UserInterrupt,  Up: Base classes

1.193 SystemExceptions.VerificationError
========================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.VMError
Category: Language-Exceptions
     I am raised when the verification of a method fails.

* Menu:

* SystemExceptions.VerificationError-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.VerificationError-accessing,  Up: SystemExceptions.VerificationError

1.193.1 SystemExceptions.VerificationError: accessing
-----------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.VMError,  Next: SystemExceptions.WrongArgumentCount,  Prev: SystemExceptions.VerificationError,  Up: Base classes

1.194 SystemExceptions.VMError
==============================

Defined in namespace Smalltalk.SystemExceptions
Superclass: Error
Category: Language-Exceptions
     I am an error related to the innards of the system.

* Menu:

* SystemExceptions.VMError-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.VMError-accessing,  Up: SystemExceptions.VMError

1.194.1 SystemExceptions.VMError: accessing
-------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.WrongArgumentCount,  Next: SystemExceptions.WrongClass,  Prev: SystemExceptions.VMError,  Up: Base classes

1.195 SystemExceptions.WrongArgumentCount
=========================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.PrimitiveFailed
Category: Language-Exceptions
     I am raised when one tries to evaluate a method (via #perform:...)
     or a block but passes the wrong number of arguments.

* Menu:

* SystemExceptions.WrongArgumentCount-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.WrongArgumentCount-accessing,  Up: SystemExceptions.WrongArgumentCount

1.195.1 SystemExceptions.WrongArgumentCount: accessing
------------------------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: SystemExceptions.WrongClass,  Next: SystemExceptions.WrongMessageSent,  Prev: SystemExceptions.WrongArgumentCount,  Up: Base classes

1.196 SystemExceptions.WrongClass
=================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.InvalidValue
Category: Language-Exceptions
     I am raised when an argument is constrained to be an instance of a
     determinate class, and this constraint is not respected by the
     caller.

* Menu:

* SystemExceptions.WrongClass class-signaling::  (class)
* SystemExceptions.WrongClass-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.WrongClass class-signaling,  Next: SystemExceptions.WrongClass-accessing,  Up: SystemExceptions.WrongClass

1.196.1 SystemExceptions.WrongClass class: signaling
----------------------------------------------------

signalOn: anObject mustBe: aClassOrArray
     Raise an exception.  The given object should have been an instance
     of one of the classes indicated by aClassOrArray (which should be
     a single class or an array of classes).  Whether instances of
     subclasses are allowed should be clear from the context, though in
     general (i.e. with the exception of a few system messages) they
     should be.



File: gst-base.info,  Node: SystemExceptions.WrongClass-accessing,  Prev: SystemExceptions.WrongClass class-signaling,  Up: SystemExceptions.WrongClass

1.196.2 SystemExceptions.WrongClass: accessing
----------------------------------------------

description
     Answer a textual description of the exception.

messageText
     Answer an exception's message text.

validClasses
     Answer the list of classes whose instances would have been valid.

validClasses: aCollection
     Set the list of classes whose instances would have been valid.

validClassesString
     Answer the list of classes whose instances would have been valid,
     formatted as a string.



File: gst-base.info,  Node: SystemExceptions.WrongMessageSent,  Next: TextCollector,  Prev: SystemExceptions.WrongClass,  Up: Base classes

1.197 SystemExceptions.WrongMessageSent
=======================================

Defined in namespace Smalltalk.SystemExceptions
Superclass: SystemExceptions.ShouldNotImplement
Category: Language-Exceptions
     I am raised when a method is called that a class wishes that is not
     called.  This exception also includes a suggestion on which message
     should be sent instead

* Menu:

* SystemExceptions.WrongMessageSent class-signaling::  (class)
* SystemExceptions.WrongMessageSent-accessing::  (instance)


File: gst-base.info,  Node: SystemExceptions.WrongMessageSent class-signaling,  Next: SystemExceptions.WrongMessageSent-accessing,  Up: SystemExceptions.WrongMessageSent

1.197.1 SystemExceptions.WrongMessageSent class: signaling
----------------------------------------------------------

signalOn: selector useInstead: aSymbol
     Raise an exception, signaling which selector was sent and
     suggesting a valid alternative.



File: gst-base.info,  Node: SystemExceptions.WrongMessageSent-accessing,  Prev: SystemExceptions.WrongMessageSent class-signaling,  Up: SystemExceptions.WrongMessageSent

1.197.2 SystemExceptions.WrongMessageSent: accessing
----------------------------------------------------

messageText
     Answer an exception's message text.

selector
     Answer which selector was sent.

selector: aSymbol
     Set which selector was sent.

suggestedSelector
     Answer a valid alternative to the selector that was used.

suggestedSelector: aSymbol
     Set a valid alternative to the selector that was used.



File: gst-base.info,  Node: TextCollector,  Next: Time,  Prev: SystemExceptions.WrongMessageSent,  Up: Base classes

1.198 TextCollector
===================

Defined in namespace Smalltalk
Superclass: Stream
Category: Streams
     I am a thread-safe class that maps between standard Stream
     protocol and a single message to another object (its selector is
     pluggable and should roughly correspond to #nextPutAll:).  I am,
     in fact, the class that implements the global Transcript object.

* Menu:

* TextCollector class-accessing::  (class)
* TextCollector-accessing::  (instance)
* TextCollector-printing::  (instance)
* TextCollector-set up::  (instance)
* TextCollector-storing::  (instance)


File: gst-base.info,  Node: TextCollector class-accessing,  Next: TextCollector-accessing,  Up: TextCollector

1.198.1 TextCollector class: accessing
--------------------------------------

message: receiverToSelectorAssociation
     Answer a new instance of the receiver, that uses the message
     identified by anAssociation to perform write operations.
     anAssociation's key is the receiver, while its value is the
     selector.

new
     This method should not be called for instances of this class.



File: gst-base.info,  Node: TextCollector-accessing,  Next: TextCollector-printing,  Prev: TextCollector class-accessing,  Up: TextCollector

1.198.2 TextCollector: accessing
--------------------------------

cr
     Emit a new-line (carriage return) to the Transcript

critical: aBlock
     Evaluate aBlock while holding the Transcript lock

endEntry
     Emit two new-lines.  This method is present for compatibility with
     VisualWorks.

next: anInteger put: anObject
     Write anInteger copies of anObject to the Transcript

next: n putAll: aString startingAt: pos
     Write aString to the Transcript

nextPut: aCharacter
     Emit aCharacter to the Transcript

show: aString
     Write aString to the Transcript

showCr: aString
     Write aString to the Transcript, followed by a new-line character

showOnNewLine: aString
     Write aString to the Transcript, preceded by a new-line character



File: gst-base.info,  Node: TextCollector-printing,  Next: TextCollector-set up,  Prev: TextCollector-accessing,  Up: TextCollector

1.198.3 TextCollector: printing
-------------------------------

print: anObject
     Print anObject's representation to the Transcript

printOn: aStream
     Print a representation of the receiver onto aStream



File: gst-base.info,  Node: TextCollector-set up,  Next: TextCollector-storing,  Prev: TextCollector-printing,  Up: TextCollector

1.198.4 TextCollector: set up
-----------------------------

message
     Answer an association representing the message to be sent to
     perform write operations.  The key is the receiver, the value is
     the selector

message: receiverToSelectorAssociation
     Set the message to be sent to perform write operations to the one
     represented by anAssociation.  anAssociation's key is the
     receiver, while its value is the selector



File: gst-base.info,  Node: TextCollector-storing,  Prev: TextCollector-set up,  Up: TextCollector

1.198.5 TextCollector: storing
------------------------------

store: anObject
     Print Smalltalk code which evaluates to anObject on the Transcript

storeOn: aStream
     Print Smalltalk code which evaluates to the receiver onto aStream



File: gst-base.info,  Node: Time,  Next: True,  Prev: TextCollector,  Up: Base classes

1.199 Time
==========

Defined in namespace Smalltalk
Superclass: Magnitude
Category: Language-Data types
     My instances represent times of the day.  I provide methods for
     instance creation, methods that access components (hours, minutes,
     and seconds) of a time value, and a block execution timing
     facility.

* Menu:

* Time class-basic (UTC)::  (class)
* Time class-builtins::  (class)
* Time class-clocks::  (class)
* Time class-initialization::  (class)
* Time class-instance creation::  (class)
* Time-accessing (ANSI for DateAndTimes)::  (instance)
* Time-accessing (non ANSI & for Durations)::  (instance)
* Time-arithmetic::  (instance)
* Time-comparing::  (instance)


File: gst-base.info,  Node: Time class-basic (UTC),  Next: Time class-builtins,  Up: Time

1.199.1 Time class: basic (UTC)
-------------------------------

midnight
     Answer a time representing midnight in Coordinated Universal Time
     (UTC)

utcNow
     Answer a time representing the current time of day in Coordinated
     Universal Time (UTC)

utcSecondClock
     Answer the number of seconds since the midnight of 1/1/1901 (unlike
     #secondClock, the reference time is here expressed as UTC, that is
     as Coordinated Universal Time).



File: gst-base.info,  Node: Time class-builtins,  Next: Time class-clocks,  Prev: Time class-basic (UTC),  Up: Time

1.199.2 Time class: builtins
----------------------------

primNanosecondClock
     Returns the number of milliseconds since midnight.

primSecondClock
     Returns the number of seconds to/from 1/1/2000.

timezone
     Answer a String associated with the current timezone (either
     standard or daylight-saving) on this operating system. For
     example, the answer could be `EST' to indicate Eastern Standard
     Time; the answer can be empty and can't be assumed to be a
     three-character code such as `EST'.

timezoneBias
     Specifies the current bias, in seconds, for local time translation
     for the current time. The bias is the difference, in seconds,
     between Coordinated Universal Time (UTC) and local time; a
     positive bias indicates that the local timezone is to the east of
     Greenwich (e.g.  Europe, Asia), while a negative bias indicates
     that it is to the west (e.g. America)

timezoneBias: seconds
     Specifies the bias, in seconds, for local time translation for the
     given second clock value (0 being midnight of 1/1/1901).  The bias
     is the difference, in seconds, between Coordinated Universal Time
     (UTC) and local time; a positive bias indicates that the local
     timezone is to the east of Greenwich (e.g.  Europe, Asia), while a
     negative bias indicates that it is to the west (e.g. America)



File: gst-base.info,  Node: Time class-clocks,  Next: Time class-initialization,  Prev: Time class-builtins,  Up: Time

1.199.3 Time class: clocks
--------------------------

millisecondClock
     Answer the number of milliseconds since startup.

millisecondClockValue
     Answer the number of milliseconds since startup

millisecondsPerDay
     Answer the number of milliseconds in a day

millisecondsToRun: timedBlock
     Answer the number of milliseconds which timedBlock took to run

nanosecondClock
     Answer the number of nanoseconds since startup.

nanosecondClockValue
     Answer the number of milliseconds since startup

secondClock
     Answer the number of seconds since the midnight of 1/1/1901



File: gst-base.info,  Node: Time class-initialization,  Next: Time class-instance creation,  Prev: Time class-clocks,  Up: Time

1.199.4 Time class: initialization
----------------------------------

initialize
     Initialize the Time class after the image has been bootstrapped

update: aspect
     Private - Initialize the receiver's instance variables



File: gst-base.info,  Node: Time class-instance creation,  Next: Time-accessing (ANSI for DateAndTimes),  Prev: Time class-initialization,  Up: Time

1.199.5 Time class: instance creation
-------------------------------------

fromSeconds: secondCount
     Answer a Time representing secondCount seconds past midnight

hour: h
     Answer a Time that is the given number of hours past midnight

hour: h minute: m second: s
     Answer a Time that is the given number of hours, minutes and
     seconds past midnight

hours: h
     Answer a Time that is the given number of hours past midnight

hours: h minutes: m seconds: s
     Answer a Time that is the given number of hours, minutes and
     seconds past midnight

minute: m
     Answer a Time that is the given number of minutes past midnight

minutes: m
     Answer a Time that is the given number of minutes past midnight

new
     Answer a Time representing midnight

now
     Answer a time representing the current time of day

readFrom: aStream
     Parse an instance of the receiver (hours/minutes/seconds) from
     aStream

second: s
     Answer a Time that is the given number of seconds past midnight

seconds: s
     Answer a Time that is the given number of seconds past midnight



File: gst-base.info,  Node: Time-accessing (ANSI for DateAndTimes),  Next: Time-accessing (non ANSI & for Durations),  Prev: Time class-instance creation,  Up: Time

1.199.6 Time: accessing (ANSI for DateAndTimes)
-----------------------------------------------

hour
     Answer the number of hours in the receiver

hour12
     Answer the hour in a 12-hour clock

hour24
     Answer the hour in a 24-hour clock

minute
     Answer the number of minutes in the receiver

second
     Answer the number of seconds in the receiver



File: gst-base.info,  Node: Time-accessing (non ANSI & for Durations),  Next: Time-arithmetic,  Prev: Time-accessing (ANSI for DateAndTimes),  Up: Time

1.199.7 Time: accessing (non ANSI & for Durations)
--------------------------------------------------

asMilliseconds
     Not commented.

asNanoseconds
     Not commented.

asSeconds
     Answer `seconds'.

hours
     Answer the number of hours in the receiver

minutes
     Answer the number of minutes in the receiver

seconds
     Answer the number of seconds in the receiver



File: gst-base.info,  Node: Time-arithmetic,  Next: Time-comparing,  Prev: Time-accessing (non ANSI & for Durations),  Up: Time

1.199.8 Time: arithmetic
------------------------

addSeconds: timeAmount
     Answer a new Time that is timeAmount seconds after the receiver

addTime: timeAmount
     Answer a new Time that is timeAmount seconds after the receiver;
     timeAmount is a Time.

printOn: aStream
     Print a representation of the receiver on aStream

subtractTime: timeAmount
     Answer a new Time that is timeAmount seconds before the receiver;
     timeAmount is a Time.



File: gst-base.info,  Node: Time-comparing,  Prev: Time-arithmetic,  Up: Time

1.199.9 Time: comparing
-----------------------

< aTime
     Answer whether the receiver is less than aTime

= aTime
     Answer whether the receiver is equal to aTime

hash
     Answer an hash value for the receiver



File: gst-base.info,  Node: True,  Next: UndefinedObject,  Prev: Time,  Up: Base classes

1.200 True
==========

Defined in namespace Smalltalk
Superclass: Boolean
Category: Language-Data types
     I represent truth and justice in the world.  My motto is "semper
     veritatis".

* Menu:

* True-basic::  (instance)
* True-C hacks::  (instance)
* True-printing::  (instance)


File: gst-base.info,  Node: True-basic,  Next: True-C hacks,  Up: True

1.200.1 True: basic
-------------------

& aBoolean
     We are true - anded with anything, we always answer the other
     operand

and: aBlock
     We are true - anded with anything, we always answer the other
     operand, so evaluate aBlock

eqv: aBoolean
     Answer whether the receiver and aBoolean represent the same
     boolean value

ifFalse: falseBlock
     We are true - answer nil

ifFalse: falseBlock ifTrue: trueBlock
     We are true - evaluate trueBlock

ifTrue: trueBlock
     We are true - evaluate trueBlock

ifTrue: trueBlock ifFalse: falseBlock
     We are true - evaluate trueBlock

not
     We are true - answer false

or: aBlock
     We are true - ored with anything, we always answer true

xor: aBoolean
     Answer whether the receiver and aBoolean represent different
     boolean values

| aBoolean
     We are true - ored with anything, we always answer true



File: gst-base.info,  Node: True-C hacks,  Next: True-printing,  Prev: True-basic,  Up: True

1.200.2 True: C hacks
---------------------

asCBooleanValue
     Answer `1'.



File: gst-base.info,  Node: True-printing,  Prev: True-C hacks,  Up: True

1.200.3 True: printing
----------------------

printOn: aStream
     Print a representation of the receiver on aStream



File: gst-base.info,  Node: UndefinedObject,  Next: UnicodeCharacter,  Prev: True,  Up: Base classes

1.201 UndefinedObject
=====================

Defined in namespace Smalltalk
Superclass: Object
Category: Language-Implementation
     I have the questionable distinction of being a class with only one
     instance, which is the object "nil".

* Menu:

* UndefinedObject-basic::  (instance)
* UndefinedObject-class creation - alternative::  (instance)
* UndefinedObject-class polymorphism::  (instance)
* UndefinedObject-CObject interoperability::  (instance)
* UndefinedObject-dependents access::  (instance)
* UndefinedObject-iteration::  (instance)
* UndefinedObject-printing::  (instance)
* UndefinedObject-still unclassified::  (instance)
* UndefinedObject-storing::  (instance)
* UndefinedObject-testing::  (instance)


File: gst-base.info,  Node: UndefinedObject-basic,  Next: UndefinedObject-class creation - alternative,  Up: UndefinedObject

1.201.1 UndefinedObject: basic
------------------------------

copy
     Answer the receiver.

deepCopy
     Answer the receiver.

shallowCopy
     Answer the receiver.



File: gst-base.info,  Node: UndefinedObject-class creation - alternative,  Next: UndefinedObject-class polymorphism,  Prev: UndefinedObject-basic,  Up: UndefinedObject

1.201.2 UndefinedObject: class creation - alternative
-----------------------------------------------------

subclass: classNameString classInstanceVariableNames: stringClassInstVarNames instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames
     Don't use this, it is only present to file in from IBM Smalltalk

subclass: classNameString instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames
     Don't use this, it is only present to file in from IBM Smalltalk

variableByteSubclass: classNameString classInstanceVariableNames: stringClassInstVarNames instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames
     Don't use this, it is only present to file in from IBM Smalltalk

variableByteSubclass: classNameString instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames
     Don't use this, it is only present to file in from IBM Smalltalk

variableLongSubclass: classNameString classInstanceVariableNames: stringClassInstVarNames instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames
     Don't use this, it is only present to file in from IBM Smalltalk

variableLongSubclass: classNameString instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames
     Don't use this, it is only present to file in from IBM Smalltalk

variableSubclass: classNameString classInstanceVariableNames: stringClassInstVarNames instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames
     Don't use this, it is only present to file in from IBM Smalltalk

variableSubclass: classNameString instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames
     Don't use this, it is only present to file in from IBM Smalltalk



File: gst-base.info,  Node: UndefinedObject-class polymorphism,  Next: UndefinedObject-CObject interoperability,  Prev: UndefinedObject-class creation - alternative,  Up: UndefinedObject

1.201.3 UndefinedObject: class polymorphism
-------------------------------------------

allSubclasses
     Return all the classes in the system.

instSize
     Answer `0'.

metaclassFor: classNameString
     Create a Metaclass object for the given class name. The metaclass
     is a subclass of Class

methodDictionary
     Answer `nil'.

removeSubclass: aClass
     Ignored - necessary to support disjoint class hierarchies

subclass: classNameString
     Define a subclass of the receiver with the given name.  If the
     class is already defined, don't modify its instance or class
     variables but still, if necessary, recompile everything needed.

subclass: classNameString instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames category: categoryNameString
     Define a fixed subclass of the receiver with the given name,
     instance variables, class variables, pool dictionaries and
     category. If the class is already defined, if necessary, recompile
     everything needed.

variable: shape subclass: classNameString instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames category: categoryNameString
     Define a variable subclass of the receiver with the given name,
     shape, instance variables, class variables, pool dictionaries and
     category. If the class is already defined, if necessary, recompile
     everything needed.  The shape can be one of #byte #int8 #character
     #short #ushort #int #uint #int64 #uint64 #utf32 #float #double or
     #pointer.

variableByteSubclass: classNameString instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames category: categoryNameString
     Define a byte variable subclass of the receiver with the given
     name, instance variables, class variables, pool dictionaries and
     category. If the class is already defined, if necessary, recompile
     everything needed.

variableSubclass: classNameString instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames category: categoryNameString
     Define a variable pointer subclass of the receiver with the given
     name, instance variables, class variables, pool dictionaries and
     category. If the class is already defined, if necessary, recompile
     everything needed.

variableWordSubclass: classNameString instanceVariableNames: stringInstVarNames classVariableNames: stringOfClassVarNames poolDictionaries: stringOfPoolNames category: categoryNameString
     Define a word variable subclass of the receiver with the given
     name, instance variables, class variables, pool dictionaries and
     category. If the class is already defined, if necessary, recompile
     everything needed.



File: gst-base.info,  Node: UndefinedObject-CObject interoperability,  Next: UndefinedObject-dependents access,  Prev: UndefinedObject-class polymorphism,  Up: UndefinedObject

1.201.4 UndefinedObject: CObject interoperability
-------------------------------------------------

free
     Do nothing, a NULL pointer can be safely freed.

narrow
     Return the receiver: a NULL pointer is always nil, whatever its
     type.



File: gst-base.info,  Node: UndefinedObject-dependents access,  Next: UndefinedObject-iteration,  Prev: UndefinedObject-CObject interoperability,  Up: UndefinedObject

1.201.5 UndefinedObject: dependents access
------------------------------------------

addDependent: ignored
     Fail, nil does not support dependents.

release
     Ignore this call, nil does not support dependents.



File: gst-base.info,  Node: UndefinedObject-iteration,  Next: UndefinedObject-printing,  Prev: UndefinedObject-dependents access,  Up: UndefinedObject

1.201.6 UndefinedObject: iteration
----------------------------------

ifNil: nilBlock ifNotNilDo: iterableBlock
     Evaluate nilBlock if the receiver is nil, else evaluate
     iterableBlock with each element of the receiver (which should be
     an Iterable).

ifNotNilDo: iterableBlock
     Evaluate iterableBlock with each element of the receiver (which
     should be an Iterable) if not nil.  Else answer nil

ifNotNilDo: iterableBlock ifNil: nilBlock
     Evaluate nilBlock if the receiver is nil, else evaluate
     iterableBlock, passing each element of the receiver (which should
     be an Iterable).



File: gst-base.info,  Node: UndefinedObject-printing,  Next: UndefinedObject-still unclassified,  Prev: UndefinedObject-iteration,  Up: UndefinedObject

1.201.7 UndefinedObject: printing
---------------------------------

printOn: aStream
     Print a representation of the receiver on aStream.

printOn: aStream in: aNamespace
     Print on aStream a representation of the receiver as it would be
     accessed from aNamespace: nil is the same everywhere, so print the
     same as #printOn:



File: gst-base.info,  Node: UndefinedObject-still unclassified,  Next: UndefinedObject-storing,  Prev: UndefinedObject-printing,  Up: UndefinedObject

1.201.8 UndefinedObject: still unclassified
-------------------------------------------

inheritsFrom: aClass
     Always return false, as nil inherits from nothing.



File: gst-base.info,  Node: UndefinedObject-storing,  Next: UndefinedObject-testing,  Prev: UndefinedObject-still unclassified,  Up: UndefinedObject

1.201.9 UndefinedObject: storing
--------------------------------

isLiteralObject
     Answer whether the receiver is expressible as a Smalltalk literal.

storeLiteralOn: aStream
     Store on aStream some Smalltalk code which compiles to the receiver

storeOn: aStream
     Store Smalltalk code compiling to the receiver on aStream.



File: gst-base.info,  Node: UndefinedObject-testing,  Prev: UndefinedObject-storing,  Up: UndefinedObject

1.201.10 UndefinedObject: testing
---------------------------------

ifNil: nilBlock
     Evaluate nilBlock if the receiver is nil, else answer nil

ifNil: nilBlock ifNotNil: notNilBlock
     Evaluate nilBlock if the receiver is nil, else evaluate
     notNilBlock, passing the receiver.

ifNotNil: notNilBlock
     Evaluate notNilBlock if the receiver is not nil, passing the
     receiver.  Else answer nil

ifNotNil: notNilBlock ifNil: nilBlock
     Evaluate nilBlock if the receiver is nil, else evaluate
     notNilBlock, passing the receiver.

isNil
     Answer whether the receiver is the undefined object nil. Always
     answer true.

isNull
     Answer whether the receiver represents a NULL C pointer. Always
     answer true.

notNil
     Answer whether the receiver is not the undefined object nil. Always
     answer false.



File: gst-base.info,  Node: UnicodeCharacter,  Next: UnicodeString,  Prev: UndefinedObject,  Up: Base classes

1.202 UnicodeCharacter
======================

Defined in namespace Smalltalk
Superclass: Character
Category: Language-Data types
     My instances represent the over one million characters of the
     Unicode character set.  It provides messages to translate between
     integers and character objects.

     UnicodeCharacter objects are created when accessing UnicodeStrings,
     or with Character class>>#codePoint:.

* Menu:

* UnicodeCharacter class-built ins::  (class)
* UnicodeCharacter-coercion methods::  (instance)


File: gst-base.info,  Node: UnicodeCharacter class-built ins,  Next: UnicodeCharacter-coercion methods,  Up: UnicodeCharacter

1.202.1 UnicodeCharacter class: built ins
-----------------------------------------

value: anInteger
     Returns the character object, possibly a Character, corresponding
     to anInteger.  Error if anInteger is not an integer, or not in
     0..16r10FFFF.

     This is only a primitive for speed.  UnicodeCharacter's #value:
     method is equivalent to #codePoint: (which is the same for
     Character and UnicodeCharacter).



File: gst-base.info,  Node: UnicodeCharacter-coercion methods,  Prev: UnicodeCharacter class-built ins,  Up: UnicodeCharacter

1.202.2 UnicodeCharacter: coercion methods
------------------------------------------

* aNumber
     Returns a String with aNumber occurrences of the receiver.



File: gst-base.info,  Node: UnicodeString,  Next: ValueAdaptor,  Prev: UnicodeCharacter,  Up: Base classes

1.203 UnicodeString
===================

Defined in namespace Smalltalk
Superclass: CharacterArray
Category: Collections-Text
     My instances represent Unicode string data types.  Data is stored
     as 4-byte UTF-32 characters

* Menu:

* UnicodeString class-converting::  (class)
* UnicodeString class-multibyte encodings::  (class)
* UnicodeString-built ins::  (instance)
* UnicodeString-built-ins::  (instance)
* UnicodeString-converting::  (instance)
* UnicodeString-multibyte encodings::  (instance)


File: gst-base.info,  Node: UnicodeString class-converting,  Next: UnicodeString class-multibyte encodings,  Up: UnicodeString

1.203.1 UnicodeString class: converting
---------------------------------------

fromString: aString
     Return the String, aString, converted to its Unicode
     representation.  Unless the I18N package is loaded, this is not
     implemented.



File: gst-base.info,  Node: UnicodeString class-multibyte encodings,  Next: UnicodeString-built ins,  Prev: UnicodeString class-converting,  Up: UnicodeString

1.203.2 UnicodeString class: multibyte encodings
------------------------------------------------

defaultEncoding
     Answer the encoding used by the receiver.  Conventionally, we
     answer 'Unicode' to ensure that two UnicodeStrings always have the
     same encoding.

isUnicode
     Answer true; the receiver stores characters.



File: gst-base.info,  Node: UnicodeString-built ins,  Next: UnicodeString-built-ins,  Prev: UnicodeString class-multibyte encodings,  Up: UnicodeString

1.203.3 UnicodeString: built ins
--------------------------------

at: anIndex ifAbsent: aBlock
     Answer the index-th indexed instance variable of the receiver



File: gst-base.info,  Node: UnicodeString-built-ins,  Next: UnicodeString-converting,  Prev: UnicodeString-built ins,  Up: UnicodeString

1.203.4 UnicodeString: built-ins
--------------------------------

hash
     Answer an hash value for the receiver



File: gst-base.info,  Node: UnicodeString-converting,  Next: UnicodeString-multibyte encodings,  Prev: UnicodeString-built-ins,  Up: UnicodeString

1.203.5 UnicodeString: converting
---------------------------------

asString
     Returns the string corresponding to the receiver.  Without the
     Iconv package, unrecognized Unicode characters become $?
     characters.  When it is loaded, an appropriate single- or
     multi-byte encoding could be used.

asSymbol
     Returns the symbol corresponding to the receiver

asUnicodeString
     But I already am a UnicodeString!  Really!

displayOn: aStream
     Print a representation of the receiver on aStream

printOn: aStream
     Print a representation of the receiver on aStream



File: gst-base.info,  Node: UnicodeString-multibyte encodings,  Prev: UnicodeString-converting,  Up: UnicodeString

1.203.6 UnicodeString: multibyte encodings
------------------------------------------

encoding
     Answer the encoding used by the receiver.  Conventionally, we
     answer 'Unicode' to ensure that two UnicodeStrings always have the
     same encoding.

numberOfCharacters
     Answer the number of Unicode characters in the receiver.  This is
     the same as #size for UnicodeString.



File: gst-base.info,  Node: ValueAdaptor,  Next: ValueHolder,  Prev: UnicodeString,  Up: Base classes

1.204 ValueAdaptor
==================

Defined in namespace Smalltalk
Superclass: Object
Category: Language-Data types
     My subclasses are used to access data from different objects with
     a consistent protocol. However, I'm an abstract class.

* Menu:

* ValueAdaptor class-creating instances::  (class)
* ValueAdaptor-accessing::  (instance)
* ValueAdaptor-printing::  (instance)


File: gst-base.info,  Node: ValueAdaptor class-creating instances,  Next: ValueAdaptor-accessing,  Up: ValueAdaptor

1.204.1 ValueAdaptor class: creating instances
----------------------------------------------

new
     We don't know enough of subclasses to have a shared implementation
     of new



File: gst-base.info,  Node: ValueAdaptor-accessing,  Next: ValueAdaptor-printing,  Prev: ValueAdaptor class-creating instances,  Up: ValueAdaptor

1.204.2 ValueAdaptor: accessing
-------------------------------

value
     Retrive the value of the receiver. Must be implemented by
     ValueAdaptor's subclasses

value: anObject
     Set the value of the receiver. Must be implemented by
     ValueAdaptor's subclasses



File: gst-base.info,  Node: ValueAdaptor-printing,  Prev: ValueAdaptor-accessing,  Up: ValueAdaptor

1.204.3 ValueAdaptor: printing
------------------------------

printOn: aStream
     Print a representation of the receiver



File: gst-base.info,  Node: ValueHolder,  Next: VariableBinding,  Prev: ValueAdaptor,  Up: Base classes

1.205 ValueHolder
=================

Defined in namespace Smalltalk
Superclass: ValueAdaptor
Category: Language-Data types
     I store my value in a variable. For example, you can use me to pass
     numbers by reference. Just instance me before calling a method and
     ask for my value after that method. There are a lot of other
     creative uses for my intances, though.

* Menu:

* ValueHolder class-creating instances::  (class)
* ValueHolder-accessing::  (instance)
* ValueHolder-initializing::  (instance)


File: gst-base.info,  Node: ValueHolder class-creating instances,  Next: ValueHolder-accessing,  Up: ValueHolder

1.205.1 ValueHolder class: creating instances
---------------------------------------------

new
     Create a ValueHolder whose starting value is nil

null
     Answer the sole instance of NullValueHolder

with: anObject
     Create a ValueHolder whose starting value is anObject



File: gst-base.info,  Node: ValueHolder-accessing,  Next: ValueHolder-initializing,  Prev: ValueHolder class-creating instances,  Up: ValueHolder

1.205.2 ValueHolder: accessing
------------------------------

value
     Get the value of the receiver.

value: anObject
     Set the value of the receiver.



File: gst-base.info,  Node: ValueHolder-initializing,  Prev: ValueHolder-accessing,  Up: ValueHolder

1.205.3 ValueHolder: initializing
---------------------------------

initialize
     Private - set the initial value of the receiver



File: gst-base.info,  Node: VariableBinding,  Next: VersionableObjectProxy,  Prev: ValueHolder,  Up: Base classes

1.206 VariableBinding
=====================

Defined in namespace Smalltalk
Superclass: HomedAssociation
Category: Language-Data types
     My instances represent a mapping between a key in a namespace and
     its value.  I print different than a normal Association, and know
     about my parent namespace, otherwise my behavior is the same.

* Menu:

* VariableBinding-compiler::  (instance)
* VariableBinding-printing::  (instance)
* VariableBinding-saving and loading::  (instance)
* VariableBinding-storing::  (instance)
* VariableBinding-testing::  (instance)


File: gst-base.info,  Node: VariableBinding-compiler,  Next: VariableBinding-printing,  Up: VariableBinding

1.206.1 VariableBinding: compiler
---------------------------------

literalEquals: anObject
     Not commented.

literalHash
     Not commented.



File: gst-base.info,  Node: VariableBinding-printing,  Next: VariableBinding-saving and loading,  Prev: VariableBinding-compiler,  Up: VariableBinding

1.206.2 VariableBinding: printing
---------------------------------

path
     Print a dotted path that compiles to the receiver's value

printOn: aStream
     Put on aStream a representation of the receiver



File: gst-base.info,  Node: VariableBinding-saving and loading,  Next: VariableBinding-storing,  Prev: VariableBinding-printing,  Up: VariableBinding

1.206.3 VariableBinding: saving and loading
-------------------------------------------

binaryRepresentationObject
     This method is implemented to allow for a PluggableProxy to be used
     with VariableBindings.  Answer a DirectedMessage which sends #at:
     to the environment that holds the receiver.



File: gst-base.info,  Node: VariableBinding-storing,  Next: VariableBinding-testing,  Prev: VariableBinding-saving and loading,  Up: VariableBinding

1.206.4 VariableBinding: storing
--------------------------------

isLiteralObject
     Answer whether the receiver is expressible as a Smalltalk literal.

storeLiteralOn: aStream
     Store on aStream some Smalltalk code which compiles to the receiver

storeOn: aStream
     Put on aStream some Smalltalk code compiling to the receiver



File: gst-base.info,  Node: VariableBinding-testing,  Prev: VariableBinding-storing,  Up: VariableBinding

1.206.5 VariableBinding: testing
--------------------------------

isDefined
     Answer true if this VariableBinding lives outside the Undeclared
     dictionary



File: gst-base.info,  Node: VersionableObjectProxy,  Next: VFS.ArchiveFile,  Prev: VariableBinding,  Up: Base classes

1.207 VersionableObjectProxy
============================

Defined in namespace Smalltalk
Superclass: NullProxy
Category: Streams-Files
     I am a proxy that stores additional information to allow different
     versions of an object's representations to be handled by the
     program.  VersionableObjectProxies are backwards compatible, that
     is you can support versioning even if you did not use a
     VersionableObjectProxy for that class when the object was
     originarily dumped.  VersionableObjectProxy does not support
     classes that changed shape across different versions.  See the
     method comments for more information.

* Menu:

* VersionableObjectProxy class-saving and restoring::  (class)
* VersionableObjectProxy-saving and restoring::  (instance)


File: gst-base.info,  Node: VersionableObjectProxy class-saving and restoring,  Next: VersionableObjectProxy-saving and restoring,  Up: VersionableObjectProxy

1.207.1 VersionableObjectProxy class: saving and restoring
----------------------------------------------------------

loadFrom: anObjectDumper
     Retrieve the object.  If the version number doesn't match the
     #binaryRepresentationVersion answered by the class, call the class'
     #convertFromVersion:withFixedVariables:instanceVariables:for:
     method.  The stored version number will be the first parameter to
     that method (or nil if the stored object did not employ a
     VersionableObjectProxy), the remaining parameters will be
     respectively the fixed instance variables, the indexed instance
     variables (or nil if the class is fixed), and the ObjectDumper
     itself.  If no VersionableObjectProxy, the class is sent
     #nonVersionedInstSize to retrieve the number of fixed instance
     variables stored for the non-versioned object.



File: gst-base.info,  Node: VersionableObjectProxy-saving and restoring,  Prev: VersionableObjectProxy class-saving and restoring,  Up: VersionableObjectProxy

1.207.2 VersionableObjectProxy: saving and restoring
----------------------------------------------------

dumpTo: anObjectDumper
     Save the object with extra versioning information.



File: gst-base.info,  Node: VFS.ArchiveFile,  Next: VFS.ArchiveMember,  Prev: VersionableObjectProxy,  Up: Base classes

1.208 VFS.ArchiveFile
=====================

Defined in namespace Smalltalk.VFS
Superclass: VFS.FileWrapper
Category: Streams-Files
     ArchiveFile handles virtual filesystems that have a directory
     structure of their own.  The directories and files in the archive
     are instances of ArchiveMember, but the functionality resides
     entirely in ArchiveFile because the members will still ask the
     archive to get directory information on them, to extract them to a
     real file, and so on.

* Menu:

* VFS.ArchiveFile-ArchiveMember protocol::  (instance)
* VFS.ArchiveFile-directory operations::  (instance)
* VFS.ArchiveFile-querying::  (instance)
* VFS.ArchiveFile-still unclassified::  (instance)
* VFS.ArchiveFile-TmpFileArchiveMember protocol::  (instance)


File: gst-base.info,  Node: VFS.ArchiveFile-ArchiveMember protocol,  Next: VFS.ArchiveFile-directory operations,  Up: VFS.ArchiveFile

1.208.1 VFS.ArchiveFile: ArchiveMember protocol
-----------------------------------------------

fillMember: anArchiveMember
     Extract the information on anArchiveMember.  Answer false if it
     actually does not exist in the archive; otherwise, answer true
     after having told anArchiveMember about them by sending
     #size:stCtime:stMtime:stAtime:isDirectory: to it.

member: anArchiveMember do: aBlock
     Evaluate aBlock once for each file in the directory represented by
     anArchiveMember, passing its name.

member: anArchiveMember mode: bits
     Set the permission bits for the file in anArchiveMember.

refresh
     Extract the directory listing from the archive

removeMember: anArchiveMember
     Remove the member represented by anArchiveMember.

updateMember: anArchiveMember
     Update the member represented by anArchiveMember by copying the
     file into which it was extracted back to the archive.



File: gst-base.info,  Node: VFS.ArchiveFile-directory operations,  Next: VFS.ArchiveFile-querying,  Prev: VFS.ArchiveFile-ArchiveMember protocol,  Up: VFS.ArchiveFile

1.208.2 VFS.ArchiveFile: directory operations
---------------------------------------------

at: aName
     Answer a FilePath for a file named `aName' residing in the
     directory represented by the receiver.

nameAt: aString
     Answer a FilePath for a file named `aName' residing in the
     directory represented by the receiver.

namesDo: aBlock
     Evaluate aBlock once for each file in the directory represented by
     the receiver, passing its name.

release
     Release the resources used by the receiver that don't survive when
     reloading a snapshot.



File: gst-base.info,  Node: VFS.ArchiveFile-querying,  Next: VFS.ArchiveFile-still unclassified,  Prev: VFS.ArchiveFile-directory operations,  Up: VFS.ArchiveFile

1.208.3 VFS.ArchiveFile: querying
---------------------------------

isAccessible
     Answer whether a directory with the name contained in the receiver
     does exist and can be accessed

isDirectory
     Answer true.  The archive can always be considered as a directory.



File: gst-base.info,  Node: VFS.ArchiveFile-still unclassified,  Next: VFS.ArchiveFile-TmpFileArchiveMember protocol,  Prev: VFS.ArchiveFile-querying,  Up: VFS.ArchiveFile

1.208.4 VFS.ArchiveFile: still unclassified
-------------------------------------------

displayOn: aStream
     Print a representation of the file identified by the receiver.



File: gst-base.info,  Node: VFS.ArchiveFile-TmpFileArchiveMember protocol,  Prev: VFS.ArchiveFile-still unclassified,  Up: VFS.ArchiveFile

1.208.5 VFS.ArchiveFile: TmpFileArchiveMember protocol
------------------------------------------------------

extractMember: anArchiveMember
     Extract the contents of anArchiveMember into a file that resides
     on disk, and answer the name of the file.

extractMember: anArchiveMember into: file
     Extract the contents of anArchiveMember into a file that resides
     on disk, and answer the name of the file.



File: gst-base.info,  Node: VFS.ArchiveMember,  Next: VFS.FileWrapper,  Prev: VFS.ArchiveFile,  Up: Base classes

1.209 VFS.ArchiveMember
=======================

Defined in namespace Smalltalk.VFS
Superclass: FilePath
Category: Streams-Files
     TmpFileArchiveMember is a handler class for members of archive
     files that creates temporary files when extracting files from an
     archive.

* Menu:

* VFS.ArchiveMember-accessing::  (instance)
* VFS.ArchiveMember-basic::  (instance)
* VFS.ArchiveMember-delegation::  (instance)
* VFS.ArchiveMember-directory operations::  (instance)
* VFS.ArchiveMember-file operations::  (instance)
* VFS.ArchiveMember-initializing::  (instance)
* VFS.ArchiveMember-still unclassified::  (instance)
* VFS.ArchiveMember-testing::  (instance)


File: gst-base.info,  Node: VFS.ArchiveMember-accessing,  Next: VFS.ArchiveMember-basic,  Up: VFS.ArchiveMember

1.209.1 VFS.ArchiveMember: accessing
------------------------------------

archive
     Answer the archive of which the receiver is a member.

asString
     Answer the name of the file identified by the receiver as answered
     by File>>#name.

creationTime
     Answer the creation time of the file identified by the receiver.
     On some operating systems, this could actually be the last change
     time (the `last change time' has to do with permissions, ownership
     and the like).

lastAccessTime
     Answer the last access time of the file identified by the receiver

lastChangeTime
     Answer the last change time of the file identified by the receiver
     (the `last change time' has to do with permissions, ownership and
     the like). On some operating systems, this could actually be the
     file creation time.

lastModifyTime
     Answer the last modify time of the file identified by the receiver
     (the `last modify time' has to do with the actual file contents).

name
     Answer the receiver's file name.

name: aName
     Set the receiver's file name to aName.

refresh
     Refresh the statistics for the receiver

size
     Answer the size of the file identified by the receiver



File: gst-base.info,  Node: VFS.ArchiveMember-basic,  Next: VFS.ArchiveMember-delegation,  Prev: VFS.ArchiveMember-accessing,  Up: VFS.ArchiveMember

1.209.2 VFS.ArchiveMember: basic
--------------------------------

= aFile
     Answer whether the receiver represents the same file as the
     receiver.

hash
     Answer a hash value for the receiver.



File: gst-base.info,  Node: VFS.ArchiveMember-delegation,  Next: VFS.ArchiveMember-directory operations,  Prev: VFS.ArchiveMember-basic,  Up: VFS.ArchiveMember

1.209.3 VFS.ArchiveMember: delegation
-------------------------------------

full
     Answer the size of the file identified by the receiver



File: gst-base.info,  Node: VFS.ArchiveMember-directory operations,  Next: VFS.ArchiveMember-file operations,  Prev: VFS.ArchiveMember-delegation,  Up: VFS.ArchiveMember

1.209.4 VFS.ArchiveMember: directory operations
-----------------------------------------------

at: aName
     Answer a FilePath for a file named `aName' residing in the
     directory represented by the receiver.

createDirectory: dirName
     Create a subdirectory of the receiver, naming it dirName.

namesDo: aBlock
     Evaluate aBlock once for each file in the directory represented by
     the receiver, passing its name.



File: gst-base.info,  Node: VFS.ArchiveMember-file operations,  Next: VFS.ArchiveMember-initializing,  Prev: VFS.ArchiveMember-directory operations,  Up: VFS.ArchiveMember

1.209.5 VFS.ArchiveMember: file operations
------------------------------------------

open: class mode: mode ifFail: aBlock
     Open the receiver in the given mode (as answered by FileStream's
     class constant methods)

remove
     Remove the file with the given path name

renameTo: newFileName
     Rename the file with the given path name oldFileName to newFileName

update: aspect
     Private - Update the in-archive version of the file before closing.



File: gst-base.info,  Node: VFS.ArchiveMember-initializing,  Next: VFS.ArchiveMember-still unclassified,  Prev: VFS.ArchiveMember-file operations,  Up: VFS.ArchiveMember

1.209.6 VFS.ArchiveMember: initializing
---------------------------------------

archive: anArchiveFile
     Set the archive of which the receiver is a member.

fillFrom: data
     Called back by the receiver's archive when the ArchiveMember asks
     for file information.

size: bytes stCtime: ctime stMtime: mtime stAtime: atime mode: modeBits
     Set the file information for the receiver.

size: bytes stMtime: mtime mode: modeBits
     Set the file information for the receiver.



File: gst-base.info,  Node: VFS.ArchiveMember-still unclassified,  Next: VFS.ArchiveMember-testing,  Prev: VFS.ArchiveMember-initializing,  Up: VFS.ArchiveMember

1.209.7 VFS.ArchiveMember: still unclassified
---------------------------------------------

, aName
     Answer an object of the same kind as the receiver, whose name is
     suffixed with aName.

displayOn: aStream
     Print a representation of the file identified by the receiver.

isAbsolute
     Answer whether the receiver identifies an absolute path.



File: gst-base.info,  Node: VFS.ArchiveMember-testing,  Prev: VFS.ArchiveMember-still unclassified,  Up: VFS.ArchiveMember

1.209.8 VFS.ArchiveMember: testing
----------------------------------

exists
     Answer whether a file with the name contained in the receiver does
     exist.

isAccessible
     Answer whether a directory with the name contained in the receiver
     does exist and is accessible

isDirectory
     Answer whether a file with the name contained in the receiver does
     exist and identifies a directory.

isExecutable
     Answer whether a file with the name contained in the receiver does
     exist and is executable

isReadable
     Answer whether a file with the name contained in the receiver does
     exist and is readable

isSymbolicLink
     Answer whether a file with the name contained in the receiver does
     exist and identifies a symbolic link.

isWriteable
     Answer whether a file with the name contained in the receiver does
     exist and is writeable

mode
     Answer the octal permissions for the file.

mode: mode
     Set the octal permissions for the file to be `mode'.



File: gst-base.info,  Node: VFS.FileWrapper,  Next: VFS.StoredZipMember,  Prev: VFS.ArchiveMember,  Up: Base classes

1.210 VFS.FileWrapper
=====================

Defined in namespace Smalltalk.VFS
Superclass: FilePath
Category: Streams-Files
     FileWrapper gives information for virtual files that refer to a
     real file on disk.

* Menu:

* VFS.FileWrapper class-initializing::  (class)
* VFS.FileWrapper class-instance creation::  (class)
* VFS.FileWrapper-accessing::  (instance)
* VFS.FileWrapper-basic::  (instance)
* VFS.FileWrapper-delegation::  (instance)
* VFS.FileWrapper-enumerating::  (instance)
* VFS.FileWrapper-file operations::  (instance)
* VFS.FileWrapper-testing::  (instance)


File: gst-base.info,  Node: VFS.FileWrapper class-initializing,  Next: VFS.FileWrapper class-instance creation,  Up: VFS.FileWrapper

1.210.1 VFS.FileWrapper class: initializing
-------------------------------------------

initialize
     Register the receiver with ObjectMemory

update: aspect
     Private - Remove the files before quitting, and register the
     virtual filesystems specified by the subclasses upon image load.



File: gst-base.info,  Node: VFS.FileWrapper class-instance creation,  Next: VFS.FileWrapper-accessing,  Prev: VFS.FileWrapper class-initializing,  Up: VFS.FileWrapper

1.210.2 VFS.FileWrapper class: instance creation
------------------------------------------------

on: file
     Create an instance of this class representing the contents of the
     given file, under the virtual filesystem fsName.



File: gst-base.info,  Node: VFS.FileWrapper-accessing,  Next: VFS.FileWrapper-basic,  Prev: VFS.FileWrapper class-instance creation,  Up: VFS.FileWrapper

1.210.3 VFS.FileWrapper: accessing
----------------------------------

asString
     Answer the string representation of the receiver's path.

at: aName
     Answer a File or Directory object as appropriate for a file named
     'aName' in the directory represented by the receiver.

lastAccessTime: accessDateTime lastModifyTime: modifyDateTime
     Update the timestamps of the file corresponding to the receiver,
     to be accessDateTime and modifyDateTime.

name
     Answer the full path to the receiver.

owner: ownerString group: groupString
     Set the receiver's owner and group to be ownerString and
     groupString.

pathTo: destName
     Compute the relative path from the receiver to destName.



File: gst-base.info,  Node: VFS.FileWrapper-basic,  Next: VFS.FileWrapper-delegation,  Prev: VFS.FileWrapper-accessing,  Up: VFS.FileWrapper

1.210.4 VFS.FileWrapper: basic
------------------------------

= aFile
     Answer whether the receiver represents the same file as the
     receiver.

hash
     Answer a hash value for the receiver.



File: gst-base.info,  Node: VFS.FileWrapper-delegation,  Next: VFS.FileWrapper-enumerating,  Prev: VFS.FileWrapper-basic,  Up: VFS.FileWrapper

1.210.5 VFS.FileWrapper: delegation
-----------------------------------

creationTime
     Answer the creation time of the file identified by the receiver.
     On some operating systems, this could actually be the last change
     time (the `last change time' has to do with permissions, ownership
     and the like).

full
     Answer the size of the file identified by the receiver

isExecutable
     Answer whether a file with the name contained in the receiver does
     exist and is executable

isReadable
     Answer whether a file with the name contained in the receiver does
     exist and is readable

isWriteable
     Answer whether a file with the name contained in the receiver does
     exist and is writeable

lastAccessTime
     Answer the last access time of the file identified by the receiver

lastChangeTime
     Answer the last change time of the file identified by the receiver
     (the `last change time' has to do with permissions, ownership and
     the like). On some operating systems, this could actually be the
     file creation time.

lastModifyTime
     Answer the last modify time of the file identified by the receiver
     (the `last modify time' has to do with the actual file contents).

mode
     Answer the permission bits for the file identified by the receiver

mode: anInteger
     Answer the permission bits for the file identified by the receiver

open: class mode: mode ifFail: aBlock
     Open the receiver in the given mode (as answered by FileStream's
     class constant methods)

remove
     Remove the file with the given path name

size
     Answer the size of the file identified by the receiver



File: gst-base.info,  Node: VFS.FileWrapper-enumerating,  Next: VFS.FileWrapper-file operations,  Prev: VFS.FileWrapper-delegation,  Up: VFS.FileWrapper

1.210.6 VFS.FileWrapper: enumerating
------------------------------------

namesDo: aBlock
     Evaluate aBlock once for each file in the directory represented by
     the receiver, passing its name.



File: gst-base.info,  Node: VFS.FileWrapper-file operations,  Next: VFS.FileWrapper-testing,  Prev: VFS.FileWrapper-enumerating,  Up: VFS.FileWrapper

1.210.7 VFS.FileWrapper: file operations
----------------------------------------

pathFrom: dirName
     Compute the relative path from the directory dirName to the
     receiver

renameTo: newName
     Rename the file identified by the receiver to newName

symlinkAs: destName
     Create destName as a symbolic link of the receiver.  The
     appropriate relative path is computed automatically.

symlinkFrom: srcName
     Create the receiver as a symbolic link from srcName (relative to
     the path of the receiver).



File: gst-base.info,  Node: VFS.FileWrapper-testing,  Prev: VFS.FileWrapper-file operations,  Up: VFS.FileWrapper

1.210.8 VFS.FileWrapper: testing
--------------------------------

exists
     Answer whether a file with the name contained in the receiver does
     exist.

isAbsolute
     Answer whether the receiver identifies an absolute path.

isAccessible
     Answer whether a directory with the name contained in the receiver
     does exist and can be accessed

isDirectory
     Answer whether a file with the name contained in the receiver does
     exist identifies a directory.

isSymbolicLink
     Answer whether a file with the name contained in the receiver does
     exist and identifies a symbolic link.



File: gst-base.info,  Node: VFS.StoredZipMember,  Next: VFS.TmpFileArchiveMember,  Prev: VFS.FileWrapper,  Up: Base classes

1.211 VFS.StoredZipMember
=========================

Defined in namespace Smalltalk.VFS
Superclass: VFS.TmpFileArchiveMember
Category: Streams-Files
     ArchiveMember is the handler class for stored ZIP archive members,
     which are optimized.

* Menu:

* VFS.StoredZipMember-accessing::  (instance)
* VFS.StoredZipMember-opening::  (instance)


File: gst-base.info,  Node: VFS.StoredZipMember-accessing,  Next: VFS.StoredZipMember-opening,  Up: VFS.StoredZipMember

1.211.1 VFS.StoredZipMember: accessing
--------------------------------------

offset
     Answer `offset'.

offset: anInteger
     Not commented.



File: gst-base.info,  Node: VFS.StoredZipMember-opening,  Prev: VFS.StoredZipMember-accessing,  Up: VFS.StoredZipMember

1.211.2 VFS.StoredZipMember: opening
------------------------------------

open: class mode: mode ifFail: aBlock
     Not commented.



File: gst-base.info,  Node: VFS.TmpFileArchiveMember,  Next: VFS.ZipFile,  Prev: VFS.StoredZipMember,  Up: Base classes

1.212 VFS.TmpFileArchiveMember
==============================

Defined in namespace Smalltalk.VFS
Superclass: VFS.ArchiveMember
Category: Streams-Files

* Menu:

* VFS.TmpFileArchiveMember-directory operations::  (instance)
* VFS.TmpFileArchiveMember-finalization::  (instance)
* VFS.TmpFileArchiveMember-still unclassified::  (instance)


File: gst-base.info,  Node: VFS.TmpFileArchiveMember-directory operations,  Next: VFS.TmpFileArchiveMember-finalization,  Up: VFS.TmpFileArchiveMember

1.212.1 VFS.TmpFileArchiveMember: directory operations
------------------------------------------------------

file
     Answer the real file name which holds the file contents, or nil if
     it does not apply.

open: class mode: mode ifFail: aBlock
     Open the receiver in the given mode (as answered by FileStream's
     class constant methods)



File: gst-base.info,  Node: VFS.TmpFileArchiveMember-finalization,  Next: VFS.TmpFileArchiveMember-still unclassified,  Prev: VFS.TmpFileArchiveMember-directory operations,  Up: VFS.TmpFileArchiveMember

1.212.2 VFS.TmpFileArchiveMember: finalization
----------------------------------------------

release
     Release the resources used by the receiver that don't survive when
     reloading a snapshot.



File: gst-base.info,  Node: VFS.TmpFileArchiveMember-still unclassified,  Prev: VFS.TmpFileArchiveMember-finalization,  Up: VFS.TmpFileArchiveMember

1.212.3 VFS.TmpFileArchiveMember: still unclassified
----------------------------------------------------

extracted
     Answer whether the file has already been extracted to disk.



File: gst-base.info,  Node: VFS.ZipFile,  Next: Warning,  Prev: VFS.TmpFileArchiveMember,  Up: Base classes

1.213 VFS.ZipFile
=================

Defined in namespace Smalltalk.VFS
Superclass: VFS.ArchiveFile
Category: Streams-Files
     ZipFile transparently extracts files from a ZIP archive.

* Menu:

* VFS.ZipFile-members::  (instance)


File: gst-base.info,  Node: VFS.ZipFile-members,  Up: VFS.ZipFile

1.213.1 VFS.ZipFile: members
----------------------------

centralDirectoryRangeIn: f
     Not commented.

createDirectory: dirName
     Create a subdirectory of the receiver, naming it dirName.

extractMember: anArchiveMember into: temp
     Extract the contents of anArchiveMember into a file that resides
     on disk, and answer the name of the file.

fileData
     Extract the directory listing from the archive

member: anArchiveMember mode: bits
     Set the permission bits for the file in anArchiveMember.

removeMember: anArchiveMember
     Remove the member represented by anArchiveMember.

updateMember: anArchiveMember
     Update the member represented by anArchiveMember by copying the
     file into which it was extracted back to the archive.



File: gst-base.info,  Node: Warning,  Next: WeakArray,  Prev: VFS.ZipFile,  Up: Base classes

1.214 Warning
=============

Defined in namespace Smalltalk
Superclass: Notification
Category: Language-Exceptions
     Warning represents an `important' but resumable error.

* Menu:

* Warning-exception description::  (instance)


File: gst-base.info,  Node: Warning-exception description,  Up: Warning

1.214.1 Warning: exception description
--------------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: WeakArray,  Next: WeakIdentitySet,  Prev: Warning,  Up: Base classes

1.215 WeakArray
===============

Defined in namespace Smalltalk
Superclass: Array
Category: Collections-Weak
     I am similar to a plain array, but my items are stored in a weak
     object, so I track which of them are garbage collected.

* Menu:

* WeakArray class-instance creation::  (class)
* WeakArray-accessing::  (instance)
* WeakArray-conversion::  (instance)
* WeakArray-loading::  (instance)


File: gst-base.info,  Node: WeakArray class-instance creation,  Next: WeakArray-accessing,  Up: WeakArray

1.215.1 WeakArray class: instance creation
------------------------------------------

new
     Create a new WeakArray of size 0.

new: size
     Create a new WeakArray of the given size.



File: gst-base.info,  Node: WeakArray-accessing,  Next: WeakArray-conversion,  Prev: WeakArray class-instance creation,  Up: WeakArray

1.215.2 WeakArray: accessing
----------------------------

aliveObjectsDo: aBlock
     Evaluate aBlock for all the elements in the array, excluding the
     garbage collected ones. Note: a finalized object stays alive until
     the next collection (the collector has no means to see whether it
     was resuscitated by the finalizer), so an object being alive does
     not mean that it is usable.

at: index
     Answer the index-th item of the receiver, or nil if it has been
     garbage collected.

at: index put: object
     Store the value associated to the given index; plus, store in
     nilValues whether the object is nil.  nil objects whose associated
     item of nilValues is 1 were touched by the garbage collector.

atAll: indices put: object
     Put object at every index contained in the indices collection

atAllPut: object
     Put object at every index in the receiver

clearGCFlag: index
     Clear the `object has been garbage collected' flag for the item at
     the given index

do: aBlock
     Evaluate aBlock for all the elements in the array, including the
     garbage collected ones (pass nil for those).

isAlive: index
     Answer whether the item at the given index is still alive or has
     been garbage collected. Note: a finalized object stays alive until
     the next collection (the collector has no means to see whether it
     was resuscitated by the finalizer), so an object being alive does
     not mean that it is usable.

size
     Answer the number of items in the receiver



File: gst-base.info,  Node: WeakArray-conversion,  Next: WeakArray-loading,  Prev: WeakArray-accessing,  Up: WeakArray

1.215.3 WeakArray: conversion
-----------------------------

asArray
     Answer a non-weak version of the receiver

deepCopy
     Returns a deep copy of the receiver (the instance variables are
     copies of the receiver's instance variables)

shallowCopy
     Returns a shallow copy of the receiver (the instance variables are
     not copied)

species
     Answer Array; this method is used in the #copyEmpty: message,
     which in turn is used by all collection-returning methods
     (collect:, select:, reject:, etc.).



File: gst-base.info,  Node: WeakArray-loading,  Prev: WeakArray-conversion,  Up: WeakArray

1.215.4 WeakArray: loading
--------------------------

postLoad
     Called after loading an object; must restore it to the state before
     `preStore' was called.  Make it weak again



File: gst-base.info,  Node: WeakIdentitySet,  Next: WeakKeyDictionary,  Prev: WeakArray,  Up: Base classes

1.216 WeakIdentitySet
=====================

Defined in namespace Smalltalk
Superclass: WeakSet
Category: Collections-Weak
     I am similar to a plain identity set, but my keys are stored in a
     weak array; I track which of them are garbage collected and, as
     soon as I encounter one of them, I swiftly remove all the garbage
     collected keys

* Menu:

* WeakIdentitySet-accessing::  (instance)


File: gst-base.info,  Node: WeakIdentitySet-accessing,  Up: WeakIdentitySet

1.216.1 WeakIdentitySet: accessing
----------------------------------

identityIncludes: anObject
     Answer whether I include anObject exactly.  As I am an
     identity-set, this is the same as #includes:.



File: gst-base.info,  Node: WeakKeyDictionary,  Next: WeakKeyIdentityDictionary,  Prev: WeakIdentitySet,  Up: Base classes

1.217 WeakKeyDictionary
=======================

Defined in namespace Smalltalk
Superclass: Dictionary
Category: Collections-Weak
     I am similar to a plain Dictionary, but my keys are stored in a
     weak array; I track which of them are garbage collected and, as
     soon as I encounter one of them, I swiftly remove all the
     associations for the garbage collected keys

* Menu:

* WeakKeyDictionary class-hacks::  (class)
* WeakKeyDictionary-accessing::  (instance)


File: gst-base.info,  Node: WeakKeyDictionary class-hacks,  Next: WeakKeyDictionary-accessing,  Up: WeakKeyDictionary

1.217.1 WeakKeyDictionary class: hacks
--------------------------------------

postLoad
     Called after loading an object; must restore it to the state before
     `preStore' was called.  Make it weak again



File: gst-base.info,  Node: WeakKeyDictionary-accessing,  Prev: WeakKeyDictionary class-hacks,  Up: WeakKeyDictionary

1.217.2 WeakKeyDictionary: accessing
------------------------------------

add: anAssociation
     Store value as associated to the given key.

at: key put: value
     Store value as associated to the given key.



File: gst-base.info,  Node: WeakKeyIdentityDictionary,  Next: WeakSet,  Prev: WeakKeyDictionary,  Up: Base classes

1.218 WeakKeyIdentityDictionary
===============================

Defined in namespace Smalltalk
Superclass: WeakKeyDictionary
Category: Collections-Weak
     I am similar to a plain identity dictionary, but my keys are stored
     in a weak array; I track which of them are garbage collected and,
     as soon as I encounter one of them, I swiftly remove all the
     associations for the garbage collected keys

* Menu:


File: gst-base.info,  Node: WeakSet,  Next: WeakValueIdentityDictionary,  Prev: WeakKeyIdentityDictionary,  Up: Base classes

1.219 WeakSet
=============

Defined in namespace Smalltalk
Superclass: Set
Category: Collections-Weak
     I am similar to a plain set, but my items are stored in a weak
     array; I track which of them are garbage collected and, as soon as
     I encounter one of them, I swiftly remove all.

* Menu:

* WeakSet-accessing::  (instance)
* WeakSet-copying::  (instance)
* WeakSet-loading::  (instance)


File: gst-base.info,  Node: WeakSet-accessing,  Next: WeakSet-copying,  Up: WeakSet

1.219.1 WeakSet: accessing
--------------------------

add: newObject
     Add newObject to the set, if and only if the set doesn't already
     contain an occurrence of it. Don't fail if a duplicate is found.
     Answer newObject

do: aBlock
     Enumerate all the non-nil members of the set



File: gst-base.info,  Node: WeakSet-copying,  Next: WeakSet-loading,  Prev: WeakSet-accessing,  Up: WeakSet

1.219.2 WeakSet: copying
------------------------

deepCopy
     Returns a deep copy of the receiver (the instance variables are
     copies of the receiver's instance variables)

shallowCopy
     Returns a shallow copy of the receiver (the instance variables are
     not copied)



File: gst-base.info,  Node: WeakSet-loading,  Prev: WeakSet-copying,  Up: WeakSet

1.219.3 WeakSet: loading
------------------------

postLoad
     Called after loading an object; must restore it to the state before
     `preStore' was called.  Make it weak again



File: gst-base.info,  Node: WeakValueIdentityDictionary,  Next: WeakValueLookupTable,  Prev: WeakSet,  Up: Base classes

1.220 WeakValueIdentityDictionary
=================================

Defined in namespace Smalltalk
Superclass: WeakValueLookupTable
Category: Collections-Weak
     I am similar to a plain identity dictionary, but my values are
     stored in a weak array; I track which of the values are garbage
     collected and, as soon as one of them is accessed, I swiftly
     remove the associations for the garbage collected values

* Menu:


File: gst-base.info,  Node: WeakValueLookupTable,  Next: WordArray,  Prev: WeakValueIdentityDictionary,  Up: Base classes

1.221 WeakValueLookupTable
==========================

Defined in namespace Smalltalk
Superclass: LookupTable
Category: Collections-Weak
     I am similar to a plain LookupTable, but my values are stored in a
     weak array; I track which of the values are garbage collected and,
     as soon as one of them is accessed, I swiftly remove the
     associations for the garbage collected values

* Menu:

* WeakValueLookupTable class-hacks::  (class)
* WeakValueLookupTable-hacks::  (instance)
* WeakValueLookupTable-rehashing::  (instance)


File: gst-base.info,  Node: WeakValueLookupTable class-hacks,  Next: WeakValueLookupTable-hacks,  Up: WeakValueLookupTable

1.221.1 WeakValueLookupTable class: hacks
-----------------------------------------

primNew: realSize
     Answer a new, uninitialized instance of the receiver with the
     given size



File: gst-base.info,  Node: WeakValueLookupTable-hacks,  Next: WeakValueLookupTable-rehashing,  Prev: WeakValueLookupTable class-hacks,  Up: WeakValueLookupTable

1.221.2 WeakValueLookupTable: hacks
-----------------------------------

at: key ifAbsent: aBlock
     Answer the value associated to the given key, or the result of
     evaluating aBlock if the key is not found

at: key ifPresent: aBlock
     If aKey is absent, answer nil. Else, evaluate aBlock passing the
     associated value and answer the result of the invocation

includesKey: key
     Answer whether the receiver contains the given key.



File: gst-base.info,  Node: WeakValueLookupTable-rehashing,  Prev: WeakValueLookupTable-hacks,  Up: WeakValueLookupTable

1.221.3 WeakValueLookupTable: rehashing
---------------------------------------

rehash
     Rehash the receiver



File: gst-base.info,  Node: WordArray,  Next: WriteStream,  Prev: WeakValueLookupTable,  Up: Base classes

1.222 WordArray
===============

Defined in namespace Smalltalk
Superclass: ArrayedCollection
Category: Collections-Sequenceable
     I am similar to a plain array, but my items are 32-bit integers.

* Menu:

* WordArray-built ins::  (instance)


File: gst-base.info,  Node: WordArray-built ins,  Up: WordArray

1.222.1 WordArray: built ins
----------------------------

at: anIndex ifAbsent: aBlock
     Answer the index-th indexed instance variable of the receiver



File: gst-base.info,  Node: WriteStream,  Next: ZeroDivide,  Prev: WordArray,  Up: Base classes

1.223 WriteStream
=================

Defined in namespace Smalltalk
Superclass: PositionableStream
Category: Streams-Collections
     I am the class of writeable streams.  I only allow write
     operations to my instances; reading is strictly forbidden.

* Menu:

* WriteStream class-instance creation::  (class)
* WriteStream-accessing-writing::  (instance)
* WriteStream-positioning::  (instance)


File: gst-base.info,  Node: WriteStream class-instance creation,  Next: WriteStream-accessing-writing,  Up: WriteStream

1.223.1 WriteStream class: instance creation
--------------------------------------------

on: aCollection
     Answer a new instance of the receiver which streams on aCollection.
     Every item of aCollection is discarded.

with: aCollection
     Answer a new instance of the receiver which streams from the end
     of aCollection.

with: aCollection from: firstIndex to: lastIndex
     Answer a new instance of the receiver which streams from the
     firstIndex-th item of aCollection to the lastIndex-th. The pointer
     is moved to the last item in that range.



File: gst-base.info,  Node: WriteStream-accessing-writing,  Next: WriteStream-positioning,  Prev: WriteStream class-instance creation,  Up: WriteStream

1.223.2 WriteStream: accessing-writing
--------------------------------------

contents
     Returns a collection of the same type that the stream accesses, up
     to and including the final element.

next: n putAll: aCollection startingAt: pos
     Put n characters or bytes of aCollection, starting at the pos-th,
     in the collection buffer.

nextPut: anObject
     Store anObject as the next item in the receiver. Grow the
     collection if necessary

readStream
     Answer a ReadStream on the same contents as the receiver

reverseContents
     Returns a collection of the same type that the stream accesses, up
     to and including the final element, but in reverse order.



File: gst-base.info,  Node: WriteStream-positioning,  Prev: WriteStream-accessing-writing,  Up: WriteStream

1.223.3 WriteStream: positioning
--------------------------------

emptyStream
     Extension - Reset the stream



File: gst-base.info,  Node: ZeroDivide,  Prev: WriteStream,  Up: Base classes

1.224 ZeroDivide
================

Defined in namespace Smalltalk
Superclass: ArithmeticError
Category: Language-Exceptions
     A ZeroDivide exception is raised by numeric classes when a program
     tries to divide by zero.  Information on the dividend is available
     to the handler.

* Menu:

* ZeroDivide class-instance creation::  (class)
* ZeroDivide-accessing::  (instance)
* ZeroDivide-description::  (instance)


File: gst-base.info,  Node: ZeroDivide class-instance creation,  Next: ZeroDivide-accessing,  Up: ZeroDivide

1.224.1 ZeroDivide class: instance creation
-------------------------------------------

dividend: aNumber
     Create a new ZeroDivide object remembering that the dividend was
     aNumber.

new
     Create a new ZeroDivide object; the dividend is conventionally set
     to zero.



File: gst-base.info,  Node: ZeroDivide-accessing,  Next: ZeroDivide-description,  Prev: ZeroDivide class-instance creation,  Up: ZeroDivide

1.224.2 ZeroDivide: accessing
-----------------------------

dividend
     Answer the number that was being divided by zero



File: gst-base.info,  Node: ZeroDivide-description,  Prev: ZeroDivide-accessing,  Up: ZeroDivide

1.224.3 ZeroDivide: description
-------------------------------

description
     Answer a textual description of the exception.



File: gst-base.info,  Node: Class index,  Next: Method index,  Prev: Base classes,  Up: Top

Class index
***********

 [index ]
* Menu:

* AbstractNamespace:                     AbstractNamespace.     (line 6)
* AlternativeObjectProxy:                AlternativeObjectProxy.
                                                                (line 6)
* ArithmeticError:                       ArithmeticError.       (line 6)
* Array:                                 Array.                 (line 6)
* ArrayedCollection:                     ArrayedCollection.     (line 6)
* Association:                           Association.           (line 6)
* Autoload:                              Autoload.              (line 6)
* Bag:                                   Bag.                   (line 6)
* Behavior:                              Behavior.              (line 6)
* BindingDictionary:                     BindingDictionary.     (line 6)
* BlockClosure:                          BlockClosure.          (line 6)
* BlockContext:                          BlockContext.          (line 6)
* Boolean:                               Boolean.               (line 6)
* ByteArray:                             ByteArray.             (line 6)
* CAggregate:                            CAggregate.            (line 6)
* CallinProcess:                         CallinProcess.         (line 6)
* CArray:                                CArray.                (line 6)
* CArrayCType:                           CArrayCType.           (line 6)
* CBoolean:                              CBoolean.              (line 6)
* CByte:                                 CByte.                 (line 6)
* CCallable:                             CCallable.             (line 6)
* CCallbackDescriptor:                   CCallbackDescriptor.   (line 6)
* CChar:                                 CChar.                 (line 6)
* CCompound:                             CCompound.             (line 6)
* CDouble:                               CDouble.               (line 6)
* CFloat:                                CFloat.                (line 6)
* CFunctionDescriptor:                   CFunctionDescriptor.   (line 6)
* Character:                             Character.             (line 6)
* CharacterArray:                        CharacterArray.        (line 6)
* CInt:                                  CInt.                  (line 6)
* Class:                                 Class.                 (line 6)
* ClassDescription:                      ClassDescription.      (line 6)
* CLong:                                 CLong.                 (line 6)
* CLongDouble:                           CLongDouble.           (line 6)
* CLongLong:                             CLongLong.             (line 6)
* CObject:                               CObject.               (line 6)
* Collection:                            Collection.            (line 6)
* CompiledBlock:                         CompiledBlock.         (line 6)
* CompiledCode:                          CompiledCode.          (line 6)
* CompiledMethod:                        CompiledMethod.        (line 6)
* ContextPart:                           ContextPart.           (line 6)
* Continuation:                          Continuation.          (line 6)
* CPtr:                                  CPtr.                  (line 6)
* CPtrCType:                             CPtrCType.             (line 6)
* CScalar:                               CScalar.               (line 6)
* CScalarCType:                          CScalarCType.          (line 6)
* CShort:                                CShort.                (line 6)
* CSmalltalk:                            CSmalltalk.            (line 6)
* CString:                               CString.               (line 6)
* CStringCType:                          CStringCType.          (line 6)
* CStruct:                               CStruct.               (line 6)
* CType:                                 CType.                 (line 6)
* CUChar:                                CUChar.                (line 6)
* CUInt:                                 CUInt.                 (line 6)
* CULong:                                CULong.                (line 6)
* CULongLong:                            CULongLong.            (line 6)
* CUnion:                                CUnion.                (line 6)
* CUShort:                               CUShort.               (line 6)
* Date:                                  Date.                  (line 6)
* DateTime:                              DateTime.              (line 6)
* DeferredVariableBinding:               DeferredVariableBinding.
                                                                (line 6)
* Delay:                                 Delay.                 (line 6)
* DelayedAdaptor:                        DelayedAdaptor.        (line 6)
* Dictionary:                            Dictionary.            (line 6)
* DirectedMessage:                       DirectedMessage.       (line 6)
* Directory:                             Directory.             (line 6)
* DLD:                                   DLD.                   (line 6)
* DumperProxy:                           DumperProxy.           (line 6)
* Duration:                              Duration.              (line 6)
* DynamicVariable:                       DynamicVariable.       (line 6)
* Error:                                 Error.                 (line 6)
* Exception:                             Exception.             (line 6)
* ExceptionSet:                          ExceptionSet.          (line 6)
* False:                                 False.                 (line 6)
* File:                                  File.                  (line 6)
* FileDescriptor:                        FileDescriptor.        (line 6)
* FilePath:                              FilePath.              (line 6)
* FileSegment:                           FileSegment.           (line 6)
* FileStream:                            FileStream.            (line 6)
* Float:                                 Float.                 (line 6)
* FloatD:                                FloatD.                (line 6)
* FloatE:                                FloatE.                (line 6)
* FloatQ:                                FloatQ.                (line 6)
* Fraction:                              Fraction.              (line 6)
* Generator:                             Generator.             (line 6)
* Getopt:                                Getopt.                (line 6)
* Halt:                                  Halt.                  (line 6)
* HashedCollection:                      HashedCollection.      (line 6)
* HomedAssociation:                      HomedAssociation.      (line 6)
* IdentityDictionary:                    IdentityDictionary.    (line 6)
* IdentitySet:                           IdentitySet.           (line 6)
* Integer:                               Integer.               (line 6)
* Interval:                              Interval.              (line 6)
* Iterable:                              Iterable.              (line 6)
* LargeArray:                            LargeArray.            (line 6)
* LargeArrayedCollection:                LargeArrayedCollection.
                                                                (line 6)
* LargeByteArray:                        LargeByteArray.        (line 6)
* LargeInteger:                          LargeInteger.          (line 6)
* LargeNegativeInteger:                  LargeNegativeInteger.  (line 6)
* LargePositiveInteger:                  LargePositiveInteger.  (line 6)
* LargeWordArray:                        LargeWordArray.        (line 6)
* LargeZeroInteger:                      LargeZeroInteger.      (line 6)
* Link:                                  Link.                  (line 6)
* LinkedList:                            LinkedList.            (line 6)
* LookupKey:                             LookupKey.             (line 6)
* LookupTable:                           LookupTable.           (line 6)
* Magnitude:                             Magnitude.             (line 6)
* MappedCollection:                      MappedCollection.      (line 6)
* Memory:                                Memory.                (line 6)
* Message:                               Message.               (line 6)
* MessageNotUnderstood:                  MessageNotUnderstood.  (line 6)
* Metaclass:                             Metaclass.             (line 6)
* MethodContext:                         MethodContext.         (line 6)
* MethodDictionary:                      MethodDictionary.      (line 6)
* MethodInfo:                            MethodInfo.            (line 6)
* Namespace:                             Namespace.             (line 6)
* NetClients.URIResolver:                NetClients.URIResolver.
                                                                (line 6)
* NetClients.URL:                        NetClients.URL.        (line 6)
* Notification:                          Notification.          (line 6)
* NullProxy:                             NullProxy.             (line 6)
* NullValueHolder:                       NullValueHolder.       (line 6)
* Number:                                Number.                (line 6)
* Object:                                Object.                (line 6)
* ObjectDumper:                          ObjectDumper.          (line 6)
* ObjectMemory:                          ObjectMemory.          (line 6)
* OrderedCollection:                     OrderedCollection.     (line 6)
* Package:                               Package.               (line 6)
* PackageLoader:                         PackageLoader.         (line 6)
* Permission:                            Permission.            (line 6)
* PluggableAdaptor:                      PluggableAdaptor.      (line 6)
* PluggableProxy:                        PluggableProxy.        (line 6)
* Point:                                 Point.                 (line 6)
* PositionableStream:                    PositionableStream.    (line 6)
* Process:                               Process.               (line 6)
* ProcessEnvironment:                    ProcessEnvironment.    (line 6)
* ProcessorScheduler:                    ProcessorScheduler.    (line 6)
* ProcessVariable:                       ProcessVariable.       (line 6)
* Promise:                               Promise.               (line 6)
* Random:                                Random.                (line 6)
* ReadStream:                            ReadStream.            (line 6)
* ReadWriteStream:                       ReadWriteStream.       (line 6)
* Rectangle:                             Rectangle.             (line 6)
* RecursionLock:                         RecursionLock.         (line 6)
* Regex:                                 Regex.                 (line 6)
* RegexResults:                          RegexResults.          (line 6)
* RootNamespace:                         RootNamespace.         (line 6)
* RunArray:                              RunArray.              (line 6)
* ScaledDecimal:                         ScaledDecimal.         (line 6)
* SecurityPolicy:                        SecurityPolicy.        (line 6)
* Semaphore:                             Semaphore.             (line 6)
* SequenceableCollection:                SequenceableCollection.
                                                                (line 6)
* Set:                                   Set.                   (line 6)
* SharedQueue:                           SharedQueue.           (line 6)
* SingletonProxy:                        SingletonProxy.        (line 6)
* SmallInteger:                          SmallInteger.          (line 6)
* SortedCollection:                      SortedCollection.      (line 6)
* Stream:                                Stream.                (line 6)
* String:                                String.                (line 6)
* Symbol:                                Symbol.                (line 6)
* SymLink:                               SymLink.               (line 6)
* SystemDictionary:                      SystemDictionary.      (line 6)
* SystemExceptions.AlreadyDefined:       SystemExceptions.AlreadyDefined.
                                                                (line 6)
* SystemExceptions.ArgumentOutOfRange:   SystemExceptions.ArgumentOutOfRange.
                                                                (line 6)
* SystemExceptions.BadReturn:            SystemExceptions.BadReturn.
                                                                (line 6)
* SystemExceptions.CInterfaceError:      SystemExceptions.CInterfaceError.
                                                                (line 6)
* SystemExceptions.EmptyCollection:      SystemExceptions.EmptyCollection.
                                                                (line 6)
* SystemExceptions.EndOfStream:          SystemExceptions.EndOfStream.
                                                                (line 6)
* SystemExceptions.FileError:            SystemExceptions.FileError.
                                                                (line 6)
* SystemExceptions.IndexOutOfRange:      SystemExceptions.IndexOutOfRange.
                                                                (line 6)
* SystemExceptions.InvalidArgument:      SystemExceptions.InvalidArgument.
                                                                (line 6)
* SystemExceptions.InvalidProcessState:  SystemExceptions.InvalidProcessState.
                                                                (line 6)
* SystemExceptions.InvalidSize:          SystemExceptions.InvalidSize.
                                                                (line 6)
* SystemExceptions.InvalidState:         SystemExceptions.InvalidState.
                                                                (line 6)
* SystemExceptions.InvalidValue:         SystemExceptions.InvalidValue.
                                                                (line 6)
* SystemExceptions.MustBeBoolean:        SystemExceptions.MustBeBoolean.
                                                                (line 6)
* SystemExceptions.MutationError:        SystemExceptions.MutationError.
                                                                (line 6)
* SystemExceptions.NoRunnableProcess:    SystemExceptions.NoRunnableProcess.
                                                                (line 6)
* SystemExceptions.NotEnoughElements:    SystemExceptions.NotEnoughElements.
                                                                (line 6)
* SystemExceptions.NotFound:             SystemExceptions.NotFound.
                                                                (line 6)
* SystemExceptions.NotImplemented:       SystemExceptions.NotImplemented.
                                                                (line 6)
* SystemExceptions.NotIndexable:         SystemExceptions.NotIndexable.
                                                                (line 6)
* SystemExceptions.NotYetImplemented:    SystemExceptions.NotYetImplemented.
                                                                (line 6)
* SystemExceptions.PackageNotAvailable:  SystemExceptions.PackageNotAvailable.
                                                                (line 6)
* SystemExceptions.PrimitiveFailed:      SystemExceptions.PrimitiveFailed.
                                                                (line 6)
* SystemExceptions.ProcessBeingTerminated: SystemExceptions.ProcessBeingTerminated.
                                                                (line 6)
* SystemExceptions.ProcessTerminated:    SystemExceptions.ProcessTerminated.
                                                                (line 6)
* SystemExceptions.ReadOnlyObject:       SystemExceptions.ReadOnlyObject.
                                                                (line 6)
* SystemExceptions.SecurityError:        SystemExceptions.SecurityError.
                                                                (line 6)
* SystemExceptions.ShouldNotImplement:   SystemExceptions.ShouldNotImplement.
                                                                (line 6)
* SystemExceptions.SubclassResponsibility: SystemExceptions.SubclassResponsibility.
                                                                (line 6)
* SystemExceptions.UnhandledException:   SystemExceptions.UnhandledException.
                                                                (line 6)
* SystemExceptions.UserInterrupt:        SystemExceptions.UserInterrupt.
                                                                (line 6)
* SystemExceptions.VerificationError:    SystemExceptions.VerificationError.
                                                                (line 6)
* SystemExceptions.VMError:              SystemExceptions.VMError.
                                                                (line 6)
* SystemExceptions.WrongArgumentCount:   SystemExceptions.WrongArgumentCount.
                                                                (line 6)
* SystemExceptions.WrongClass:           SystemExceptions.WrongClass.
                                                                (line 6)
* SystemExceptions.WrongMessageSent:     SystemExceptions.WrongMessageSent.
                                                                (line 6)
* TextCollector:                         TextCollector.         (line 6)
* Time:                                  Time.                  (line 6)
* True:                                  True.                  (line 6)
* UndefinedObject:                       UndefinedObject.       (line 6)
* UnicodeCharacter:                      UnicodeCharacter.      (line 6)
* UnicodeString:                         UnicodeString.         (line 6)
* ValueAdaptor:                          ValueAdaptor.          (line 6)
* ValueHolder:                           ValueHolder.           (line 6)
* VariableBinding:                       VariableBinding.       (line 6)
* VersionableObjectProxy:                VersionableObjectProxy.
                                                                (line 6)
* VFS.ArchiveFile:                       VFS.ArchiveFile.       (line 6)
* VFS.ArchiveMember:                     VFS.ArchiveMember.     (line 6)
* VFS.FileWrapper:                       VFS.FileWrapper.       (line 6)
* VFS.StoredZipMember:                   VFS.StoredZipMember.   (line 6)
* VFS.TmpFileArchiveMember:              VFS.TmpFileArchiveMember.
                                                                (line 6)
* VFS.ZipFile:                           VFS.ZipFile.           (line 6)
* Warning:                               Warning.               (line 6)
* WeakArray:                             WeakArray.             (line 6)
* WeakIdentitySet:                       WeakIdentitySet.       (line 6)
* WeakKeyDictionary:                     WeakKeyDictionary.     (line 6)
* WeakKeyIdentityDictionary:             WeakKeyIdentityDictionary.
                                                                (line 6)
* WeakSet:                               WeakSet.               (line 6)
* WeakValueIdentityDictionary:           WeakValueIdentityDictionary.
                                                                (line 6)
* WeakValueLookupTable:                  WeakValueLookupTable.  (line 6)
* WordArray:                             WordArray.             (line 6)
* WriteStream:                           WriteStream.           (line 6)
* ZeroDivide:                            ZeroDivide.            (line 6)

